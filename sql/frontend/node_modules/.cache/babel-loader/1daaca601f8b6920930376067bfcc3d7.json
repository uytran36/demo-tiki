{"ast":null,"code":"var _jsxFileName = \"D:\\\\LECONS-KHTN\\\\CSDL Avanc\\xE9\\\\TH\\\\sqlindex2\\\\sql\\\\frontend\\\\src\\\\pages\\\\nhaban\\\\components\\\\dsSanPham.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect, useRef } from \"react\";\nimport { Table, Input, Button, Popconfirm, Form, Typography, Row, Col } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditableContext = /*#__PURE__*/React.createContext(null);\nconst {\n  Title\n} = Typography;\n\nconst EditableRow = ({\n  index,\n  ...props\n}) => {\n  _s();\n\n  const [form] = Form.useForm();\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    component: false,\n    children: /*#__PURE__*/_jsxDEV(EditableContext.Provider, {\n      value: form,\n      children: /*#__PURE__*/_jsxDEV(\"tr\", { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditableRow, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = EditableRow;\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  ...restProps\n}) => {\n  _s2();\n\n  const [editing, setEditing] = useState(false);\n  const inputRef = useRef(null);\n  const form = useContext(EditableContext);\n  useEffect(() => {\n    if (editing) {\n      inputRef.current.focus();\n    }\n  }, [editing]);\n\n  const toggleEdit = () => {\n    setEditing(!editing);\n    form.setFieldsValue({\n      [dataIndex]: record[dataIndex]\n    });\n  };\n\n  const save = async () => {\n    try {\n      const values = await form.validateFields();\n      toggleEdit();\n      handleSave({ ...record,\n        ...values\n      });\n    } catch (errInfo) {\n      console.log(\"Save failed:\", errInfo);\n    }\n  };\n\n  let childNode = children;\n\n  if (editable) {\n    childNode = editing ? /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        margin: 0\n      },\n      name: dataIndex,\n      rules: [{\n        required: true,\n        message: `${title} is required.`\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        ref: inputRef,\n        onPressEnter: save,\n        onBlur: save\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editable-cell-value-wrap\",\n      style: {\n        paddingRight: 24\n      },\n      onClick: toggleEdit,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"td\", { ...restProps,\n    children: childNode\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 10\n  }, this);\n};\n\n_s2(EditableCell, \"IMw7TsWhFd8T/FybyizRtPpww8A=\");\n\n_c2 = EditableCell;\n\nclass DoanhThu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDelete = key => {\n      const dataSource = [...this.state.dataSource];\n      this.setState({\n        dataSource: dataSource.filter(item => item.key !== key)\n      });\n    };\n\n    this.handleAdd = () => {\n      const {\n        count,\n        dataSource\n      } = this.state;\n      const newData = {\n        key: count,\n        name: `Edward King ${count}`,\n        age: \"32\",\n        address: `London, Park Lane no. ${count}`\n      };\n      this.setState({\n        dataSource: [...dataSource, newData],\n        count: count + 1\n      });\n    };\n\n    this.handleSave = row => {\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => row.key === item.key);\n      const item = newData[index];\n      newData.splice(index, 1, { ...item,\n        ...row\n      });\n      this.setState({\n        dataSource: newData\n      });\n    };\n\n    this.columns = [{\n      title: \"Mã Sản Phẩm\",\n      dataIndex: \"MaSP\",\n      width: \"10%\"\n    }, {\n      title: \"Tên Sản Phẩm\",\n      dataIndex: \"TenSP\",\n      editable: true\n    }, {\n      title: \"Loại Sản Phẩm\",\n      dataIndex: \"HoaHog\",\n      editable: true\n    }, {\n      title: \"Số lượng tồn\",\n      dataIndex: \"SLTon\",\n      editable: true\n    }, {\n      title: \"Giá Bán\",\n      dataIndex: \"GiaBan\",\n      editable: true\n    }, {\n      title: \"Giá Giảm\",\n      dataIndex: \"GiaGiam\",\n      editable: true\n    }, {\n      title: \"Thành Tiền\",\n      dataIndex: \"TTien\"\n    }, {\n      title: \"Hoa Hồng\",\n      dataIndex: \"HoaHog\",\n      editable: true\n    }, {\n      title: \"Mô tả\",\n      dataIndex: \"MoTa\",\n      width: \"20%\",\n      editable: true\n    }, {\n      title: \"\",\n      dataIndex: \"operation\",\n      render: (_, record) => this.state.dataSource.length >= 1 ? /*#__PURE__*/_jsxDEV(Popconfirm, {\n        title: \"Sure to delete?\",\n        onConfirm: () => this.handleDelete(record.key),\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this) : null\n    }];\n    this.state = {\n      dataSource: [{\n        MaSP: \"0\",\n        TenSP: \"Edward King 0\",\n        SLTon: \"32\",\n        GiaBan: \"32\",\n        GiaGiam: \"32\",\n        TTien: \"32\",\n        HoaHog: \"32\",\n        MoTa: \"32\"\n      }, {\n        MaSP: \"1\",\n        TenSP: \"Edward King 0\",\n        SLTon: \"32\",\n        GiaBan: \"32\",\n        GiaGiam: \"32\",\n        TTien: \"32\",\n        HoaHog: \"32\",\n        MoTa: \"32\"\n      }],\n      count: 2\n    };\n  }\n\n  render() {\n    const {\n      dataSource\n    } = this.state;\n    const components = {\n      body: {\n        row: EditableRow,\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return { ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      };\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Title, {\n              level: 2,\n              children: \"Danh S\\xE1ch S\\u1EA3n Ph\\u1EA9m\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              className: \"btnCreateDSSP\",\n              children: \"T\\u1EA1o S\\u1EA3n Ph\\u1EA9m\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          components: components,\n          rowClassName: () => \"editable-row\",\n          bordered: true,\n          dataSource: dataSource,\n          columns: columns\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default DoanhThu;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditableRow\");\n$RefreshReg$(_c2, \"EditableCell\");","map":{"version":3,"sources":["D:/LECONS-KHTN/CSDL Avancé/TH/sqlindex2/sql/frontend/src/pages/nhaban/components/dsSanPham.js"],"names":["React","useContext","useState","useEffect","useRef","Table","Input","Button","Popconfirm","Form","Typography","Row","Col","EditableContext","createContext","Title","EditableRow","index","props","form","useForm","EditableCell","title","editable","children","dataIndex","record","handleSave","restProps","editing","setEditing","inputRef","current","focus","toggleEdit","setFieldsValue","save","values","validateFields","errInfo","console","log","childNode","margin","required","message","paddingRight","DoanhThu","Component","constructor","handleDelete","key","dataSource","state","setState","filter","item","handleAdd","count","newData","name","age","address","row","findIndex","splice","columns","width","render","_","length","MaSP","TenSP","SLTon","GiaBan","GiaGiam","TTien","HoaHog","MoTa","components","body","cell","map","col","onCell"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Table,\r\n  Input,\r\n  Button,\r\n  Popconfirm,\r\n  Form,\r\n  Typography,\r\n  Row,\r\n  Col,\r\n} from \"antd\";\r\nconst EditableContext = React.createContext(null);\r\nconst { Title } = Typography;\r\nconst EditableRow = ({ index, ...props }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n      </EditableContext.Provider>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst EditableCell = ({\r\n  title,\r\n  editable,\r\n  children,\r\n  dataIndex,\r\n  record,\r\n  handleSave,\r\n  ...restProps\r\n}) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const inputRef = useRef(null);\r\n  const form = useContext(EditableContext);\r\n  useEffect(() => {\r\n    if (editing) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const toggleEdit = () => {\r\n    setEditing(!editing);\r\n    form.setFieldsValue({\r\n      [dataIndex]: record[dataIndex],\r\n    });\r\n  };\r\n\r\n  const save = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    } catch (errInfo) {\r\n      console.log(\"Save failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  let childNode = children;\r\n\r\n  if (editable) {\r\n    childNode = editing ? (\r\n      <Form.Item\r\n        style={{\r\n          margin: 0,\r\n        }}\r\n        name={dataIndex}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: `${title} is required.`,\r\n          },\r\n        ]}\r\n      >\r\n        <Input ref={inputRef} onPressEnter={save} onBlur={save} />\r\n      </Form.Item>\r\n    ) : (\r\n      <div\r\n        className=\"editable-cell-value-wrap\"\r\n        style={{\r\n          paddingRight: 24,\r\n        }}\r\n        onClick={toggleEdit}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nclass DoanhThu extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: \"Mã Sản Phẩm\",\r\n        dataIndex: \"MaSP\",\r\n        width: \"10%\",\r\n      },\r\n      {\r\n        title: \"Tên Sản Phẩm\",\r\n        dataIndex: \"TenSP\",\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"Loại Sản Phẩm\",\r\n        dataIndex: \"HoaHog\",\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"Số lượng tồn\",\r\n        dataIndex: \"SLTon\",\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"Giá Bán\",\r\n        dataIndex: \"GiaBan\",\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"Giá Giảm\",\r\n        dataIndex: \"GiaGiam\",\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"Thành Tiền\",\r\n        dataIndex: \"TTien\",\r\n      },\r\n      {\r\n        title: \"Hoa Hồng\",\r\n        dataIndex: \"HoaHog\",\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"Mô tả\",\r\n        dataIndex: \"MoTa\",\r\n        width: \"20%\",\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"operation\",\r\n        render: (_, record) =>\r\n          this.state.dataSource.length >= 1 ? (\r\n            <Popconfirm\r\n              title=\"Sure to delete?\"\r\n              onConfirm={() => this.handleDelete(record.key)}\r\n            >\r\n              <a>Delete</a>\r\n            </Popconfirm>\r\n          ) : null,\r\n      },\r\n    ];\r\n    this.state = {\r\n      dataSource: [\r\n        {\r\n          MaSP: \"0\",\r\n          TenSP: \"Edward King 0\",\r\n          SLTon: \"32\",\r\n          GiaBan: \"32\",\r\n          GiaGiam: \"32\",\r\n          TTien: \"32\",\r\n          HoaHog: \"32\",\r\n          MoTa: \"32\",\r\n        },\r\n        {\r\n          MaSP: \"1\",\r\n          TenSP: \"Edward King 0\",\r\n          SLTon: \"32\",\r\n          GiaBan: \"32\",\r\n          GiaGiam: \"32\",\r\n          TTien: \"32\",\r\n          HoaHog: \"32\",\r\n          MoTa: \"32\",\r\n        },\r\n      ],\r\n      count: 2,\r\n    };\r\n  }\r\n\r\n  handleDelete = (key) => {\r\n    const dataSource = [...this.state.dataSource];\r\n    this.setState({\r\n      dataSource: dataSource.filter((item) => item.key !== key),\r\n    });\r\n  };\r\n  handleAdd = () => {\r\n    const { count, dataSource } = this.state;\r\n    const newData = {\r\n      key: count,\r\n      name: `Edward King ${count}`,\r\n      age: \"32\",\r\n      address: `London, Park Lane no. ${count}`,\r\n    };\r\n    this.setState({\r\n      dataSource: [...dataSource, newData],\r\n      count: count + 1,\r\n    });\r\n  };\r\n  handleSave = (row) => {\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex((item) => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, { ...item, ...row });\r\n    this.setState({\r\n      dataSource: newData,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n\r\n      return {\r\n        ...col,\r\n        onCell: (record) => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          handleSave: this.handleSave,\r\n        }),\r\n      };\r\n    });\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Row>\r\n            <Col>\r\n              <Title level={2}>Danh Sách Sản Phẩm</Title>\r\n            </Col>\r\n            <Col>\r\n              <Button type=\"primary\" className=\"btnCreateDSSP\">\r\n                Tạo Sản Phẩm\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <div></div>\r\n        <div>\r\n          <Table\r\n            components={components}\r\n            rowClassName={() => \"editable-row\"}\r\n            bordered\r\n            dataSource={dataSource}\r\n            columns={columns}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DoanhThu;\r\n"]},"metadata":{},"sourceType":"module"}