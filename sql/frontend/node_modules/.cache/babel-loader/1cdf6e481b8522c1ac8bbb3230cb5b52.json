{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport GroupComponent from '../abstract/group-component';\nimport { getCirclePoint } from '../util/util';\n\nvar ArcAnnotation =\n/** @class */\nfunction (_super) {\n  __extends(ArcAnnotation, _super);\n\n  function ArcAnnotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * @protected\r\n   * 默认的配置项\r\n   * @returns {object} 默认的配置项\r\n   */\n\n\n  ArcAnnotation.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n\n    return __assign(__assign({}, cfg), {\n      name: 'annotation',\n      type: 'arc',\n      locationType: 'circle',\n      center: null,\n      radius: 100,\n      startAngle: -Math.PI / 2,\n      endAngle: Math.PI * 3 / 2,\n      style: {\n        stroke: '#999',\n        lineWidth: 1\n      }\n    });\n  };\n\n  ArcAnnotation.prototype.renderInner = function (group) {\n    this.renderArc(group);\n  };\n\n  ArcAnnotation.prototype.getArcPath = function () {\n    var _a = this.getLocation(),\n        center = _a.center,\n        radius = _a.radius,\n        startAngle = _a.startAngle,\n        endAngle = _a.endAngle;\n\n    var startPoint = getCirclePoint(center, radius, startAngle);\n    var endPoint = getCirclePoint(center, radius, endAngle);\n    var largeFlag = endAngle - startAngle > Math.PI ? 1 : 0;\n    var path = [['M', startPoint.x, startPoint.y]];\n\n    if (endAngle - startAngle === Math.PI * 2) {\n      // 整个圆是分割成两个圆\n      var middlePoint = getCirclePoint(center, radius, startAngle + Math.PI);\n      path.push(['A', radius, radius, 0, largeFlag, 1, middlePoint.x, middlePoint.y]);\n      path.push(['A', radius, radius, 0, largeFlag, 1, endPoint.x, endPoint.y]);\n    } else {\n      path.push(['A', radius, radius, 0, largeFlag, 1, endPoint.x, endPoint.y]);\n    }\n\n    return path;\n  }; // 绘制 arc\n\n\n  ArcAnnotation.prototype.renderArc = function (group) {\n    // 也可以 通过 get('center') 类似的方式逐个获取\n    var path = this.getArcPath();\n    var style = this.get('style');\n    this.addShape(group, {\n      type: 'path',\n      id: this.getElementId('arc'),\n      name: 'annotation-arc',\n      attrs: __assign({\n        path: path\n      }, style)\n    });\n  };\n\n  return ArcAnnotation;\n}(GroupComponent);\n\nexport default ArcAnnotation;","map":{"version":3,"sources":["../../src/annotation/arc.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends } from \"tslib\";\r\nimport GroupComponent from '../abstract/group-component';\r\nimport { getCirclePoint } from '../util/util';\r\nvar ArcAnnotation = /** @class */ (function (_super) {\r\n    __extends(ArcAnnotation, _super);\r\n    function ArcAnnotation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @protected\r\n     * 默认的配置项\r\n     * @returns {object} 默认的配置项\r\n     */\r\n    ArcAnnotation.prototype.getDefaultCfg = function () {\r\n        var cfg = _super.prototype.getDefaultCfg.call(this);\r\n        return __assign(__assign({}, cfg), { name: 'annotation', type: 'arc', locationType: 'circle', center: null, radius: 100, startAngle: -Math.PI / 2, endAngle: (Math.PI * 3) / 2, style: {\r\n                stroke: '#999',\r\n                lineWidth: 1,\r\n            } });\r\n    };\r\n    ArcAnnotation.prototype.renderInner = function (group) {\r\n        this.renderArc(group);\r\n    };\r\n    ArcAnnotation.prototype.getArcPath = function () {\r\n        var _a = this.getLocation(), center = _a.center, radius = _a.radius, startAngle = _a.startAngle, endAngle = _a.endAngle;\r\n        var startPoint = getCirclePoint(center, radius, startAngle);\r\n        var endPoint = getCirclePoint(center, radius, endAngle);\r\n        var largeFlag = endAngle - startAngle > Math.PI ? 1 : 0;\r\n        var path = [['M', startPoint.x, startPoint.y]];\r\n        if (endAngle - startAngle === Math.PI * 2) {\r\n            // 整个圆是分割成两个圆\r\n            var middlePoint = getCirclePoint(center, radius, startAngle + Math.PI);\r\n            path.push(['A', radius, radius, 0, largeFlag, 1, middlePoint.x, middlePoint.y]);\r\n            path.push(['A', radius, radius, 0, largeFlag, 1, endPoint.x, endPoint.y]);\r\n        }\r\n        else {\r\n            path.push(['A', radius, radius, 0, largeFlag, 1, endPoint.x, endPoint.y]);\r\n        }\r\n        return path;\r\n    };\r\n    // 绘制 arc\r\n    ArcAnnotation.prototype.renderArc = function (group) {\r\n        // 也可以 通过 get('center') 类似的方式逐个获取\r\n        var path = this.getArcPath();\r\n        var style = this.get('style');\r\n        this.addShape(group, {\r\n            type: 'path',\r\n            id: this.getElementId('arc'),\r\n            name: 'annotation-arc',\r\n            attrs: __assign({ path: path }, style),\r\n        });\r\n    };\r\n    return ArcAnnotation;\r\n}(GroupComponent));\r\nexport default ArcAnnotation;\r\n//# sourceMappingURL=arc.js.map"]},"metadata":{},"sourceType":"module"}