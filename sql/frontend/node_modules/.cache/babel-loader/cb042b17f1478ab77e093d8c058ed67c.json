{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { Action, Util } from '@antv/g2';\nimport { get, last, isNil } from '@antv/util';\nimport { deepAssign } from '../../utils/deep-assign'; // 面包屑文字和分割符'/'之间的距离\n\nvar PADDING = 4; // 面包屑位置距离树图的距离\n\nvar PADDING_LEFT = 0; // 面包屑位置距离树图的顶部距离\n\nexport var PADDING_TOP = 5;\n/** Group name of breadCrumb: 面包屑 */\n\nexport var BREAD_CRUMB_NAME = 'drilldown-bread-crumb'; // 面包屑默认配置\n\nexport var DEFAULT_BREAD_CRUMB_CONFIG = {\n  /** 位置，默认：左上角 */\n  position: 'top-left',\n  dividerText: '/',\n  textStyle: {\n    fontSize: 12,\n    fill: 'rgba(0, 0, 0, 0.65)',\n    cursor: 'pointer'\n  },\n  activeTextStyle: {\n    fill: '#87B5FF'\n  }\n};\n/**\r\n * hierarchy 数据转换的参数\r\n */\n\nexport var HIERARCHY_DATA_TRANSFORM_PARAMS = 'hierarchy-data-transform-params';\n/**\r\n * @description 下钻交互的 action\r\n * @author liuzhenying\r\n *\r\n * 适用于：hierarchy plot\r\n */\n\nvar DrillDownAction =\n/** @class */\nfunction (_super) {\n  __extends(DrillDownAction, _super);\n\n  function DrillDownAction() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** Action name */\n\n\n    _this.name = 'drill-down'; // 存储历史下钻数据\n\n    _this.historyCache = []; // 面包屑 group\n\n    _this.breadCrumbGroup = null; // 面包屑基础配置\n\n    _this.breadCrumbCfg = DEFAULT_BREAD_CRUMB_CONFIG;\n    return _this;\n  }\n  /**\r\n   * 点击事件, 下钻数据，并绘制面包屑\r\n   */\n\n\n  DrillDownAction.prototype.click = function () {\n    var data = get(this.context, ['event', 'data', 'data']);\n    if (!data) return false;\n    this.drill(data);\n    this.drawBreadCrumb();\n  };\n  /**\r\n   * 重置位置，初始化及触发 chart  afterchangesize 回调时使用\r\n   */\n\n\n  DrillDownAction.prototype.resetPosition = function () {\n    // 当在第一层级未绘制面包屑，此时 changedata 触发 resetPosition 函数，需判断 this.breadCrumbGroup 是否存在\n    if (!this.breadCrumbGroup) return;\n    var coordinate = this.context.view.getCoordinate();\n    var breadCrumbGroup = this.breadCrumbGroup;\n    var bbox = breadCrumbGroup.getBBox();\n    var position = this.getButtonCfg().position; // @todo 后续抽取一个函数来处理，以及增加 margin 或者 padding 的设置\n    // 非 polar 的，需要使用 coordinate，除却图表组件\n\n    var point = {\n      x: coordinate.start.x,\n      y: coordinate.end.y - (bbox.height + PADDING_TOP * 2)\n    };\n\n    if (coordinate.isPolar) {\n      // 默认，左上角直接出发\n      point = {\n        x: 0,\n        y: 0\n      };\n    }\n\n    if (position === 'bottom-left') {\n      // 涉及到坐标反转的问题\n      point = {\n        x: coordinate.start.x,\n        y: coordinate.start.y\n      };\n    }\n    /** PADDING_LEFT, PADDING_TOP 与画布边缘的距离 */\n\n\n    var matrix = Util.transform(null, [['t', point.x + PADDING_LEFT, point.y + bbox.height + PADDING_TOP]]);\n    breadCrumbGroup.setMatrix(matrix);\n  };\n  /**\r\n   * 重置\r\n   */\n\n\n  DrillDownAction.prototype.reset = function () {\n    if (this.historyCache[0]) {\n      this.back(this.historyCache.slice(0, 1));\n    } // 清空\n\n\n    this.historyCache = [];\n    this.hideCrumbGroup();\n  };\n  /**\r\n   * 下钻数据并更新 view 显示层\r\n   * @param nodeInfo 下钻数据\r\n   */\n\n\n  DrillDownAction.prototype.drill = function (nodeInfo) {\n    var view = this.context.view;\n    var transformData = get(view, ['interactions', 'drill-down', 'cfg', 'transformData'], function (v) {\n      return v;\n    }); // 重新 update 数据\n\n    var drillData = transformData(__assign({\n      data: nodeInfo.data\n    }, nodeInfo[HIERARCHY_DATA_TRANSFORM_PARAMS]));\n    view.changeData(drillData); // 存储历史记录\n\n    var historyCache = [];\n    var node = nodeInfo;\n\n    while (node) {\n      var nodeData = node.data;\n      historyCache.unshift({\n        id: nodeData.name + \"_\" + node.height + \"_\" + node.depth,\n        name: nodeData.name,\n        // children 是实际数据\n        children: transformData(__assign({\n          data: nodeData\n        }, nodeInfo[HIERARCHY_DATA_TRANSFORM_PARAMS]))\n      });\n      node = node.parent;\n    }\n\n    this.historyCache = (this.historyCache || []).slice(0, -1).concat(historyCache);\n  };\n  /**\r\n   * 回退事件，点击面包屑时触发\r\n   * @param historyCache 当前要回退到的历史\r\n   */\n\n\n  DrillDownAction.prototype.back = function (historyCache) {\n    if (!historyCache || historyCache.length <= 0) {\n      return;\n    }\n\n    var view = this.context.view;\n    var data = last(historyCache).children; // 处理后的数组\n\n    view.changeData(data);\n\n    if (historyCache.length > 1) {\n      this.historyCache = historyCache;\n      this.drawBreadCrumb();\n    } else {\n      // 清空\n      this.historyCache = [];\n      this.hideCrumbGroup();\n    }\n  };\n  /**\r\n   * 获取 mix 默认的配置和用户配置\r\n   */\n\n\n  DrillDownAction.prototype.getButtonCfg = function () {\n    var view = this.context.view;\n    var drillDownConfig = get(view, ['interactions', 'drill-down', 'cfg', 'drillDownConfig']);\n    return deepAssign(this.breadCrumbCfg, drillDownConfig === null || drillDownConfig === void 0 ? void 0 : drillDownConfig.breadCrumb, this.cfg);\n  };\n  /**\r\n   * 显示面包屑\r\n   */\n\n\n  DrillDownAction.prototype.drawBreadCrumb = function () {\n    this.drawBreadCrumbGroup();\n    this.resetPosition();\n    this.breadCrumbGroup.show();\n  };\n  /**\r\n   * 绘制 Button 和 文本\r\n   */\n\n\n  DrillDownAction.prototype.drawBreadCrumbGroup = function () {\n    var _this = this;\n\n    var config = this.getButtonCfg();\n    var cache = this.historyCache; // 初始化面包屑 group\n\n    if (!this.breadCrumbGroup) {\n      this.breadCrumbGroup = this.context.view.foregroundGroup.addGroup({\n        name: BREAD_CRUMB_NAME\n      });\n    } else {\n      this.breadCrumbGroup.clear();\n    } // 绘制面包屑\n\n\n    var left = 0;\n    cache.forEach(function (record, index) {\n      // 添加文本\n      var textShape = _this.breadCrumbGroup.addShape({\n        type: 'text',\n        id: record.id,\n        name: BREAD_CRUMB_NAME + \"_\" + record.name + \"_text\",\n        attrs: __assign(__assign({\n          text: index === 0 && !isNil(config.rootText) ? config.rootText : record.name\n        }, config.textStyle), {\n          x: left,\n          y: 0\n        })\n      });\n\n      var textShapeBox = textShape.getBBox();\n      left += textShapeBox.width + PADDING; // 增加文本事件\n\n      textShape.on('click', function (event) {\n        var _a;\n\n        var targetId = event.target.get('id');\n\n        if (targetId !== ((_a = last(cache)) === null || _a === void 0 ? void 0 : _a.id)) {\n          var newHistoryCache = cache.slice(0, cache.findIndex(function (d) {\n            return d.id === targetId;\n          }) + 1);\n\n          _this.back(newHistoryCache);\n        }\n      }); // active 效果内置\n\n      textShape.on('mouseenter', function (event) {\n        var _a;\n\n        var targetId = event.target.get('id');\n\n        if (targetId !== ((_a = last(cache)) === null || _a === void 0 ? void 0 : _a.id)) {\n          textShape.attr(config.activeTextStyle);\n        } else {\n          textShape.attr({\n            cursor: 'default'\n          });\n        }\n      });\n      textShape.on('mouseleave', function () {\n        textShape.attr(config.textStyle);\n      });\n\n      if (index < cache.length - 1) {\n        // 添加反斜杠\n        var dividerShape = _this.breadCrumbGroup.addShape({\n          type: 'text',\n          name: config.name + \"_\" + record.name + \"_divider\",\n          attrs: __assign(__assign({\n            text: config.dividerText\n          }, config.textStyle), {\n            x: left,\n            y: 0\n          })\n        });\n\n        var dividerBox = dividerShape.getBBox();\n        left += dividerBox.width + PADDING;\n      }\n    });\n  };\n  /**\r\n   * 隐藏面包屑\r\n   */\n\n\n  DrillDownAction.prototype.hideCrumbGroup = function () {\n    if (this.breadCrumbGroup) {\n      this.breadCrumbGroup.hide();\n    }\n  };\n  /**\r\n   * @override\r\n   * destroy: 销毁资源\r\n   */\n\n\n  DrillDownAction.prototype.destroy = function () {\n    if (this.breadCrumbGroup) {\n      this.breadCrumbGroup.remove();\n    }\n\n    _super.prototype.destroy.call(this);\n  };\n\n  return DrillDownAction;\n}(Action);\n\nexport { DrillDownAction };","map":{"version":3,"sources":["../../../src/interactions/actions/drill-down.ts"],"names":[],"mappings":"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","sourcesContent":["import { Action, IGroup, Util } from '@antv/g2';\nimport { get, last, isNil } from '@antv/util';\nimport { Data } from '../../types';\nimport { DrillDownCfg } from '../../types/drill-down';\nimport { deepAssign } from '../../utils/deep-assign';\n\n// 面包屑文字和分割符'/'之间的距离\nconst PADDING = 4;\n// 面包屑位置距离树图的距离\nconst PADDING_LEFT = 0;\nexport const PADDING_TOP = 5;\n\n/** Group name of breadCrumb: 面包屑 */\nexport const BREAD_CRUMB_NAME = 'drilldown-bread-crumb';\n\n// 面包屑默认配置\nexport const DEFAULT_BREAD_CRUMB_CONFIG: DrillDownCfg['breadCrumb'] = {\n  /** 位置，默认：左上角 */\n  position: 'top-left',\n  dividerText: '/',\n  textStyle: {\n    fontSize: 12,\n    fill: 'rgba(0, 0, 0, 0.65)',\n    cursor: 'pointer',\n  },\n  activeTextStyle: {\n    fill: '#87B5FF',\n  },\n};\n\n/**\n * hierarchy 数据转换的参数\n */\nexport const HIERARCHY_DATA_TRANSFORM_PARAMS = 'hierarchy-data-transform-params';\n\n/**\n * Hierarchy plot 节点的数据\n */\nexport type HierarchyNode<N = any /** 节点 */> = {\n  /** 节点的原始数据，树型结构（todo 是否更正 key 为 origin） */\n  data: { name: string; value?: any; children: { name: string; value?: any }[] };\n  /** 在构建节点数据时候，增加的扩展配置, 用于存储 transformData 的入参配置 */\n  [HIERARCHY_DATA_TRANSFORM_PARAMS]: object;\n  /** 当前的层级结构，每一次下钻都会更新. 不是 unique */\n  depth: number;\n  /** 当前所处高度，depth + height = 总的层级 */\n  height: number;\n  parent: N;\n  children: N[];\n};\n\ntype HistoryCache = {\n  name: string;\n  id: string;\n  children: Data;\n}[];\n\n/**\n * @description 下钻交互的 action\n *\n * 适用于：hierarchy plot\n */\nexport class DrillDownAction extends Action {\n  /** Action name */\n  public name = 'drill-down';\n\n  // 存储历史下钻数据\n  protected historyCache: HistoryCache = [];\n  // 面包屑 group\n  private breadCrumbGroup: IGroup = null;\n  // 面包屑基础配置\n  private breadCrumbCfg: DrillDownCfg['breadCrumb'] = DEFAULT_BREAD_CRUMB_CONFIG;\n\n  /**\n   * 点击事件, 下钻数据，并绘制面包屑\n   */\n  public click() {\n    const data = get(this.context, ['event', 'data', 'data']);\n    if (!data) return false;\n\n    this.drill(data);\n    this.drawBreadCrumb();\n  }\n\n  /**\n   * 重置位置，初始化及触发 chart  afterchangesize 回调时使用\n   */\n  public resetPosition() {\n    // 当在第一层级未绘制面包屑，此时 changedata 触发 resetPosition 函数，需判断 this.breadCrumbGroup 是否存在\n    if (!this.breadCrumbGroup) return;\n    const coordinate = this.context.view.getCoordinate();\n    const breadCrumbGroup = this.breadCrumbGroup;\n    const bbox = breadCrumbGroup.getBBox();\n\n    const { position } = this.getButtonCfg();\n\n    // @todo 后续抽取一个函数来处理，以及增加 margin 或者 padding 的设置\n    // 非 polar 的，需要使用 coordinate，除却图表组件\n    let point = { x: coordinate.start.x, y: coordinate.end.y - (bbox.height + PADDING_TOP * 2) };\n    if (coordinate.isPolar) {\n      // 默认，左上角直接出发\n      point = { x: 0, y: 0 };\n    }\n    if (position === 'bottom-left') {\n      // 涉及到坐标反转的问题\n      point = { x: coordinate.start.x, y: coordinate.start.y };\n    }\n    /** PADDING_LEFT, PADDING_TOP 与画布边缘的距离 */\n    const matrix = Util.transform(null, [['t', point.x + PADDING_LEFT, point.y + bbox.height + PADDING_TOP]]);\n    breadCrumbGroup.setMatrix(matrix);\n  }\n\n  /**\n   * 重置\n   */\n  public reset(): void {\n    if (this.historyCache[0]) {\n      this.back(this.historyCache.slice(0, 1));\n    }\n    // 清空\n    this.historyCache = [];\n    this.hideCrumbGroup();\n  }\n\n  /**\n   * 下钻数据并更新 view 显示层\n   * @param nodeInfo 下钻数据\n   */\n  protected drill(nodeInfo: HierarchyNode) {\n    const { view } = this.context;\n    const transformData = get(view, ['interactions', 'drill-down', 'cfg', 'transformData'], (v) => v);\n\n    // 重新 update 数据\n    const drillData = transformData({ data: nodeInfo.data, ...nodeInfo[HIERARCHY_DATA_TRANSFORM_PARAMS] });\n    view.changeData(drillData);\n\n    // 存储历史记录\n    const historyCache: HistoryCache = [];\n\n    let node = nodeInfo;\n    while (node) {\n      const nodeData = node.data;\n      historyCache.unshift({\n        id: `${nodeData.name}_${node.height}_${node.depth}`,\n        name: nodeData.name,\n        // children 是实际数据\n        children: transformData({ data: nodeData, ...nodeInfo[HIERARCHY_DATA_TRANSFORM_PARAMS] }),\n      });\n      node = node.parent;\n    }\n\n    this.historyCache = (this.historyCache || []).slice(0, -1).concat(historyCache);\n  }\n\n  /**\n   * 回退事件，点击面包屑时触发\n   * @param historyCache 当前要回退到的历史\n   */\n  protected back(historyCache: HistoryCache) {\n    if (!historyCache || historyCache.length <= 0) {\n      return;\n    }\n\n    const { view } = this.context;\n    const data = last(historyCache).children; // 处理后的数组\n    view.changeData(data);\n\n    if (historyCache.length > 1) {\n      this.historyCache = historyCache;\n      this.drawBreadCrumb();\n    } else {\n      // 清空\n      this.historyCache = [];\n      this.hideCrumbGroup();\n    }\n  }\n\n  /**\n   * 获取 mix 默认的配置和用户配置\n   */\n  private getButtonCfg() {\n    const { view } = this.context;\n    const drillDownConfig: DrillDownCfg = get(view, ['interactions', 'drill-down', 'cfg', 'drillDownConfig']);\n\n    return deepAssign(this.breadCrumbCfg, drillDownConfig?.breadCrumb, this.cfg);\n  }\n\n  /**\n   * 显示面包屑\n   */\n  private drawBreadCrumb() {\n    this.drawBreadCrumbGroup();\n    this.resetPosition();\n    this.breadCrumbGroup.show();\n  }\n\n  /**\n   * 绘制 Button 和 文本\n   */\n  private drawBreadCrumbGroup() {\n    const config = this.getButtonCfg();\n    const cache = this.historyCache;\n\n    // 初始化面包屑 group\n    if (!this.breadCrumbGroup) {\n      this.breadCrumbGroup = this.context.view.foregroundGroup.addGroup({\n        name: BREAD_CRUMB_NAME,\n      });\n    } else {\n      this.breadCrumbGroup.clear();\n    }\n\n    // 绘制面包屑\n    let left = 0;\n    cache.forEach((record, index) => {\n      // 添加文本\n      const textShape = this.breadCrumbGroup.addShape({\n        type: 'text',\n        id: record.id,\n        name: `${BREAD_CRUMB_NAME}_${record.name}_text`,\n        attrs: {\n          text: index === 0 && !isNil(config.rootText) ? config.rootText : record.name,\n          ...config.textStyle,\n          x: left,\n          y: 0,\n        },\n      });\n\n      const textShapeBox = textShape.getBBox();\n      left += textShapeBox.width + PADDING;\n\n      // 增加文本事件\n      textShape.on('click', (event) => {\n        const targetId = event.target.get('id');\n        if (targetId !== last(cache)?.id) {\n          const newHistoryCache = cache.slice(0, cache.findIndex((d) => d.id === targetId) + 1);\n          this.back(newHistoryCache);\n        }\n      });\n      // active 效果内置\n      textShape.on('mouseenter', (event) => {\n        const targetId = event.target.get('id');\n        if (targetId !== last(cache)?.id) {\n          textShape.attr(config.activeTextStyle);\n        } else {\n          textShape.attr({ cursor: 'default' });\n        }\n      });\n      textShape.on('mouseleave', () => {\n        textShape.attr(config.textStyle);\n      });\n\n      if (index < cache.length - 1) {\n        // 添加反斜杠\n        const dividerShape = this.breadCrumbGroup.addShape({\n          type: 'text',\n          name: `${config.name}_${record.name}_divider`,\n          attrs: {\n            text: config.dividerText,\n            ...config.textStyle,\n            x: left,\n            y: 0,\n          },\n        });\n\n        const dividerBox = dividerShape.getBBox();\n        left += dividerBox.width + PADDING;\n      }\n    });\n  }\n\n  /**\n   * 隐藏面包屑\n   */\n  private hideCrumbGroup() {\n    if (this.breadCrumbGroup) {\n      this.breadCrumbGroup.hide();\n    }\n  }\n\n  /**\n   * @override\n   * destroy: 销毁资源\n   */\n  public destroy() {\n    if (this.breadCrumbGroup) {\n      this.breadCrumbGroup.remove();\n    }\n    super.destroy();\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}