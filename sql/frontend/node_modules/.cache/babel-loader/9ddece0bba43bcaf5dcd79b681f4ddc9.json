{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { registerNode, BaseGlobal as Global } from '@antv/g6-core';\nimport { mix } from '@antv/util';\n/**\r\n * 基本的椭圆，可以添加文本，默认文本居中\r\n */\n\nregisterNode('ellipse', {\n  // 自定义节点时的配置\n  options: {\n    size: [80, 40],\n    style: {\n      x: 0,\n      y: 0,\n      stroke: Global.defaultNode.style.stroke,\n      fill: Global.defaultNode.style.fill,\n      lineWidth: Global.defaultNode.style.lineWidth\n    },\n    // 文本样式配置\n    labelCfg: {\n      style: {\n        fill: Global.nodeLabel.style.fill,\n        fontSize: Global.nodeLabel.style.fontSize\n      }\n    },\n    // 节点上左右上下四个方向上的链接circle配置\n    linkPoints: {\n      top: false,\n      right: false,\n      bottom: false,\n      left: false,\n      // circle的大小\n      size: Global.defaultNode.linkPoints.size,\n      lineWidth: Global.defaultNode.linkPoints.lineWidth,\n      fill: Global.defaultNode.linkPoints.fill,\n      stroke: Global.defaultNode.linkPoints.stroke\n    },\n    // 节点中icon配置\n    icon: {\n      // 是否显示icon，值为 false 则不渲染icon\n      show: false,\n      // icon的地址，字符串类型\n      img: 'https://gw.alipayobjects.com/zos/bmw-prod/5d015065-8505-4e7a-baec-976f81e3c41d.svg',\n      width: 20,\n      height: 20\n    },\n    stateStyles: __assign({}, Global.nodeStateStyles)\n  },\n  shapeType: 'ellipse',\n  // 文本位置\n  labelPosition: 'center',\n  drawShape: function drawShape(cfg, group) {\n    var _a = this.getOptions(cfg).icon,\n        icon = _a === void 0 ? {} : _a;\n    var style = this.getShapeStyle(cfg);\n    var keyShape = group.addShape('ellipse', {\n      attrs: style,\n      className: 'ellipse-keyShape',\n      name: 'ellipse-keyShape',\n      draggable: true\n    });\n    var width = icon.width,\n        height = icon.height,\n        show = icon.show,\n        text = icon.text;\n\n    if (show) {\n      if (text) {\n        group.addShape('text', {\n          attrs: __assign({\n            x: 0,\n            y: 0,\n            fontSize: 12,\n            fill: '#000',\n            stroke: '#000',\n            textBaseline: 'middle',\n            textAlign: 'center'\n          }, icon),\n          className: this.type + \"-icon\",\n          name: this.type + \"-icon\",\n          draggable: true\n        });\n      } else {\n        group.addShape('image', {\n          attrs: __assign({\n            x: -width / 2,\n            y: -height / 2\n          }, icon),\n          className: this.type + \"-icon\",\n          name: this.type + \"-icon\",\n          draggable: true\n        });\n      }\n    }\n\n    this.drawLinkPoints(cfg, group);\n    return keyShape;\n  },\n\n  /**\r\n   * 绘制节点上的LinkPoints\r\n   * @param {Object} cfg data数据配置项\r\n   * @param {Group} group Group实例\r\n   */\n  drawLinkPoints: function drawLinkPoints(cfg, group) {\n    var _a = this.getOptions(cfg).linkPoints,\n        linkPoints = _a === void 0 ? {} : _a;\n\n    var top = linkPoints.top,\n        left = linkPoints.left,\n        right = linkPoints.right,\n        bottom = linkPoints.bottom,\n        markSize = linkPoints.size,\n        markR = linkPoints.r,\n        markStyle = __rest(linkPoints, [\"top\", \"left\", \"right\", \"bottom\", \"size\", \"r\"]);\n\n    var size = this.getSize(cfg);\n    var rx = size[0] / 2;\n    var ry = size[1] / 2;\n\n    if (left) {\n      // left circle\n      group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: -rx,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-left',\n        name: 'link-point-left',\n        isAnchorPoint: true\n      });\n    }\n\n    if (right) {\n      // right circle\n      group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: rx,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-right',\n        name: 'link-point-right',\n        isAnchorPoint: true\n      });\n    }\n\n    if (top) {\n      // top circle\n      group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: -ry,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-top',\n        name: 'link-point-top',\n        isAnchorPoint: true\n      });\n    }\n\n    if (bottom) {\n      // bottom circle\n      group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: ry,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-bottom',\n        name: 'link-point-bottom',\n        isAnchorPoint: true\n      });\n    }\n  },\n\n  /**\r\n   * 获取节点的样式，供基于该节点自定义时使用\r\n   * @param {Object} cfg 节点数据模型\r\n   * @return {Object} 节点的样式\r\n   */\n  getShapeStyle: function getShapeStyle(cfg) {\n    var defaultStyle = this.getOptions(cfg).style;\n    var strokeStyle = {\n      stroke: cfg.color\n    }; // 如果设置了color，则覆盖默认的stroke属性\n\n    var style = mix({}, defaultStyle, strokeStyle);\n    var size = this.getSize(cfg);\n    var rx = size[0] / 2;\n    var ry = size[1] / 2;\n\n    var styles = __assign({\n      x: 0,\n      y: 0,\n      rx: rx,\n      ry: ry\n    }, style);\n\n    return styles;\n  },\n  update: function update(cfg, item) {\n    var group = item.getContainer(); // 这里不传 cfg 参数是因为 cfg.style 需要最后覆盖样式\n\n    var defaultStyle = this.getOptions({}).style;\n    var size = this.getSize(cfg);\n    var strokeStyle = {\n      stroke: cfg.color,\n      rx: size[0] / 2,\n      ry: size[1] / 2\n    }; // 与 getShapeStyle 不同在于，update 时需要获取到当前的 style 进行融合。即新传入的配置项中没有涉及的属性，保留当前的配置。\n\n    var keyShape = item.get('keyShape');\n    var style = mix({}, defaultStyle, keyShape.attr(), strokeStyle);\n    style = mix(style, cfg.style);\n    this.updateShape(cfg, item, style, true);\n    this.updateLinkPoints(cfg, group);\n  }\n}, 'single-node');","map":{"version":3,"sources":["D:/SQL/sqlindex2/sql/frontend/node_modules/@antv/g6-element/es/nodes/ellipse.js"],"names":["__assign","__rest","registerNode","BaseGlobal","Global","mix","options","size","style","x","y","stroke","defaultNode","fill","lineWidth","labelCfg","nodeLabel","fontSize","linkPoints","top","right","bottom","left","icon","show","img","width","height","stateStyles","nodeStateStyles","shapeType","labelPosition","drawShape","cfg","group","_a","getOptions","getShapeStyle","keyShape","addShape","attrs","className","name","draggable","text","textBaseline","textAlign","type","drawLinkPoints","markSize","markR","r","markStyle","getSize","rx","ry","isAnchorPoint","defaultStyle","strokeStyle","color","styles","update","item","getContainer","get","attr","updateShape","updateLinkPoints"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\r\nimport { registerNode, BaseGlobal as Global } from '@antv/g6-core';\r\nimport { mix } from '@antv/util';\r\n/**\r\n * 基本的椭圆，可以添加文本，默认文本居中\r\n */\r\n\r\nregisterNode('ellipse', {\r\n  // 自定义节点时的配置\r\n  options: {\r\n    size: [80, 40],\r\n    style: {\r\n      x: 0,\r\n      y: 0,\r\n      stroke: Global.defaultNode.style.stroke,\r\n      fill: Global.defaultNode.style.fill,\r\n      lineWidth: Global.defaultNode.style.lineWidth\r\n    },\r\n    // 文本样式配置\r\n    labelCfg: {\r\n      style: {\r\n        fill: Global.nodeLabel.style.fill,\r\n        fontSize: Global.nodeLabel.style.fontSize\r\n      }\r\n    },\r\n    // 节点上左右上下四个方向上的链接circle配置\r\n    linkPoints: {\r\n      top: false,\r\n      right: false,\r\n      bottom: false,\r\n      left: false,\r\n      // circle的大小\r\n      size: Global.defaultNode.linkPoints.size,\r\n      lineWidth: Global.defaultNode.linkPoints.lineWidth,\r\n      fill: Global.defaultNode.linkPoints.fill,\r\n      stroke: Global.defaultNode.linkPoints.stroke\r\n    },\r\n    // 节点中icon配置\r\n    icon: {\r\n      // 是否显示icon，值为 false 则不渲染icon\r\n      show: false,\r\n      // icon的地址，字符串类型\r\n      img: 'https://gw.alipayobjects.com/zos/bmw-prod/5d015065-8505-4e7a-baec-976f81e3c41d.svg',\r\n      width: 20,\r\n      height: 20\r\n    },\r\n    stateStyles: __assign({}, Global.nodeStateStyles)\r\n  },\r\n  shapeType: 'ellipse',\r\n  // 文本位置\r\n  labelPosition: 'center',\r\n  drawShape: function drawShape(cfg, group) {\r\n    var _a = this.getOptions(cfg).icon,\r\n        icon = _a === void 0 ? {} : _a;\r\n    var style = this.getShapeStyle(cfg);\r\n    var keyShape = group.addShape('ellipse', {\r\n      attrs: style,\r\n      className: 'ellipse-keyShape',\r\n      name: 'ellipse-keyShape',\r\n      draggable: true\r\n    });\r\n    var width = icon.width,\r\n        height = icon.height,\r\n        show = icon.show,\r\n        text = icon.text;\r\n\r\n    if (show) {\r\n      if (text) {\r\n        group.addShape('text', {\r\n          attrs: __assign({\r\n            x: 0,\r\n            y: 0,\r\n            fontSize: 12,\r\n            fill: '#000',\r\n            stroke: '#000',\r\n            textBaseline: 'middle',\r\n            textAlign: 'center'\r\n          }, icon),\r\n          className: this.type + \"-icon\",\r\n          name: this.type + \"-icon\",\r\n          draggable: true\r\n        });\r\n      } else {\r\n        group.addShape('image', {\r\n          attrs: __assign({\r\n            x: -width / 2,\r\n            y: -height / 2\r\n          }, icon),\r\n          className: this.type + \"-icon\",\r\n          name: this.type + \"-icon\",\r\n          draggable: true\r\n        });\r\n      }\r\n    }\r\n\r\n    this.drawLinkPoints(cfg, group);\r\n    return keyShape;\r\n  },\r\n\r\n  /**\r\n   * 绘制节点上的LinkPoints\r\n   * @param {Object} cfg data数据配置项\r\n   * @param {Group} group Group实例\r\n   */\r\n  drawLinkPoints: function drawLinkPoints(cfg, group) {\r\n    var _a = this.getOptions(cfg).linkPoints,\r\n        linkPoints = _a === void 0 ? {} : _a;\r\n\r\n    var top = linkPoints.top,\r\n        left = linkPoints.left,\r\n        right = linkPoints.right,\r\n        bottom = linkPoints.bottom,\r\n        markSize = linkPoints.size,\r\n        markR = linkPoints.r,\r\n        markStyle = __rest(linkPoints, [\"top\", \"left\", \"right\", \"bottom\", \"size\", \"r\"]);\r\n\r\n    var size = this.getSize(cfg);\r\n    var rx = size[0] / 2;\r\n    var ry = size[1] / 2;\r\n\r\n    if (left) {\r\n      // left circle\r\n      group.addShape('circle', {\r\n        attrs: __assign(__assign({}, markStyle), {\r\n          x: -rx,\r\n          y: 0,\r\n          r: markSize / 2 || markR || 5\r\n        }),\r\n        className: 'link-point-left',\r\n        name: 'link-point-left',\r\n        isAnchorPoint: true\r\n      });\r\n    }\r\n\r\n    if (right) {\r\n      // right circle\r\n      group.addShape('circle', {\r\n        attrs: __assign(__assign({}, markStyle), {\r\n          x: rx,\r\n          y: 0,\r\n          r: markSize / 2 || markR || 5\r\n        }),\r\n        className: 'link-point-right',\r\n        name: 'link-point-right',\r\n        isAnchorPoint: true\r\n      });\r\n    }\r\n\r\n    if (top) {\r\n      // top circle\r\n      group.addShape('circle', {\r\n        attrs: __assign(__assign({}, markStyle), {\r\n          x: 0,\r\n          y: -ry,\r\n          r: markSize / 2 || markR || 5\r\n        }),\r\n        className: 'link-point-top',\r\n        name: 'link-point-top',\r\n        isAnchorPoint: true\r\n      });\r\n    }\r\n\r\n    if (bottom) {\r\n      // bottom circle\r\n      group.addShape('circle', {\r\n        attrs: __assign(__assign({}, markStyle), {\r\n          x: 0,\r\n          y: ry,\r\n          r: markSize / 2 || markR || 5\r\n        }),\r\n        className: 'link-point-bottom',\r\n        name: 'link-point-bottom',\r\n        isAnchorPoint: true\r\n      });\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 获取节点的样式，供基于该节点自定义时使用\r\n   * @param {Object} cfg 节点数据模型\r\n   * @return {Object} 节点的样式\r\n   */\r\n  getShapeStyle: function getShapeStyle(cfg) {\r\n    var defaultStyle = this.getOptions(cfg).style;\r\n    var strokeStyle = {\r\n      stroke: cfg.color\r\n    }; // 如果设置了color，则覆盖默认的stroke属性\r\n\r\n    var style = mix({}, defaultStyle, strokeStyle);\r\n    var size = this.getSize(cfg);\r\n    var rx = size[0] / 2;\r\n    var ry = size[1] / 2;\r\n\r\n    var styles = __assign({\r\n      x: 0,\r\n      y: 0,\r\n      rx: rx,\r\n      ry: ry\r\n    }, style);\r\n\r\n    return styles;\r\n  },\r\n  update: function update(cfg, item) {\r\n    var group = item.getContainer(); // 这里不传 cfg 参数是因为 cfg.style 需要最后覆盖样式\r\n\r\n    var defaultStyle = this.getOptions({}).style;\r\n    var size = this.getSize(cfg);\r\n    var strokeStyle = {\r\n      stroke: cfg.color,\r\n      rx: size[0] / 2,\r\n      ry: size[1] / 2\r\n    }; // 与 getShapeStyle 不同在于，update 时需要获取到当前的 style 进行融合。即新传入的配置项中没有涉及的属性，保留当前的配置。\r\n\r\n    var keyShape = item.get('keyShape');\r\n    var style = mix({}, defaultStyle, keyShape.attr(), strokeStyle);\r\n    style = mix(style, cfg.style);\r\n    this.updateShape(cfg, item, style, true);\r\n    this.updateLinkPoints(cfg, group);\r\n  }\r\n}, 'single-node');"]},"metadata":{},"sourceType":"module"}