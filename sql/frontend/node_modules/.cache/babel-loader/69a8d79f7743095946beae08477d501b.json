{"ast":null,"code":"var _jsxFileName = \"D:\\\\SQL\\\\sqlindex2\\\\sql\\\\frontend\\\\src\\\\pages\\\\nhaban\\\\components\\\\chart.js\",\n    _s = $RefreshSig$();\n\nimport { Column } from \"@ant-design/charts\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = () => {\n  _s();\n\n  const [data, setData] = useState([{\n    name: \"Đơn hàng\",\n    date: \"Jan.\",\n    money: 0\n  }, {\n    name: \"Đơn hàng\",\n    date: \"Feb.\",\n    money: 0\n  }, {\n    name: \"Đơn hàng\",\n    date: \"Mar.\",\n    money: 0\n  }, {\n    name: \"Đơn hàng\",\n    date: \"Apr.\",\n    money: 0\n  }, {\n    name: \"Đơn hàng\",\n    date: \"May\",\n    money: 0\n  }, {\n    name: \"Đơn hàng\",\n    date: \"Jun.\",\n    money: 0\n  }, {\n    name: \"Đơn hàng\",\n    date: \"Jul.\",\n    money: 0\n  }, {\n    name: \"Đơn hàng\",\n    date: \"Aug.\",\n    money: 0\n  }, {\n    name: \"Đơn hàng\",\n    date: \"Sep.\",\n    money: 0\n  }, {\n    name: \"Đơn hàng\",\n    date: \"Oct.\",\n    money: 0\n  }, {\n    name: \"Đơn hàng\",\n    date: \"Nov.\",\n    money: 0\n  }, {\n    name: \"Đơn hàng\",\n    date: \"Dec.\",\n    money: 0\n  }]);\n  const [config, setConfig] = useState({\n    data: data,\n    isGroup: true,\n    xField: \"date\",\n    yField: \"money\",\n    seriesField: \"name\",\n    label: {\n      position: \"middle\",\n      layout: [{\n        type: \"interval-adjust-position\"\n      }, {\n        type: \"interval-hide-overlap\"\n      }, {\n        type: \"adjust-color\"\n      }]\n    }\n  });\n  useEffect(() => {\n    const dataW = JSON.parse(window.localStorage.getItem(\"auth\"));\n\n    const fetchData = async () => {\n      await axios.get(\"http://localhost:5000/api/nhaban/doanhthu/\" + dataW.MaNhaBan).then(res => {\n        let temp = [{\n          name: \"Đơn hàng\",\n          date: \"Jan.\",\n          money: res.data[0].ThangMot\n        }, {\n          name: \"Đơn hàng\",\n          date: \"Feb.\",\n          money: res.data[0].ThangHai\n        }, {\n          name: \"Đơn hàng\",\n          date: \"Mar.\",\n          money: res.data[0].ThangBa\n        }, {\n          name: \"Đơn hàng\",\n          date: \"Apr.\",\n          money: res.data[0].ThangTu\n        }, {\n          name: \"Đơn hàng\",\n          date: \"May\",\n          money: res.data[0].ThangNam\n        }, {\n          name: \"Đơn hàng\",\n          date: \"Jun.\",\n          money: res.data[0].ThangSau\n        }, {\n          name: \"Đơn hàng\",\n          date: \"Jul.\",\n          money: res.data[0].ThangBay\n        }, {\n          name: \"Đơn hàng\",\n          date: \"Aug.\",\n          money: res.data[0].ThangTam\n        }, {\n          name: \"Đơn hàng\",\n          date: \"Sep.\",\n          money: res.data[0].ThangChin\n        }, {\n          name: \"Đơn hàng\",\n          date: \"Oct.\",\n          money: res.data[0].ThangMuoi\n        }, {\n          name: \"Đơn hàng\",\n          date: \"Nov.\",\n          money: res.data[0].ThangMuoiMot\n        }, {\n          name: \"Đơn hàng\",\n          date: \"Dec.\",\n          money: res.data[0].ThangMuoiHai\n        }];\n        setData(temp);\n        let config = {\n          data: data,\n          isGroup: true,\n          xField: \"date\",\n          yField: \"money\",\n          seriesField: \"name\",\n          label: {\n            position: \"middle\",\n            layout: [{\n              type: \"interval-adjust-position\"\n            }, {\n              type: \"interval-hide-overlap\"\n            }, {\n              type: \"adjust-color\"\n            }]\n          }\n        };\n        let config2 = {\n          data: temp,\n          isGroup: true,\n          xField: \"date\",\n          yField: \"money\",\n          seriesField: \"name\",\n          label: {\n            position: \"middle\",\n            layout: [{\n              type: \"interval-adjust-position\"\n            }, {\n              type: \"interval-hide-overlap\"\n            }, {\n              type: \"adjust-color\"\n            }]\n          },\n          xAxis: {\n            label: {\n              autoHide: true,\n              autoRotate: false\n            }\n          }\n        };\n        setConfig(config);\n      });\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Column, { ...config\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chart, \"kopEidYVLPve7o502Qvr+hx0JX0=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["D:/SQL/sqlindex2/sql/frontend/src/pages/nhaban/components/chart.js"],"names":["Column","React","useState","useEffect","axios","Chart","data","setData","name","date","money","config","setConfig","isGroup","xField","yField","seriesField","label","position","layout","type","dataW","JSON","parse","window","localStorage","getItem","fetchData","get","MaNhaBan","then","res","temp","ThangMot","ThangHai","ThangBa","ThangTu","ThangNam","ThangSau","ThangBay","ThangTam","ThangChin","ThangMuoi","ThangMuoiMot","ThangMuoiHai","config2","xAxis","autoHide","autoRotate"],"mappings":"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","sourcesContent":["import { Column } from \"@ant-design/charts\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Chart = () => {\r\n    const [data, setData] = useState([\r\n      {\r\n        name: \"Đơn hàng\",\r\n        date: \"Jan.\",\r\n        money: 0,\r\n      },\r\n      {\r\n        name: \"Đơn hàng\",\r\n        date: \"Feb.\",\r\n        money: 0,\r\n      },\r\n      {\r\n        name: \"Đơn hàng\",\r\n        date: \"Mar.\",\r\n        money: 0,\r\n      },\r\n      {\r\n        name: \"Đơn hàng\",\r\n        date: \"Apr.\",\r\n        money: 0,\r\n      },\r\n      {\r\n        name: \"Đơn hàng\",\r\n        date: \"May\",\r\n        money: 0,\r\n      },\r\n      {\r\n        name: \"Đơn hàng\",\r\n        date: \"Jun.\",\r\n        money: 0,\r\n      },\r\n      {\r\n        name: \"Đơn hàng\",\r\n        date: \"Jul.\",\r\n        money: 0,\r\n      },\r\n      {\r\n        name: \"Đơn hàng\",\r\n        date: \"Aug.\",\r\n        money: 0,\r\n      },\r\n      {\r\n        name: \"Đơn hàng\",\r\n        date: \"Sep.\",\r\n        money: 0,\r\n      },\r\n      {\r\n        name: \"Đơn hàng\",\r\n        date: \"Oct.\",\r\n        money: 0,\r\n      },\r\n      {\r\n        name: \"Đơn hàng\",\r\n        date: \"Nov.\",\r\n        money: 0,\r\n      },\r\n      {\r\n        name: \"Đơn hàng\",\r\n        date: \"Dec.\",\r\n        money: 0,\r\n      },\r\n    ]);\r\n    const [config, setConfig] = useState({\r\n      data: data,\r\n      isGroup: true,\r\n      xField: \"date\",\r\n      yField: \"money\",\r\n      seriesField: \"name\",\r\n      label: {\r\n        position: \"middle\",\r\n        layout: [\r\n          { type: \"interval-adjust-position\" },\r\n          { type: \"interval-hide-overlap\" },\r\n          { type: \"adjust-color\" },\r\n        ],\r\n      },\r\n    });\r\n\r\n\r\n  useEffect(() => {\r\n    const dataW = JSON.parse(window.localStorage.getItem(\"auth\"));\r\n    const fetchData = async () => {\r\n      await axios\r\n        .get(\"http://localhost:5000/api/nhaban/doanhthu/\" + dataW.MaNhaBan)\r\n        .then((res) => {\r\n          let temp = [\r\n            {\r\n              name: \"Đơn hàng\",\r\n              date: \"Jan.\",\r\n              money: res.data[0].ThangMot,\r\n            },\r\n            {\r\n              name: \"Đơn hàng\",\r\n              date: \"Feb.\",\r\n              money: res.data[0].ThangHai,\r\n            },\r\n            {\r\n              name: \"Đơn hàng\",\r\n              date: \"Mar.\",\r\n              money: res.data[0].ThangBa,\r\n            },\r\n            {\r\n              name: \"Đơn hàng\",\r\n              date: \"Apr.\",\r\n              money: res.data[0].ThangTu,\r\n            },\r\n            {\r\n              name: \"Đơn hàng\",\r\n              date: \"May\",\r\n              money: res.data[0].ThangNam,\r\n            },\r\n            {\r\n              name: \"Đơn hàng\",\r\n              date: \"Jun.\",\r\n              money: res.data[0].ThangSau,\r\n            },\r\n            {\r\n              name: \"Đơn hàng\",\r\n              date: \"Jul.\",\r\n              money: res.data[0].ThangBay,\r\n            },\r\n            {\r\n              name: \"Đơn hàng\",\r\n              date: \"Aug.\",\r\n              money: res.data[0].ThangTam,\r\n            },\r\n            {\r\n              name: \"Đơn hàng\",\r\n              date: \"Sep.\",\r\n              money: res.data[0].ThangChin,\r\n            },\r\n            {\r\n              name: \"Đơn hàng\",\r\n              date: \"Oct.\",\r\n              money: res.data[0].ThangMuoi,\r\n            },\r\n            {\r\n              name: \"Đơn hàng\",\r\n              date: \"Nov.\",\r\n              money: res.data[0].ThangMuoiMot,\r\n            },\r\n            {\r\n              name: \"Đơn hàng\",\r\n              date: \"Dec.\",\r\n              money: res.data[0].ThangMuoiHai,\r\n            },\r\n          ];\r\n          setData(temp);\r\n        \r\n          let config = {\r\n            data: data,\r\n            isGroup: true,\r\n            xField: \"date\",\r\n            yField: \"money\",\r\n            seriesField: \"name\",\r\n            label: {\r\n              position: \"middle\",\r\n              layout: [\r\n                { type: \"interval-adjust-position\" },\r\n                { type: \"interval-hide-overlap\" },\r\n                { type: \"adjust-color\" },\r\n              ],\r\n            },\r\n          };\r\n\r\n          let config2 = {\r\n            data: temp,\r\n            isGroup: true,\r\n            xField: \"date\",\r\n            yField: \"money\",\r\n            seriesField: \"name\",\r\n            label: {\r\n              position: \"middle\",\r\n              layout: [\r\n                { type: \"interval-adjust-position\" },\r\n                { type: \"interval-hide-overlap\" },\r\n                { type: \"adjust-color\" },\r\n              ],\r\n            },\r\n            xAxis: {\r\n              label: {\r\n                autoHide: true,\r\n                autoRotate: false,\r\n              },\r\n            },\r\n          };\r\n          setConfig(config);\r\n        });\r\n    };\r\n    \r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Column {...config} />\r\n    </div>\r\n  );\r\n};\r\nexport default Chart;\r\n"]},"metadata":{},"sourceType":"module"}