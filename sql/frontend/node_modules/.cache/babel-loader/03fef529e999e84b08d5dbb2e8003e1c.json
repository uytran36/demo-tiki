{"ast":null,"code":"var _jsxFileName = \"D:\\\\SQL\\\\sqlindex2\\\\sql\\\\frontend\\\\src\\\\pages\\\\khachhang\\\\components\\\\cart\\\\cartComponents\\\\TableItem.js\";\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport { Table, InputNumber } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TableItem = ({\n  bill,\n  setBill\n}) => {\n  function onChange(value, record) {\n    record = { ...record,\n      SoLuong: value,\n      ThanhTien: record.DonGia * value\n    };\n    let temp = bill;\n\n    for (let i = 0; i < temp.length; i++) {\n      if (temp[i].key === record.key) {\n        temp[i] = record;\n      }\n    }\n\n    setBill(temp);\n    const cart = bill.map(item => {\n      return {\n        Ten: item.Ten,\n        SoLuong: item.SoLuong,\n        DonGia: item.DonGia,\n        ThanhTien: item.ThanhTien\n      };\n    });\n    window.localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }\n\n  const columns = [{\n    title: \"Tên sản phẩm\",\n    dataIndex: \"Ten\",\n    render: text => /*#__PURE__*/_jsxDEV(\"a\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }, this)\n  }, {\n    title: \"Đơn giá\",\n    dataIndex: \"DonGia\",\n    render: text => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [text, \".000 \\u0110\\u1ED3ng\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }, this)\n  }, {\n    title: \"Số lượng\",\n    dataIndex: \"SoLuong\",\n    render: (text, record) => /*#__PURE__*/_jsxDEV(InputNumber, {\n      min: 0,\n      max: 10,\n      defaultValue: text,\n      onChange: value => onChange(value, record)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: \"Thành tiền\",\n    dataIndex: \"ThanhTien\",\n    render: text => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [text, \".000 \\u0110\\u1ED3ng\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }, this)\n  }, {\n    title: () => /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 20\n    }, this),\n    render: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }];\n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n      console.log(`selectedRowKeys: ${selectedRowKeys}`, \"selectedRows: \", selectedRows);\n    },\n    getCheckboxProps: record => ({\n      disabled: record.name === \"Disabled User\",\n      // Column configuration not to be checked\n      name: record.name\n    })\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      rowSelection: {\n        type: \"checkbox\",\n        ...rowSelection\n      },\n      columns: columns,\n      dataSource: bill\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TableItem;\nexport default TableItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableItem\");","map":{"version":3,"sources":["D:/SQL/sqlindex2/sql/frontend/src/pages/khachhang/components/cart/cartComponents/TableItem.js"],"names":["Table","InputNumber","DeleteOutlined","TableItem","bill","setBill","onChange","value","record","SoLuong","ThanhTien","DonGia","temp","i","length","key","cart","map","item","Ten","window","localStorage","setItem","JSON","stringify","columns","title","dataIndex","render","text","rowSelection","selectedRowKeys","selectedRows","console","log","getCheckboxProps","disabled","name","type"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { Table, InputNumber } from \"antd\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\n\r\nconst TableItem = ({ bill, setBill }) => {\r\n  \r\n  function onChange(value, record) {\r\n    record = {\r\n      ...record,\r\n      SoLuong: value,\r\n      ThanhTien: record.DonGia * value\r\n    };\r\n    let temp = bill;\r\n    for(let i = 0; i < temp.length; i++) {\r\n      if(temp[i].key === record.key) {\r\n        temp[i] = record;\r\n      }\r\n    }\r\n    setBill(temp);\r\n    const cart = bill.map(item => {return {\r\n      Ten: item.Ten,\r\n      SoLuong: item.SoLuong,\r\n      DonGia: item.DonGia,\r\n      ThanhTien: item.ThanhTien,\r\n    }})\r\n    window.localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Tên sản phẩm\",\r\n      dataIndex: \"Ten\",\r\n      render: (text) => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: \"Đơn giá\",\r\n      dataIndex: \"DonGia\",\r\n      render: (text) => <div>{text}.000 Đồng</div>,\r\n    },\r\n    {\r\n      title: \"Số lượng\",\r\n      dataIndex: \"SoLuong\",\r\n      render: (text, record) => (\r\n        <InputNumber\r\n          min={0}\r\n          max={10}\r\n          defaultValue={text}\r\n          onChange={(value) => onChange(value, record)}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Thành tiền\",\r\n      dataIndex: \"ThanhTien\",\r\n      render: (text) => <div>{text}.000 Đồng</div>,\r\n    },\r\n    {\r\n      title: () => <DeleteOutlined />,\r\n      render: () => (\r\n        <div>\r\n          <DeleteOutlined />\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      console.log(\r\n        `selectedRowKeys: ${selectedRowKeys}`,\r\n        \"selectedRows: \",\r\n        selectedRows\r\n      );\r\n    },\r\n    getCheckboxProps: (record) => ({\r\n      disabled: record.name === \"Disabled User\",\r\n      // Column configuration not to be checked\r\n      name: record.name,\r\n    }),\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        rowSelection={{\r\n          type: \"checkbox\",\r\n          ...rowSelection,\r\n        }}\r\n        columns={columns}\r\n        dataSource={bill}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableItem;\r\n"]},"metadata":{},"sourceType":"module"}