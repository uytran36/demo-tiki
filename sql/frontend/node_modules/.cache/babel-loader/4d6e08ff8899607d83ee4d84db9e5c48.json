{"ast":null,"code":"import { isEqual } from '@antv/util';\n\nfunction getMinDiff(del, add, modify) {\n  var type = null;\n  var min = modify;\n\n  if (add < min) {\n    min = add;\n    type = 'add';\n  }\n\n  if (del < min) {\n    min = del;\n    type = 'del';\n  }\n\n  return {\n    type: type,\n    min: min\n  };\n}\n/*\r\n * https://en.wikipedia.org/wiki/Levenshtein_distance\r\n * 计算两条path的编辑距离\r\n */\n\n\nvar levenshteinDistance = function (source, target) {\n  var sourceLen = source.length;\n  var targetLen = target.length;\n  var sourceSegment, targetSegment;\n  var temp = 0;\n\n  if (sourceLen === 0 || targetLen === 0) {\n    return null;\n  }\n\n  var dist = [];\n\n  for (var i = 0; i <= sourceLen; i++) {\n    dist[i] = [];\n    dist[i][0] = {\n      min: i\n    };\n  }\n\n  for (var j = 0; j <= targetLen; j++) {\n    dist[0][j] = {\n      min: j\n    };\n  }\n\n  for (var i = 1; i <= sourceLen; i++) {\n    sourceSegment = source[i - 1];\n\n    for (var j = 1; j <= targetLen; j++) {\n      targetSegment = target[j - 1];\n\n      if (isEqual(sourceSegment, targetSegment)) {\n        temp = 0;\n      } else {\n        temp = 1;\n      }\n\n      var del = dist[i - 1][j].min + 1;\n      var add = dist[i][j - 1].min + 1;\n      var modify = dist[i - 1][j - 1].min + temp;\n      dist[i][j] = getMinDiff(del, add, modify);\n    }\n  }\n\n  return dist;\n};\n\nexport default function fillPathByDiff(source, target) {\n  var diffMatrix = levenshteinDistance(source, target);\n  var sourceLen = source.length;\n  var targetLen = target.length;\n  var changes = [];\n  var index = 1;\n  var minPos = 1; // 如果source和target不是完全不相等\n  // @ts-ignore\n\n  if (diffMatrix[sourceLen][targetLen] !== sourceLen) {\n    // 获取从source到target所需改动\n    for (var i = 1; i <= sourceLen; i++) {\n      var min = diffMatrix[i][i].min;\n      minPos = i;\n\n      for (var j = index; j <= targetLen; j++) {\n        if (diffMatrix[i][j].min < min) {\n          min = diffMatrix[i][j].min;\n          minPos = j;\n        }\n      }\n\n      index = minPos;\n\n      if (diffMatrix[i][index].type) {\n        changes.push({\n          index: i - 1,\n          type: diffMatrix[i][index].type\n        });\n      }\n    } // 对source进行增删path\n\n\n    for (var i = changes.length - 1; i >= 0; i--) {\n      index = changes[i].index;\n\n      if (changes[i].type === 'add') {\n        // @ts-ignore\n        source.splice(index, 0, [].concat(source[index]));\n      } else {\n        // @ts-ignore\n        source.splice(index, 1);\n      }\n    }\n  } // source尾部补齐\n\n\n  sourceLen = source.length;\n\n  if (sourceLen < targetLen) {\n    for (var i = 0; i < targetLen - sourceLen; i++) {\n      if (source[sourceLen - 1][0] === 'z' || source[sourceLen - 1][0] === 'Z') {\n        // @ts-ignore\n        source.splice(sourceLen - 2, 0, source[sourceLen - 2]);\n      } else {\n        // @ts-ignore\n        source.push(source[sourceLen - 1]);\n      }\n    }\n  }\n\n  return source;\n}","map":{"version":3,"sources":["../src/fill-path-by-diff.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { isEqual } from '@antv/util';\r\nfunction getMinDiff(del, add, modify) {\r\n    var type = null;\r\n    var min = modify;\r\n    if (add < min) {\r\n        min = add;\r\n        type = 'add';\r\n    }\r\n    if (del < min) {\r\n        min = del;\r\n        type = 'del';\r\n    }\r\n    return {\r\n        type: type,\r\n        min: min,\r\n    };\r\n}\r\n/*\r\n * https://en.wikipedia.org/wiki/Levenshtein_distance\r\n * 计算两条path的编辑距离\r\n */\r\nvar levenshteinDistance = function (source, target) {\r\n    var sourceLen = source.length;\r\n    var targetLen = target.length;\r\n    var sourceSegment, targetSegment;\r\n    var temp = 0;\r\n    if (sourceLen === 0 || targetLen === 0) {\r\n        return null;\r\n    }\r\n    var dist = [];\r\n    for (var i = 0; i <= sourceLen; i++) {\r\n        dist[i] = [];\r\n        dist[i][0] = { min: i };\r\n    }\r\n    for (var j = 0; j <= targetLen; j++) {\r\n        dist[0][j] = { min: j };\r\n    }\r\n    for (var i = 1; i <= sourceLen; i++) {\r\n        sourceSegment = source[i - 1];\r\n        for (var j = 1; j <= targetLen; j++) {\r\n            targetSegment = target[j - 1];\r\n            if (isEqual(sourceSegment, targetSegment)) {\r\n                temp = 0;\r\n            }\r\n            else {\r\n                temp = 1;\r\n            }\r\n            var del = dist[i - 1][j].min + 1;\r\n            var add = dist[i][j - 1].min + 1;\r\n            var modify = dist[i - 1][j - 1].min + temp;\r\n            dist[i][j] = getMinDiff(del, add, modify);\r\n        }\r\n    }\r\n    return dist;\r\n};\r\nexport default function fillPathByDiff(source, target) {\r\n    var diffMatrix = levenshteinDistance(source, target);\r\n    var sourceLen = source.length;\r\n    var targetLen = target.length;\r\n    var changes = [];\r\n    var index = 1;\r\n    var minPos = 1;\r\n    // 如果source和target不是完全不相等\r\n    // @ts-ignore\r\n    if (diffMatrix[sourceLen][targetLen] !== sourceLen) {\r\n        // 获取从source到target所需改动\r\n        for (var i = 1; i <= sourceLen; i++) {\r\n            var min = diffMatrix[i][i].min;\r\n            minPos = i;\r\n            for (var j = index; j <= targetLen; j++) {\r\n                if (diffMatrix[i][j].min < min) {\r\n                    min = diffMatrix[i][j].min;\r\n                    minPos = j;\r\n                }\r\n            }\r\n            index = minPos;\r\n            if (diffMatrix[i][index].type) {\r\n                changes.push({ index: i - 1, type: diffMatrix[i][index].type });\r\n            }\r\n        }\r\n        // 对source进行增删path\r\n        for (var i = changes.length - 1; i >= 0; i--) {\r\n            index = changes[i].index;\r\n            if (changes[i].type === 'add') {\r\n                // @ts-ignore\r\n                source.splice(index, 0, [].concat(source[index]));\r\n            }\r\n            else {\r\n                // @ts-ignore\r\n                source.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n    // source尾部补齐\r\n    sourceLen = source.length;\r\n    if (sourceLen < targetLen) {\r\n        for (var i = 0; i < (targetLen - sourceLen); i++) {\r\n            if (source[sourceLen - 1][0] === 'z' || source[sourceLen - 1][0] === 'Z') {\r\n                // @ts-ignore\r\n                source.splice(sourceLen - 2, 0, source[sourceLen - 2]);\r\n            }\r\n            else {\r\n                // @ts-ignore\r\n                source.push(source[sourceLen - 1]);\r\n            }\r\n        }\r\n    }\r\n    return source;\r\n}\r\n//# sourceMappingURL=fill-path-by-diff.js.map"]},"metadata":{},"sourceType":"module"}