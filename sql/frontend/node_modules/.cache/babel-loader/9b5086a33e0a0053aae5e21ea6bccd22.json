{"ast":null,"code":"var _jsxFileName = \"D:\\\\SQL\\\\sqlindex2\\\\sql\\\\frontend\\\\src\\\\pages\\\\nhaban\\\\components\\\\chart.js\",\n    _s = $RefreshSig$();\n\nimport { Column } from \"@ant-design/charts\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = ({\n  config,\n  data,\n  setData,\n  setConfig\n}) => {\n  _s();\n\n  useEffect(() => {\n    const dataW = JSON.parse(window.localStorage.getItem(\"auth\"));\n\n    const fetchData = async () => {\n      await axios.get(\"http://localhost:5000/api/nhaban/doanhthu/\" + dataW.MaNhaBan).then(res => {\n        let temp = [{\n          name: \"Đơn hàng\",\n          date: \"Jan.\",\n          money: res.data[0].ThangMot\n        }, {\n          name: \"Đơn hàng\",\n          date: \"Feb.\",\n          money: res.data[0].ThangHai\n        }, {\n          name: \"Đơn hàng\",\n          date: \"Mar.\",\n          money: res.data[0].ThangBa\n        }, {\n          name: \"Đơn hàng\",\n          date: \"Apr.\",\n          money: res.data[0].ThangTu\n        }, {\n          name: \"Đơn hàng\",\n          date: \"May\",\n          money: res.data[0].ThangNam\n        }, {\n          name: \"Đơn hàng\",\n          date: \"Jun.\",\n          money: res.data[0].ThangSau\n        }, {\n          name: \"Đơn hàng\",\n          date: \"Jul.\",\n          money: res.data[0].ThangBay\n        }, {\n          name: \"Đơn hàng\",\n          date: \"Aug.\",\n          money: res.data[0].ThangTam\n        }, {\n          name: \"Đơn hàng\",\n          date: \"Sep.\",\n          money: res.data[0].ThangChin\n        }, {\n          name: \"Đơn hàng\",\n          date: \"Oct.\",\n          money: res.data[0].ThangMuoi\n        }, {\n          name: \"Đơn hàng\",\n          date: \"Nov.\",\n          money: res.data[0].ThangMuoiMot\n        }, {\n          name: \"Đơn hàng\",\n          date: \"Dec.\",\n          money: res.data[0].ThangMuoiHai\n        }];\n        setData(temp);\n        let config = {\n          data: data,\n          isGroup: true,\n          xField: \"date\",\n          yField: \"money\",\n          seriesField: \"name\",\n          label: {\n            position: \"middle\",\n            layout: [{\n              type: \"interval-adjust-position\"\n            }, {\n              type: \"interval-hide-overlap\"\n            }, {\n              type: \"adjust-color\"\n            }]\n          }\n        };\n        let config2 = {\n          data: temp,\n          isGroup: true,\n          xField: \"date\",\n          yField: \"money\",\n          seriesField: \"name\",\n          label: {\n            position: \"middle\",\n            layout: [{\n              type: \"interval-adjust-position\"\n            }, {\n              type: \"interval-hide-overlap\"\n            }, {\n              type: \"adjust-color\"\n            }]\n          },\n          xAxis: {\n            label: {\n              autoHide: true,\n              autoRotate: false\n            }\n          }\n        };\n        setConfig(config);\n      });\n    }; // fetchData();\n\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Column, { ...config\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["D:/SQL/sqlindex2/sql/frontend/src/pages/nhaban/components/chart.js"],"names":["Column","React","useState","useEffect","axios","Chart","config","data","setData","setConfig","dataW","JSON","parse","window","localStorage","getItem","fetchData","get","MaNhaBan","then","res","temp","name","date","money","ThangMot","ThangHai","ThangBa","ThangTu","ThangNam","ThangSau","ThangBay","ThangTam","ThangChin","ThangMuoi","ThangMuoiMot","ThangMuoiHai","isGroup","xField","yField","seriesField","label","position","layout","type","config2","xAxis","autoHide","autoRotate"],"mappings":"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","sourcesContent":["import { Column } from \"@ant-design/charts\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Chart = ({ config, data, setData, setConfig }) => {\r\n  useEffect(() => {\r\n    const dataW = JSON.parse(window.localStorage.getItem(\"auth\"));\r\n    const fetchData = async () => {\r\n      await axios\r\n        .get(\"http://localhost:5000/api/nhaban/doanhthu/\" + dataW.MaNhaBan)\r\n        .then((res) => {\r\n          let temp = [\r\n            {\r\n              name: \"Đơn hàng\",\r\n              date: \"Jan.\",\r\n              money: res.data[0].ThangMot,\r\n            },\r\n            {\r\n              name: \"Đơn hàng\",\r\n              date: \"Feb.\",\r\n              money: res.data[0].ThangHai,\r\n            },\r\n            {\r\n              name: \"Đơn hàng\",\r\n              date: \"Mar.\",\r\n              money: res.data[0].ThangBa,\r\n            },\r\n            {\r\n              name: \"Đơn hàng\",\r\n              date: \"Apr.\",\r\n              money: res.data[0].ThangTu,\r\n            },\r\n            {\r\n              name: \"Đơn hàng\",\r\n              date: \"May\",\r\n              money: res.data[0].ThangNam,\r\n            },\r\n            {\r\n              name: \"Đơn hàng\",\r\n              date: \"Jun.\",\r\n              money: res.data[0].ThangSau,\r\n            },\r\n            {\r\n              name: \"Đơn hàng\",\r\n              date: \"Jul.\",\r\n              money: res.data[0].ThangBay,\r\n            },\r\n            {\r\n              name: \"Đơn hàng\",\r\n              date: \"Aug.\",\r\n              money: res.data[0].ThangTam,\r\n            },\r\n            {\r\n              name: \"Đơn hàng\",\r\n              date: \"Sep.\",\r\n              money: res.data[0].ThangChin,\r\n            },\r\n            {\r\n              name: \"Đơn hàng\",\r\n              date: \"Oct.\",\r\n              money: res.data[0].ThangMuoi,\r\n            },\r\n            {\r\n              name: \"Đơn hàng\",\r\n              date: \"Nov.\",\r\n              money: res.data[0].ThangMuoiMot,\r\n            },\r\n            {\r\n              name: \"Đơn hàng\",\r\n              date: \"Dec.\",\r\n              money: res.data[0].ThangMuoiHai,\r\n            },\r\n          ];\r\n          setData(temp);\r\n          let config = {\r\n            data: data,\r\n            isGroup: true,\r\n            xField: \"date\",\r\n            yField: \"money\",\r\n            seriesField: \"name\",\r\n            label: {\r\n              position: \"middle\",\r\n              layout: [\r\n                { type: \"interval-adjust-position\" },\r\n                { type: \"interval-hide-overlap\" },\r\n                { type: \"adjust-color\" },\r\n              ],\r\n            },\r\n          };\r\n          let config2 = {\r\n            data: temp,\r\n            isGroup: true,\r\n            xField: \"date\",\r\n            yField: \"money\",\r\n            seriesField: \"name\",\r\n            label: {\r\n              position: \"middle\",\r\n              layout: [\r\n                { type: \"interval-adjust-position\" },\r\n                { type: \"interval-hide-overlap\" },\r\n                { type: \"adjust-color\" },\r\n              ],\r\n            },\r\n            xAxis: {\r\n              label: {\r\n                autoHide: true,\r\n                autoRotate: false,\r\n              },\r\n            },\r\n          };\r\n          setConfig(config);\r\n        });\r\n    };\r\n    \r\n    // fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Column {...config} />\r\n    </div>\r\n  );\r\n};\r\nexport default Chart;\r\n"]},"metadata":{},"sourceType":"module"}