{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { registerNode, BaseGlobal as Global, Util } from '@antv/g6-core';\nimport { deepMix, isNumber } from '@antv/util';\nvar defaultSubjectColors = Util.defaultSubjectColors; // 饼图节点\n\nregisterNode('donut', {\n  // 自定义节点时的配置\n  options: {\n    size: Global.defaultNode.size,\n    style: {\n      x: 0,\n      y: 0,\n      stroke: Global.defaultNode.style.stroke,\n      fill: Global.defaultNode.style.fill,\n      lineWidth: Global.defaultNode.style.lineWidth\n    },\n    labelCfg: {\n      style: {\n        fill: Global.nodeLabel.style.fill,\n        fontSize: Global.nodeLabel.style.fontSize\n      }\n    },\n    // 节点上左右上下四个方向上的链接circle配置\n    linkPoints: {\n      top: false,\n      right: false,\n      bottom: false,\n      left: false,\n      // circle的大小\n      size: Global.defaultNode.linkPoints.size,\n      lineWidth: Global.defaultNode.linkPoints.lineWidth,\n      fill: Global.defaultNode.linkPoints.fill,\n      stroke: Global.defaultNode.linkPoints.stroke\n    },\n    // 节点中icon配置\n    icon: {\n      // 是否显示icon，值为 false 则不渲染icon\n      show: false,\n      // icon的地址，字符串类型\n      img: 'https://gw.alipayobjects.com/zos/bmw-prod/5d015065-8505-4e7a-baec-976f81e3c41d.svg',\n      width: 20,\n      height: 20\n    },\n    stateStyles: __assign({}, Global.nodeStateStyles)\n  },\n  shapeType: 'circle',\n  // 文本位置\n  labelPosition: 'center',\n  drawShape: function drawShape(cfg, group) {\n    var _a = this.getOptions(cfg).icon,\n        defaultIcon = _a === void 0 ? {} : _a;\n    var style = this.getShapeStyle(cfg);\n    var icon = deepMix({}, defaultIcon, cfg.icon);\n    var keyShape = group.addShape('circle', {\n      attrs: style,\n      className: this.type + \"-keyShape\",\n      draggable: true,\n      name: this.type + \"-keyShape\"\n    });\n    var width = icon.width,\n        height = icon.height,\n        show = icon.show,\n        text = icon.text;\n\n    if (show) {\n      if (text) {\n        group.addShape('text', {\n          attrs: __assign({\n            x: 0,\n            y: 0,\n            fontSize: 12,\n            fill: '#000',\n            stroke: '#000',\n            textBaseline: 'middle',\n            textAlign: 'center'\n          }, icon),\n          className: this.type + \"-icon\",\n          name: this.type + \"-icon\",\n          draggable: true\n        });\n      } else {\n        group.addShape('image', {\n          attrs: __assign({\n            x: -width / 2,\n            y: -height / 2\n          }, icon),\n          className: this.type + \"-icon\",\n          name: this.type + \"-icon\",\n          draggable: true\n        });\n      }\n    }\n\n    var donutR = keyShape.attr('r');\n    var innerR = 0.6 * donutR; // 甜甜圈的内环半径\n\n    var arcR = (donutR + innerR) / 2; // 内环半径与外环半径的平均值\n\n    var _b = cfg,\n        _c = _b.donutAttrs,\n        donutAttrs = _c === void 0 ? {} : _c,\n        _d = _b.donutColorMap,\n        donutColorMap = _d === void 0 ? {} : _d;\n    var attrNum = Object.keys(donutAttrs).length;\n\n    if (donutAttrs && attrNum > 1) {\n      var attrs_1 = [];\n      var totalValue_1 = 0;\n      Object.keys(donutAttrs).forEach(function (name) {\n        var value = donutAttrs[name] || 0;\n        if (!isNumber(value)) return;\n        attrs_1.push({\n          key: name,\n          value: value,\n          color: donutColorMap[name]\n        });\n        totalValue_1 += value;\n      });\n\n      if (totalValue_1) {\n        var lineWidth_1 = donutR - innerR;\n\n        if (attrNum === 1) {\n          group.addShape('circle', {\n            attrs: {\n              r: arcR,\n              x: 0,\n              y: 0,\n              stroke: attrs_1[0].color || defaultSubjectColors[0],\n              lineWidth: lineWidth_1\n            },\n            name: \"fan-shape-0\"\n          });\n          return;\n        }\n\n        var arcBegin_1 = [arcR, 0];\n        var beginAngle_1 = 0;\n        attrs_1.forEach(function (attr, i) {\n          var percent = attr.value / totalValue_1;\n          if (percent < 0.001) return;\n          if (percent > 0.999) percent = 1;\n\n          if (percent === 1) {\n            group.addShape('circle', {\n              attrs: {\n                r: arcR,\n                x: 0,\n                y: 0,\n                stroke: attr.color || defaultSubjectColors[i % defaultSubjectColors.length],\n                lineWidth: lineWidth_1\n              },\n              name: \"fan-shape-\" + i\n            });\n            return;\n          }\n\n          attr.percent = percent;\n          attr.angle = percent * Math.PI * 2;\n          attr.beginAgnle = beginAngle_1;\n          beginAngle_1 += attr.angle;\n          attr.endAngle = beginAngle_1;\n          attr.arcBegin = arcBegin_1;\n          attr.arcEnd = [arcR * Math.cos(attr.endAngle), -arcR * Math.sin(attr.endAngle)];\n          var isBig = attr.angle > Math.PI ? 1 : 0;\n          var path = [['M', attr.arcBegin[0], attr.arcBegin[1]], ['A', arcR, arcR, 0, isBig, 0, attr.arcEnd[0], attr.arcEnd[1]], ['L', attr.arcEnd[0], attr.arcEnd[1]]];\n          group.addShape('path', {\n            attrs: {\n              path: path,\n              lineWidth: lineWidth_1,\n              stroke: attr.color || defaultSubjectColors[i % defaultSubjectColors.length]\n            },\n            name: \"fan-shape-\" + i\n          });\n          arcBegin_1 = attr.arcEnd;\n        });\n      }\n    }\n\n    this.drawLinkPoints(cfg, group);\n    return keyShape;\n  },\n  update: undefined\n}, 'circle');","map":{"version":3,"sources":["D:/Code/sqlindex2/sql/frontend/node_modules/@antv/g6-element/es/nodes/donut.js"],"names":["__assign","registerNode","BaseGlobal","Global","Util","deepMix","isNumber","defaultSubjectColors","options","size","defaultNode","style","x","y","stroke","fill","lineWidth","labelCfg","nodeLabel","fontSize","linkPoints","top","right","bottom","left","icon","show","img","width","height","stateStyles","nodeStateStyles","shapeType","labelPosition","drawShape","cfg","group","_a","getOptions","defaultIcon","getShapeStyle","keyShape","addShape","attrs","className","type","draggable","name","text","textBaseline","textAlign","donutR","attr","innerR","arcR","_b","_c","donutAttrs","_d","donutColorMap","attrNum","Object","keys","length","attrs_1","totalValue_1","forEach","value","push","key","color","lineWidth_1","r","arcBegin_1","beginAngle_1","i","percent","angle","Math","PI","beginAgnle","endAngle","arcBegin","arcEnd","cos","sin","isBig","path","drawLinkPoints","update","undefined"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,YAAT,EAAuBC,UAAU,IAAIC,MAArC,EAA6CC,IAA7C,QAAyD,eAAzD;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,YAAlC;AACA,IAAIC,oBAAoB,GAAGH,IAAI,CAACG,oBAAhC,C,CAAsD;;AAEtDN,YAAY,CAAC,OAAD,EAAU;AACpB;AACAO,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAEN,MAAM,CAACO,WAAP,CAAmBD,IADlB;AAEPE,IAAAA,KAAK,EAAE;AACLC,MAAAA,CAAC,EAAE,CADE;AAELC,MAAAA,CAAC,EAAE,CAFE;AAGLC,MAAAA,MAAM,EAAEX,MAAM,CAACO,WAAP,CAAmBC,KAAnB,CAAyBG,MAH5B;AAILC,MAAAA,IAAI,EAAEZ,MAAM,CAACO,WAAP,CAAmBC,KAAnB,CAAyBI,IAJ1B;AAKLC,MAAAA,SAAS,EAAEb,MAAM,CAACO,WAAP,CAAmBC,KAAnB,CAAyBK;AAL/B,KAFA;AASPC,IAAAA,QAAQ,EAAE;AACRN,MAAAA,KAAK,EAAE;AACLI,QAAAA,IAAI,EAAEZ,MAAM,CAACe,SAAP,CAAiBP,KAAjB,CAAuBI,IADxB;AAELI,QAAAA,QAAQ,EAAEhB,MAAM,CAACe,SAAP,CAAiBP,KAAjB,CAAuBQ;AAF5B;AADC,KATH;AAeP;AACAC,IAAAA,UAAU,EAAE;AACVC,MAAAA,GAAG,EAAE,KADK;AAEVC,MAAAA,KAAK,EAAE,KAFG;AAGVC,MAAAA,MAAM,EAAE,KAHE;AAIVC,MAAAA,IAAI,EAAE,KAJI;AAKV;AACAf,MAAAA,IAAI,EAAEN,MAAM,CAACO,WAAP,CAAmBU,UAAnB,CAA8BX,IAN1B;AAOVO,MAAAA,SAAS,EAAEb,MAAM,CAACO,WAAP,CAAmBU,UAAnB,CAA8BJ,SAP/B;AAQVD,MAAAA,IAAI,EAAEZ,MAAM,CAACO,WAAP,CAAmBU,UAAnB,CAA8BL,IAR1B;AASVD,MAAAA,MAAM,EAAEX,MAAM,CAACO,WAAP,CAAmBU,UAAnB,CAA8BN;AAT5B,KAhBL;AA2BP;AACAW,IAAAA,IAAI,EAAE;AACJ;AACAC,MAAAA,IAAI,EAAE,KAFF;AAGJ;AACAC,MAAAA,GAAG,EAAE,oFAJD;AAKJC,MAAAA,KAAK,EAAE,EALH;AAMJC,MAAAA,MAAM,EAAE;AANJ,KA5BC;AAoCPC,IAAAA,WAAW,EAAE9B,QAAQ,CAAC,EAAD,EAAKG,MAAM,CAAC4B,eAAZ;AApCd,GAFW;AAwCpBC,EAAAA,SAAS,EAAE,QAxCS;AAyCpB;AACAC,EAAAA,aAAa,EAAE,QA1CK;AA2CpBC,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBC,GAAnB,EAAwBC,KAAxB,EAA+B;AACxC,QAAIC,EAAE,GAAG,KAAKC,UAAL,CAAgBH,GAAhB,EAAqBV,IAA9B;AAAA,QACIc,WAAW,GAAGF,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EADvC;AAEA,QAAI1B,KAAK,GAAG,KAAK6B,aAAL,CAAmBL,GAAnB,CAAZ;AACA,QAAIV,IAAI,GAAGpB,OAAO,CAAC,EAAD,EAAKkC,WAAL,EAAkBJ,GAAG,CAACV,IAAtB,CAAlB;AACA,QAAIgB,QAAQ,GAAGL,KAAK,CAACM,QAAN,CAAe,QAAf,EAAyB;AACtCC,MAAAA,KAAK,EAAEhC,KAD+B;AAEtCiC,MAAAA,SAAS,EAAE,KAAKC,IAAL,GAAY,WAFe;AAGtCC,MAAAA,SAAS,EAAE,IAH2B;AAItCC,MAAAA,IAAI,EAAE,KAAKF,IAAL,GAAY;AAJoB,KAAzB,CAAf;AAMA,QAAIjB,KAAK,GAAGH,IAAI,CAACG,KAAjB;AAAA,QACIC,MAAM,GAAGJ,IAAI,CAACI,MADlB;AAAA,QAEIH,IAAI,GAAGD,IAAI,CAACC,IAFhB;AAAA,QAGIsB,IAAI,GAAGvB,IAAI,CAACuB,IAHhB;;AAKA,QAAItB,IAAJ,EAAU;AACR,UAAIsB,IAAJ,EAAU;AACRZ,QAAAA,KAAK,CAACM,QAAN,CAAe,MAAf,EAAuB;AACrBC,UAAAA,KAAK,EAAE3C,QAAQ,CAAC;AACdY,YAAAA,CAAC,EAAE,CADW;AAEdC,YAAAA,CAAC,EAAE,CAFW;AAGdM,YAAAA,QAAQ,EAAE,EAHI;AAIdJ,YAAAA,IAAI,EAAE,MAJQ;AAKdD,YAAAA,MAAM,EAAE,MALM;AAMdmC,YAAAA,YAAY,EAAE,QANA;AAOdC,YAAAA,SAAS,EAAE;AAPG,WAAD,EAQZzB,IARY,CADM;AAUrBmB,UAAAA,SAAS,EAAE,KAAKC,IAAL,GAAY,OAVF;AAWrBE,UAAAA,IAAI,EAAE,KAAKF,IAAL,GAAY,OAXG;AAYrBC,UAAAA,SAAS,EAAE;AAZU,SAAvB;AAcD,OAfD,MAeO;AACLV,QAAAA,KAAK,CAACM,QAAN,CAAe,OAAf,EAAwB;AACtBC,UAAAA,KAAK,EAAE3C,QAAQ,CAAC;AACdY,YAAAA,CAAC,EAAE,CAACgB,KAAD,GAAS,CADE;AAEdf,YAAAA,CAAC,EAAE,CAACgB,MAAD,GAAU;AAFC,WAAD,EAGZJ,IAHY,CADO;AAKtBmB,UAAAA,SAAS,EAAE,KAAKC,IAAL,GAAY,OALD;AAMtBE,UAAAA,IAAI,EAAE,KAAKF,IAAL,GAAY,OANI;AAOtBC,UAAAA,SAAS,EAAE;AAPW,SAAxB;AASD;AACF;;AAED,QAAIK,MAAM,GAAGV,QAAQ,CAACW,IAAT,CAAc,GAAd,CAAb;AACA,QAAIC,MAAM,GAAG,MAAMF,MAAnB,CA9CwC,CA8Cb;;AAE3B,QAAIG,IAAI,GAAG,CAACH,MAAM,GAAGE,MAAV,IAAoB,CAA/B,CAhDwC,CAgDN;;AAElC,QAAIE,EAAE,GAAGpB,GAAT;AAAA,QACIqB,EAAE,GAAGD,EAAE,CAACE,UADZ;AAAA,QAEIA,UAAU,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAFtC;AAAA,QAGIE,EAAE,GAAGH,EAAE,CAACI,aAHZ;AAAA,QAIIA,aAAa,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAJzC;AAKA,QAAIE,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYL,UAAZ,EAAwBM,MAAtC;;AAEA,QAAIN,UAAU,IAAIG,OAAO,GAAG,CAA5B,EAA+B;AAC7B,UAAII,OAAO,GAAG,EAAd;AACA,UAAIC,YAAY,GAAG,CAAnB;AACAJ,MAAAA,MAAM,CAACC,IAAP,CAAYL,UAAZ,EAAwBS,OAAxB,CAAgC,UAAUnB,IAAV,EAAgB;AAC9C,YAAIoB,KAAK,GAAGV,UAAU,CAACV,IAAD,CAAV,IAAoB,CAAhC;AACA,YAAI,CAACzC,QAAQ,CAAC6D,KAAD,CAAb,EAAsB;AACtBH,QAAAA,OAAO,CAACI,IAAR,CAAa;AACXC,UAAAA,GAAG,EAAEtB,IADM;AAEXoB,UAAAA,KAAK,EAAEA,KAFI;AAGXG,UAAAA,KAAK,EAAEX,aAAa,CAACZ,IAAD;AAHT,SAAb;AAKAkB,QAAAA,YAAY,IAAIE,KAAhB;AACD,OATD;;AAWA,UAAIF,YAAJ,EAAkB;AAChB,YAAIM,WAAW,GAAGpB,MAAM,GAAGE,MAA3B;;AAEA,YAAIO,OAAO,KAAK,CAAhB,EAAmB;AACjBxB,UAAAA,KAAK,CAACM,QAAN,CAAe,QAAf,EAAyB;AACvBC,YAAAA,KAAK,EAAE;AACL6B,cAAAA,CAAC,EAAElB,IADE;AAEL1C,cAAAA,CAAC,EAAE,CAFE;AAGLC,cAAAA,CAAC,EAAE,CAHE;AAILC,cAAAA,MAAM,EAAEkD,OAAO,CAAC,CAAD,CAAP,CAAWM,KAAX,IAAoB/D,oBAAoB,CAAC,CAAD,CAJ3C;AAKLS,cAAAA,SAAS,EAAEuD;AALN,aADgB;AAQvBxB,YAAAA,IAAI,EAAE;AARiB,WAAzB;AAUA;AACD;;AAED,YAAI0B,UAAU,GAAG,CAACnB,IAAD,EAAO,CAAP,CAAjB;AACA,YAAIoB,YAAY,GAAG,CAAnB;AACAV,QAAAA,OAAO,CAACE,OAAR,CAAgB,UAAUd,IAAV,EAAgBuB,CAAhB,EAAmB;AACjC,cAAIC,OAAO,GAAGxB,IAAI,CAACe,KAAL,GAAaF,YAA3B;AACA,cAAIW,OAAO,GAAG,KAAd,EAAqB;AACrB,cAAIA,OAAO,GAAG,KAAd,EAAqBA,OAAO,GAAG,CAAV;;AAErB,cAAIA,OAAO,KAAK,CAAhB,EAAmB;AACjBxC,YAAAA,KAAK,CAACM,QAAN,CAAe,QAAf,EAAyB;AACvBC,cAAAA,KAAK,EAAE;AACL6B,gBAAAA,CAAC,EAAElB,IADE;AAEL1C,gBAAAA,CAAC,EAAE,CAFE;AAGLC,gBAAAA,CAAC,EAAE,CAHE;AAILC,gBAAAA,MAAM,EAAEsC,IAAI,CAACkB,KAAL,IAAc/D,oBAAoB,CAACoE,CAAC,GAAGpE,oBAAoB,CAACwD,MAA1B,CAJrC;AAKL/C,gBAAAA,SAAS,EAAEuD;AALN,eADgB;AAQvBxB,cAAAA,IAAI,EAAE,eAAe4B;AARE,aAAzB;AAUA;AACD;;AAEDvB,UAAAA,IAAI,CAACwB,OAAL,GAAeA,OAAf;AACAxB,UAAAA,IAAI,CAACyB,KAAL,GAAaD,OAAO,GAAGE,IAAI,CAACC,EAAf,GAAoB,CAAjC;AACA3B,UAAAA,IAAI,CAAC4B,UAAL,GAAkBN,YAAlB;AACAA,UAAAA,YAAY,IAAItB,IAAI,CAACyB,KAArB;AACAzB,UAAAA,IAAI,CAAC6B,QAAL,GAAgBP,YAAhB;AACAtB,UAAAA,IAAI,CAAC8B,QAAL,GAAgBT,UAAhB;AACArB,UAAAA,IAAI,CAAC+B,MAAL,GAAc,CAAC7B,IAAI,GAAGwB,IAAI,CAACM,GAAL,CAAShC,IAAI,CAAC6B,QAAd,CAAR,EAAiC,CAAC3B,IAAD,GAAQwB,IAAI,CAACO,GAAL,CAASjC,IAAI,CAAC6B,QAAd,CAAzC,CAAd;AACA,cAAIK,KAAK,GAAGlC,IAAI,CAACyB,KAAL,GAAaC,IAAI,CAACC,EAAlB,GAAuB,CAAvB,GAA2B,CAAvC;AACA,cAAIQ,IAAI,GAAG,CAAC,CAAC,GAAD,EAAMnC,IAAI,CAAC8B,QAAL,CAAc,CAAd,CAAN,EAAwB9B,IAAI,CAAC8B,QAAL,CAAc,CAAd,CAAxB,CAAD,EAA4C,CAAC,GAAD,EAAM5B,IAAN,EAAYA,IAAZ,EAAkB,CAAlB,EAAqBgC,KAArB,EAA4B,CAA5B,EAA+BlC,IAAI,CAAC+B,MAAL,CAAY,CAAZ,CAA/B,EAA+C/B,IAAI,CAAC+B,MAAL,CAAY,CAAZ,CAA/C,CAA5C,EAA4G,CAAC,GAAD,EAAM/B,IAAI,CAAC+B,MAAL,CAAY,CAAZ,CAAN,EAAsB/B,IAAI,CAAC+B,MAAL,CAAY,CAAZ,CAAtB,CAA5G,CAAX;AACA/C,UAAAA,KAAK,CAACM,QAAN,CAAe,MAAf,EAAuB;AACrBC,YAAAA,KAAK,EAAE;AACL4C,cAAAA,IAAI,EAAEA,IADD;AAELvE,cAAAA,SAAS,EAAEuD,WAFN;AAGLzD,cAAAA,MAAM,EAAEsC,IAAI,CAACkB,KAAL,IAAc/D,oBAAoB,CAACoE,CAAC,GAAGpE,oBAAoB,CAACwD,MAA1B;AAHrC,aADc;AAMrBhB,YAAAA,IAAI,EAAE,eAAe4B;AANA,WAAvB;AAQAF,UAAAA,UAAU,GAAGrB,IAAI,CAAC+B,MAAlB;AACD,SArCD;AAsCD;AACF;;AAED,SAAKK,cAAL,CAAoBrD,GAApB,EAAyBC,KAAzB;AACA,WAAOK,QAAP;AACD,GAhLmB;AAiLpBgD,EAAAA,MAAM,EAAEC;AAjLY,CAAV,EAkLT,QAlLS,CAAZ","sourcesContent":["import { __assign } from \"tslib\";\r\nimport { registerNode, BaseGlobal as Global, Util } from '@antv/g6-core';\r\nimport { deepMix, isNumber } from '@antv/util';\r\nvar defaultSubjectColors = Util.defaultSubjectColors; // 饼图节点\r\n\r\nregisterNode('donut', {\r\n  // 自定义节点时的配置\r\n  options: {\r\n    size: Global.defaultNode.size,\r\n    style: {\r\n      x: 0,\r\n      y: 0,\r\n      stroke: Global.defaultNode.style.stroke,\r\n      fill: Global.defaultNode.style.fill,\r\n      lineWidth: Global.defaultNode.style.lineWidth\r\n    },\r\n    labelCfg: {\r\n      style: {\r\n        fill: Global.nodeLabel.style.fill,\r\n        fontSize: Global.nodeLabel.style.fontSize\r\n      }\r\n    },\r\n    // 节点上左右上下四个方向上的链接circle配置\r\n    linkPoints: {\r\n      top: false,\r\n      right: false,\r\n      bottom: false,\r\n      left: false,\r\n      // circle的大小\r\n      size: Global.defaultNode.linkPoints.size,\r\n      lineWidth: Global.defaultNode.linkPoints.lineWidth,\r\n      fill: Global.defaultNode.linkPoints.fill,\r\n      stroke: Global.defaultNode.linkPoints.stroke\r\n    },\r\n    // 节点中icon配置\r\n    icon: {\r\n      // 是否显示icon，值为 false 则不渲染icon\r\n      show: false,\r\n      // icon的地址，字符串类型\r\n      img: 'https://gw.alipayobjects.com/zos/bmw-prod/5d015065-8505-4e7a-baec-976f81e3c41d.svg',\r\n      width: 20,\r\n      height: 20\r\n    },\r\n    stateStyles: __assign({}, Global.nodeStateStyles)\r\n  },\r\n  shapeType: 'circle',\r\n  // 文本位置\r\n  labelPosition: 'center',\r\n  drawShape: function drawShape(cfg, group) {\r\n    var _a = this.getOptions(cfg).icon,\r\n        defaultIcon = _a === void 0 ? {} : _a;\r\n    var style = this.getShapeStyle(cfg);\r\n    var icon = deepMix({}, defaultIcon, cfg.icon);\r\n    var keyShape = group.addShape('circle', {\r\n      attrs: style,\r\n      className: this.type + \"-keyShape\",\r\n      draggable: true,\r\n      name: this.type + \"-keyShape\"\r\n    });\r\n    var width = icon.width,\r\n        height = icon.height,\r\n        show = icon.show,\r\n        text = icon.text;\r\n\r\n    if (show) {\r\n      if (text) {\r\n        group.addShape('text', {\r\n          attrs: __assign({\r\n            x: 0,\r\n            y: 0,\r\n            fontSize: 12,\r\n            fill: '#000',\r\n            stroke: '#000',\r\n            textBaseline: 'middle',\r\n            textAlign: 'center'\r\n          }, icon),\r\n          className: this.type + \"-icon\",\r\n          name: this.type + \"-icon\",\r\n          draggable: true\r\n        });\r\n      } else {\r\n        group.addShape('image', {\r\n          attrs: __assign({\r\n            x: -width / 2,\r\n            y: -height / 2\r\n          }, icon),\r\n          className: this.type + \"-icon\",\r\n          name: this.type + \"-icon\",\r\n          draggable: true\r\n        });\r\n      }\r\n    }\r\n\r\n    var donutR = keyShape.attr('r');\r\n    var innerR = 0.6 * donutR; // 甜甜圈的内环半径\r\n\r\n    var arcR = (donutR + innerR) / 2; // 内环半径与外环半径的平均值\r\n\r\n    var _b = cfg,\r\n        _c = _b.donutAttrs,\r\n        donutAttrs = _c === void 0 ? {} : _c,\r\n        _d = _b.donutColorMap,\r\n        donutColorMap = _d === void 0 ? {} : _d;\r\n    var attrNum = Object.keys(donutAttrs).length;\r\n\r\n    if (donutAttrs && attrNum > 1) {\r\n      var attrs_1 = [];\r\n      var totalValue_1 = 0;\r\n      Object.keys(donutAttrs).forEach(function (name) {\r\n        var value = donutAttrs[name] || 0;\r\n        if (!isNumber(value)) return;\r\n        attrs_1.push({\r\n          key: name,\r\n          value: value,\r\n          color: donutColorMap[name]\r\n        });\r\n        totalValue_1 += value;\r\n      });\r\n\r\n      if (totalValue_1) {\r\n        var lineWidth_1 = donutR - innerR;\r\n\r\n        if (attrNum === 1) {\r\n          group.addShape('circle', {\r\n            attrs: {\r\n              r: arcR,\r\n              x: 0,\r\n              y: 0,\r\n              stroke: attrs_1[0].color || defaultSubjectColors[0],\r\n              lineWidth: lineWidth_1\r\n            },\r\n            name: \"fan-shape-0\"\r\n          });\r\n          return;\r\n        }\r\n\r\n        var arcBegin_1 = [arcR, 0];\r\n        var beginAngle_1 = 0;\r\n        attrs_1.forEach(function (attr, i) {\r\n          var percent = attr.value / totalValue_1;\r\n          if (percent < 0.001) return;\r\n          if (percent > 0.999) percent = 1;\r\n\r\n          if (percent === 1) {\r\n            group.addShape('circle', {\r\n              attrs: {\r\n                r: arcR,\r\n                x: 0,\r\n                y: 0,\r\n                stroke: attr.color || defaultSubjectColors[i % defaultSubjectColors.length],\r\n                lineWidth: lineWidth_1\r\n              },\r\n              name: \"fan-shape-\" + i\r\n            });\r\n            return;\r\n          }\r\n\r\n          attr.percent = percent;\r\n          attr.angle = percent * Math.PI * 2;\r\n          attr.beginAgnle = beginAngle_1;\r\n          beginAngle_1 += attr.angle;\r\n          attr.endAngle = beginAngle_1;\r\n          attr.arcBegin = arcBegin_1;\r\n          attr.arcEnd = [arcR * Math.cos(attr.endAngle), -arcR * Math.sin(attr.endAngle)];\r\n          var isBig = attr.angle > Math.PI ? 1 : 0;\r\n          var path = [['M', attr.arcBegin[0], attr.arcBegin[1]], ['A', arcR, arcR, 0, isBig, 0, attr.arcEnd[0], attr.arcEnd[1]], ['L', attr.arcEnd[0], attr.arcEnd[1]]];\r\n          group.addShape('path', {\r\n            attrs: {\r\n              path: path,\r\n              lineWidth: lineWidth_1,\r\n              stroke: attr.color || defaultSubjectColors[i % defaultSubjectColors.length]\r\n            },\r\n            name: \"fan-shape-\" + i\r\n          });\r\n          arcBegin_1 = attr.arcEnd;\r\n        });\r\n      }\r\n    }\r\n\r\n    this.drawLinkPoints(cfg, group);\r\n    return keyShape;\r\n  },\r\n  update: undefined\r\n}, 'circle');"]},"metadata":{},"sourceType":"module"}