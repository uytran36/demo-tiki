{"ast":null,"code":"import { useRef, useEffect } from 'react';\nimport { getGraphSize, processMinimap } from '../graphs/utils';\nimport { isObject, isString } from '@antv/util';\nexport default function useInit(graphInstance, config, container) {\n  var graphHook = useRef();\n  var data = config.data,\n      nodeStyle = config.nodeStyle,\n      nodeAnchorPoints = config.nodeAnchorPoints,\n      nodeType = config.nodeType,\n      edgeType = config.edgeType,\n      edgeStyle = config.edgeStyle,\n      width = config.width,\n      height = config.height,\n      layout = config.layout,\n      minimapCfg = config.minimapCfg,\n      behaviors = config.behaviors,\n      nodeLabelCfg = config.nodeLabelCfg,\n      edgeLabelCfg = config.edgeLabelCfg,\n      _a = config.autoFit,\n      autoFit = _a === void 0 ? true : _a,\n      _b = config.adjustLayout,\n      adjustLayout = _b === void 0 ? true : _b;\n  var minimap;\n  useEffect(function () {\n    if (graphInstance && !graphInstance.destroyed) {\n      graphInstance.changeData(data);\n\n      if (adjustLayout) {\n        autoFit ? graphInstance.fitView() : graphInstance.fitCenter();\n      }\n    }\n  }, [data]);\n  useEffect(function () {\n    if (graphInstance && !graphInstance.destroyed) {\n      graphInstance.getNodes().forEach(function (node) {\n        graphInstance.updateItem(node, {\n          type: nodeType,\n          style: nodeStyle,\n          anchorPoints: nodeAnchorPoints,\n          labelCfg: nodeLabelCfg\n        });\n      });\n    }\n  }, [nodeStyle, nodeAnchorPoints, nodeType]);\n  useEffect(function () {\n    if (graphInstance && !graphInstance.destroyed) {\n      graphInstance.getEdges().forEach(function (edge) {\n        graphInstance.updateItem(edge, {\n          type: edgeType,\n          style: edgeStyle,\n          labelCfg: edgeLabelCfg\n        });\n      });\n    }\n  }, [edgeStyle, edgeType]);\n  useEffect(function () {\n    if (graphInstance && !graphInstance.destroyed) {\n      var graphSize = getGraphSize(width, height, container);\n      graphInstance.changeSize(graphSize[0], graphSize[1]);\n    }\n  }, [container, width, height]);\n  useEffect(function () {\n    if (graphInstance && !graphInstance.destroyed) {\n      graphInstance.updateLayout(layout);\n    }\n  }, [layout]);\n  useEffect(function () {\n    if (!minimapCfg || !graphInstance || graphInstance.destroyed) {\n      return;\n    }\n\n    if (minimapCfg.show) {\n      minimap = processMinimap(minimapCfg, graphInstance);\n      minimap === null || minimap === void 0 ? void 0 : minimap.updateCanvas();\n    } else {\n      var pluginMinimap = graphInstance.get('plugins')[0];\n\n      if (pluginMinimap) {\n        graphInstance.removePlugin(pluginMinimap);\n      }\n    }\n  }, [minimapCfg]);\n  useEffect(function () {\n    if (graphInstance && !graphInstance.destroyed) {\n      var defaultMode = graphInstance.get('modes').default;\n      var removingBehaviors_1 = [];\n      defaultMode.forEach(function (be) {\n        if (isObject(be)) {\n          removingBehaviors_1.push(be.type);\n        } else if (isString(be)) {\n          removingBehaviors_1.push(be);\n        }\n      });\n      graphInstance.removeBehaviors(removingBehaviors_1, 'default');\n      graphInstance.addBehaviors(behaviors, 'default');\n    }\n  }, [behaviors]);\n  useEffect(function () {\n    graphHook.current = graphInstance;\n    return function () {\n      if (graphInstance && !graphInstance.destroyed) {\n        graphInstance.destroy();\n        graphInstance = undefined;\n      }\n    };\n  }, []);\n  return {\n    graphHook: graphHook\n  };\n}","map":{"version":3,"sources":["D:/LECONS-KHTN/CSDL Avanc√©/TH/sqlindex2/sql/frontend/node_modules/@ant-design/charts/es/hooks/useGraph.js"],"names":["useRef","useEffect","getGraphSize","processMinimap","isObject","isString","useInit","graphInstance","config","container","graphHook","data","nodeStyle","nodeAnchorPoints","nodeType","edgeType","edgeStyle","width","height","layout","minimapCfg","behaviors","nodeLabelCfg","edgeLabelCfg","_a","autoFit","_b","adjustLayout","minimap","destroyed","changeData","fitView","fitCenter","getNodes","forEach","node","updateItem","type","style","anchorPoints","labelCfg","getEdges","edge","graphSize","changeSize","updateLayout","show","updateCanvas","pluginMinimap","get","removePlugin","defaultMode","default","removingBehaviors_1","be","push","removeBehaviors","addBehaviors","current","destroy","undefined"],"mappings":"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","sourcesContent":["import { useRef, useEffect } from 'react';\nimport { getGraphSize, processMinimap } from '../graphs/utils';\nimport { isObject, isString } from '@antv/util';\nexport default function useInit(graphInstance, config, container) {\n    var graphHook = useRef();\n    var data = config.data, nodeStyle = config.nodeStyle, nodeAnchorPoints = config.nodeAnchorPoints, nodeType = config.nodeType, edgeType = config.edgeType, edgeStyle = config.edgeStyle, width = config.width, height = config.height, layout = config.layout, minimapCfg = config.minimapCfg, behaviors = config.behaviors, nodeLabelCfg = config.nodeLabelCfg, edgeLabelCfg = config.edgeLabelCfg, _a = config.autoFit, autoFit = _a === void 0 ? true : _a, _b = config.adjustLayout, adjustLayout = _b === void 0 ? true : _b;\n    var minimap;\n    useEffect(function () {\n        if (graphInstance && !graphInstance.destroyed) {\n            graphInstance.changeData(data);\n            if (adjustLayout) {\n                autoFit ? graphInstance.fitView() : graphInstance.fitCenter();\n            }\n        }\n    }, [data]);\n    useEffect(function () {\n        if (graphInstance && !graphInstance.destroyed) {\n            graphInstance.getNodes().forEach(function (node) {\n                graphInstance.updateItem(node, {\n                    type: nodeType,\n                    style: nodeStyle,\n                    anchorPoints: nodeAnchorPoints,\n                    labelCfg: nodeLabelCfg,\n                });\n            });\n        }\n    }, [nodeStyle, nodeAnchorPoints, nodeType]);\n    useEffect(function () {\n        if (graphInstance && !graphInstance.destroyed) {\n            graphInstance.getEdges().forEach(function (edge) {\n                graphInstance.updateItem(edge, {\n                    type: edgeType,\n                    style: edgeStyle,\n                    labelCfg: edgeLabelCfg,\n                });\n            });\n        }\n    }, [edgeStyle, edgeType]);\n    useEffect(function () {\n        if (graphInstance && !graphInstance.destroyed) {\n            var graphSize = getGraphSize(width, height, container);\n            graphInstance.changeSize(graphSize[0], graphSize[1]);\n        }\n    }, [container, width, height]);\n    useEffect(function () {\n        if (graphInstance && !graphInstance.destroyed) {\n            graphInstance.updateLayout(layout);\n        }\n    }, [layout]);\n    useEffect(function () {\n        if (!minimapCfg || !graphInstance || graphInstance.destroyed) {\n            return;\n        }\n        if (minimapCfg.show) {\n            minimap = processMinimap(minimapCfg, graphInstance);\n            minimap === null || minimap === void 0 ? void 0 : minimap.updateCanvas();\n        }\n        else {\n            var pluginMinimap = graphInstance.get('plugins')[0];\n            if (pluginMinimap) {\n                graphInstance.removePlugin(pluginMinimap);\n            }\n        }\n    }, [minimapCfg]);\n    useEffect(function () {\n        if (graphInstance && !graphInstance.destroyed) {\n            var defaultMode = graphInstance.get('modes').default;\n            var removingBehaviors_1 = [];\n            defaultMode.forEach(function (be) {\n                if (isObject(be)) {\n                    removingBehaviors_1.push(be.type);\n                }\n                else if (isString(be)) {\n                    removingBehaviors_1.push(be);\n                }\n            });\n            graphInstance.removeBehaviors(removingBehaviors_1, 'default');\n            graphInstance.addBehaviors(behaviors, 'default');\n        }\n    }, [behaviors]);\n    useEffect(function () {\n        graphHook.current = graphInstance;\n        return function () {\n            if (graphInstance && !graphInstance.destroyed) {\n                graphInstance.destroy();\n                graphInstance = undefined;\n            }\n        };\n    }, []);\n    return {\n        graphHook: graphHook,\n    };\n}\n"]},"metadata":{},"sourceType":"module"}