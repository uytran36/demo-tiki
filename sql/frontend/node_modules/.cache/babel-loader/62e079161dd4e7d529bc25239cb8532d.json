{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React, { useEffect } from 'react';\nimport G6 from '@antv/g6';\nimport { ErrorBoundary } from '../../base';\nimport useGraph from '../../hooks/useGraph';\nimport useProps from '../../hooks/useProps';\nimport ChartLoading from '../../util/createLoading';\nimport { getGraphSize, getGraphId } from '../utils';\nimport { processMinimap, renderGraph, getCommonConfig, getArrowCfg, bindStateEvents } from '../utils';\nimport { defaultFlowGraphAnchorPoints, defaultStateStyles, defaultNodeStyle } from '../constants';\nvar graphs = {};\nvar defaultLayout = {\n  type: 'dendrogram',\n  direction: 'LR',\n  nodeSep: 20,\n  rankSep: 100,\n  radial: true\n};\nvar defaultProps = {\n  nodeCfg: {\n    type: 'circle',\n    size: 30,\n    anchorPoints: defaultFlowGraphAnchorPoints,\n    linkCenter: true,\n    nodeStateStyles: defaultStateStyles,\n    style: defaultNodeStyle\n  },\n  edgeCfg: {\n    type: 'line',\n    edgeStateStyles: defaultStateStyles\n  },\n  behaviors: ['zoom-canvas', 'drag-canvas'],\n  layout: defaultLayout,\n  animate: true,\n  markerPosition: 'right',\n  autoFit: true,\n  fitCenter: true,\n  style: {\n    height: 'inherit'\n  }\n};\n\nvar RadialTreeGraph = function (props) {\n  var uProps = useProps(props, defaultProps).uProps;\n  var data = uProps.data,\n      className = uProps.className,\n      style = uProps.style,\n      width = uProps.width,\n      height = uProps.height,\n      behaviors = uProps.behaviors,\n      layout = uProps.layout,\n      animate = uProps.animate,\n      nodeCfg = uProps.nodeCfg,\n      edgeCfg = uProps.edgeCfg,\n      autoFit = uProps.autoFit,\n      fitCenter = uProps.fitCenter,\n      minimapCfg = uProps.minimapCfg,\n      onReady = uProps.onReady,\n      loading = uProps.loading,\n      loadingTemplate = uProps.loadingTemplate,\n      errorTemplate = uProps.errorTemplate;\n\n  var _a = nodeCfg !== null && nodeCfg !== void 0 ? nodeCfg : {},\n      nodeType = _a.type,\n      nodeSize = _a.size,\n      nodeAnchorPoints = _a.anchorPoints,\n      nodeStateStyles = _a.nodeStateStyles,\n      linkCenter = _a.linkCenter,\n      nodeStyle = _a.style,\n      nodeLabelCfg = _a.label;\n\n  var _b = edgeCfg !== null && edgeCfg !== void 0 ? edgeCfg : {},\n      edgeType = _b.type,\n      edgeStyle = _b.style,\n      startArrowCfg = _b.startArrow,\n      endArrowCfg = _b.endArrow,\n      edgeLabelCfg = _b.label,\n      edgeStateStyles = _b.edgeStateStyles;\n\n  var container = React.useRef(null);\n  var graph = React.useRef(null);\n  var graphId = getGraphId(graph);\n  useGraph(graphs[graphId], uProps, container);\n  useEffect(function () {\n    var graphSize = getGraphSize(width, height, container);\n    var graph = graphs[graphId];\n\n    if (!graph) {\n      graph = new G6.TreeGraph({\n        container: container.current,\n        width: graphSize[0],\n        height: graphSize[1],\n        animate: animate,\n        linkCenter: linkCenter,\n        modes: {\n          default: behaviors\n        },\n        defaultNode: {\n          type: nodeType,\n          size: nodeSize,\n          anchorPoints: nodeAnchorPoints\n        },\n        defaultEdge: {\n          type: edgeType\n        },\n        nodeStateStyles: nodeStateStyles,\n        edgeStateStyles: edgeStateStyles,\n        layout: layout,\n        fitView: autoFit,\n        fitCenter: fitCenter\n      });\n      graphs[graphId] = graph;\n    }\n\n    graph.node(function (node) {\n      var style = (nodeLabelCfg !== null && nodeLabelCfg !== void 0 ? nodeLabelCfg : {}).style;\n      return {\n        label: node.value,\n        labelCfg: {\n          style: getCommonConfig(style, node, graph)\n        },\n        style: __assign({\n          stroke: '#ccc'\n        }, typeof nodeStyle === 'function' ? nodeStyle(node, graph) : nodeStyle)\n      };\n    });\n    graph.edge(function (edge) {\n      var startArrow = getArrowCfg(startArrowCfg, edge);\n      var endArrow = getArrowCfg(endArrowCfg, edge);\n\n      var _a = edgeLabelCfg !== null && edgeLabelCfg !== void 0 ? edgeLabelCfg : {},\n          style = _a.style,\n          content = _a.content;\n\n      return {\n        label: getCommonConfig(content, edge, graph),\n        labelCfg: {\n          style: getCommonConfig(style, edge, graph)\n        },\n        style: __assign({\n          stroke: '#ccc',\n          startArrow: startArrow,\n          endArrow: endArrow\n        }, typeof edgeStyle === 'function' ? edgeStyle(edge, graph) : edgeStyle)\n      };\n    });\n    processMinimap(minimapCfg, graph);\n    bindStateEvents(graph, uProps);\n    renderGraph(graph, data);\n\n    if (onReady) {\n      onReady(graph);\n    }\n\n    return function () {\n      if (graphs[graphId]) {\n        graphs[graphId].destroy();\n        delete graphs[graphId];\n      }\n    };\n  }, []);\n  return React.createElement(ErrorBoundary, {\n    errorTemplate: errorTemplate\n  }, loading && React.createElement(ChartLoading, {\n    loadingTemplate: loadingTemplate\n  }), React.createElement(\"div\", {\n    className: className,\n    style: style,\n    ref: container\n  }));\n};\n\nexport default RadialTreeGraph;","map":{"version":3,"sources":["D:/SQL/sqlindex2/sql/frontend/node_modules/@ant-design/charts/es/graphs/radialTreeGraph/index.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","useEffect","G6","ErrorBoundary","useGraph","useProps","ChartLoading","getGraphSize","getGraphId","processMinimap","renderGraph","getCommonConfig","getArrowCfg","bindStateEvents","defaultFlowGraphAnchorPoints","defaultStateStyles","defaultNodeStyle","graphs","defaultLayout","type","direction","nodeSep","rankSep","radial","defaultProps","nodeCfg","size","anchorPoints","linkCenter","nodeStateStyles","style","edgeCfg","edgeStateStyles","behaviors","layout","animate","markerPosition","autoFit","fitCenter","height","RadialTreeGraph","props","uProps","data","className","width","minimapCfg","onReady","loading","loadingTemplate","errorTemplate","_a","nodeType","nodeSize","nodeAnchorPoints","nodeStyle","nodeLabelCfg","label","_b","edgeType","edgeStyle","startArrowCfg","startArrow","endArrowCfg","endArrow","edgeLabelCfg","container","useRef","graph","graphId","graphSize","TreeGraph","current","modes","default","defaultNode","defaultEdge","fitView","node","value","labelCfg","stroke","edge","content","destroy","createElement","ref"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,OAAOO,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,EAAP,MAAe,UAAf;AACA,SAASC,aAAT,QAA8B,YAA9B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,UAAzC;AACA,SAASC,cAAT,EAAyBC,WAAzB,EAAsCC,eAAtC,EAAuDC,WAAvD,EAAoEC,eAApE,QAA4F,UAA5F;AACA,SAASC,4BAAT,EAAuCC,kBAAvC,EAA2DC,gBAA3D,QAAmF,cAAnF;AACA,IAAIC,MAAM,GAAG,EAAb;AACA,IAAIC,aAAa,GAAG;AAChBC,EAAAA,IAAI,EAAE,YADU;AAEhBC,EAAAA,SAAS,EAAE,IAFK;AAGhBC,EAAAA,OAAO,EAAE,EAHO;AAIhBC,EAAAA,OAAO,EAAE,GAJO;AAKhBC,EAAAA,MAAM,EAAE;AALQ,CAApB;AAOA,IAAIC,YAAY,GAAG;AACfC,EAAAA,OAAO,EAAE;AACLN,IAAAA,IAAI,EAAE,QADD;AAELO,IAAAA,IAAI,EAAE,EAFD;AAGLC,IAAAA,YAAY,EAAEb,4BAHT;AAILc,IAAAA,UAAU,EAAE,IAJP;AAKLC,IAAAA,eAAe,EAAEd,kBALZ;AAMLe,IAAAA,KAAK,EAAEd;AANF,GADM;AASfe,EAAAA,OAAO,EAAE;AACLZ,IAAAA,IAAI,EAAE,MADD;AAELa,IAAAA,eAAe,EAAEjB;AAFZ,GATM;AAafkB,EAAAA,SAAS,EAAE,CAAC,aAAD,EAAgB,aAAhB,CAbI;AAcfC,EAAAA,MAAM,EAAEhB,aAdO;AAefiB,EAAAA,OAAO,EAAE,IAfM;AAgBfC,EAAAA,cAAc,EAAE,OAhBD;AAiBfC,EAAAA,OAAO,EAAE,IAjBM;AAkBfC,EAAAA,SAAS,EAAE,IAlBI;AAmBfR,EAAAA,KAAK,EAAE;AACHS,IAAAA,MAAM,EAAE;AADL;AAnBQ,CAAnB;;AAuBA,IAAIC,eAAe,GAAG,UAAUC,KAAV,EAAiB;AACnC,MAAIC,MAAM,GAAGrC,QAAQ,CAACoC,KAAD,EAAQjB,YAAR,CAAR,CAA8BkB,MAA3C;AACA,MAAIC,IAAI,GAAGD,MAAM,CAACC,IAAlB;AAAA,MAAwBC,SAAS,GAAGF,MAAM,CAACE,SAA3C;AAAA,MAAsDd,KAAK,GAAGY,MAAM,CAACZ,KAArE;AAAA,MAA4Ee,KAAK,GAAGH,MAAM,CAACG,KAA3F;AAAA,MAAkGN,MAAM,GAAGG,MAAM,CAACH,MAAlH;AAAA,MAA0HN,SAAS,GAAGS,MAAM,CAACT,SAA7I;AAAA,MAAwJC,MAAM,GAAGQ,MAAM,CAACR,MAAxK;AAAA,MAAgLC,OAAO,GAAGO,MAAM,CAACP,OAAjM;AAAA,MAA0MV,OAAO,GAAGiB,MAAM,CAACjB,OAA3N;AAAA,MAAoOM,OAAO,GAAGW,MAAM,CAACX,OAArP;AAAA,MAA8PM,OAAO,GAAGK,MAAM,CAACL,OAA/Q;AAAA,MAAwRC,SAAS,GAAGI,MAAM,CAACJ,SAA3S;AAAA,MAAsTQ,UAAU,GAAGJ,MAAM,CAACI,UAA1U;AAAA,MAAsVC,OAAO,GAAGL,MAAM,CAACK,OAAvW;AAAA,MAAgXC,OAAO,GAAGN,MAAM,CAACM,OAAjY;AAAA,MAA0YC,eAAe,GAAGP,MAAM,CAACO,eAAna;AAAA,MAAobC,aAAa,GAAGR,MAAM,CAACQ,aAA3c;;AACA,MAAIC,EAAE,GAAG1B,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyCA,OAAzC,GAAmD,EAA5D;AAAA,MAAgE2B,QAAQ,GAAGD,EAAE,CAAChC,IAA9E;AAAA,MAAoFkC,QAAQ,GAAGF,EAAE,CAACzB,IAAlG;AAAA,MAAwG4B,gBAAgB,GAAGH,EAAE,CAACxB,YAA9H;AAAA,MAA4IE,eAAe,GAAGsB,EAAE,CAACtB,eAAjK;AAAA,MAAkLD,UAAU,GAAGuB,EAAE,CAACvB,UAAlM;AAAA,MAA8M2B,SAAS,GAAGJ,EAAE,CAACrB,KAA7N;AAAA,MAAoO0B,YAAY,GAAGL,EAAE,CAACM,KAAtP;;AACA,MAAIC,EAAE,GAAG3B,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyCA,OAAzC,GAAmD,EAA5D;AAAA,MAAgE4B,QAAQ,GAAGD,EAAE,CAACvC,IAA9E;AAAA,MAAoFyC,SAAS,GAAGF,EAAE,CAAC5B,KAAnG;AAAA,MAA0G+B,aAAa,GAAGH,EAAE,CAACI,UAA7H;AAAA,MAAyIC,WAAW,GAAGL,EAAE,CAACM,QAA1J;AAAA,MAAoKC,YAAY,GAAGP,EAAE,CAACD,KAAtL;AAAA,MAA6LzB,eAAe,GAAG0B,EAAE,CAAC1B,eAAlN;;AACA,MAAIkC,SAAS,GAAGlE,KAAK,CAACmE,MAAN,CAAa,IAAb,CAAhB;AACA,MAAIC,KAAK,GAAGpE,KAAK,CAACmE,MAAN,CAAa,IAAb,CAAZ;AACA,MAAIE,OAAO,GAAG7D,UAAU,CAAC4D,KAAD,CAAxB;AACAhE,EAAAA,QAAQ,CAACa,MAAM,CAACoD,OAAD,CAAP,EAAkB3B,MAAlB,EAA0BwB,SAA1B,CAAR;AACAjE,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAIqE,SAAS,GAAG/D,YAAY,CAACsC,KAAD,EAAQN,MAAR,EAAgB2B,SAAhB,CAA5B;AACA,QAAIE,KAAK,GAAGnD,MAAM,CAACoD,OAAD,CAAlB;;AACA,QAAI,CAACD,KAAL,EAAY;AACRA,MAAAA,KAAK,GAAG,IAAIlE,EAAE,CAACqE,SAAP,CAAiB;AACrBL,QAAAA,SAAS,EAAEA,SAAS,CAACM,OADA;AAErB3B,QAAAA,KAAK,EAAEyB,SAAS,CAAC,CAAD,CAFK;AAGrB/B,QAAAA,MAAM,EAAE+B,SAAS,CAAC,CAAD,CAHI;AAIrBnC,QAAAA,OAAO,EAAEA,OAJY;AAKrBP,QAAAA,UAAU,EAAEA,UALS;AAMrB6C,QAAAA,KAAK,EAAE;AACHC,UAAAA,OAAO,EAAEzC;AADN,SANc;AASrB0C,QAAAA,WAAW,EAAE;AACTxD,UAAAA,IAAI,EAAEiC,QADG;AAET1B,UAAAA,IAAI,EAAE2B,QAFG;AAGT1B,UAAAA,YAAY,EAAE2B;AAHL,SATQ;AAcrBsB,QAAAA,WAAW,EAAE;AACTzD,UAAAA,IAAI,EAAEwC;AADG,SAdQ;AAiBrB9B,QAAAA,eAAe,EAAEA,eAjBI;AAkBrBG,QAAAA,eAAe,EAAEA,eAlBI;AAmBrBE,QAAAA,MAAM,EAAEA,MAnBa;AAoBrB2C,QAAAA,OAAO,EAAExC,OApBY;AAqBrBC,QAAAA,SAAS,EAAEA;AArBU,OAAjB,CAAR;AAuBArB,MAAAA,MAAM,CAACoD,OAAD,CAAN,GAAkBD,KAAlB;AACH;;AACDA,IAAAA,KAAK,CAACU,IAAN,CAAW,UAAUA,IAAV,EAAgB;AACvB,UAAIhD,KAAK,GAAG,CAAC0B,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmDA,YAAnD,GAAkE,EAAnE,EAAuE1B,KAAnF;AACA,aAAO;AACH2B,QAAAA,KAAK,EAAEqB,IAAI,CAACC,KADT;AAEHC,QAAAA,QAAQ,EAAE;AACNlD,UAAAA,KAAK,EAAEnB,eAAe,CAACmB,KAAD,EAAQgD,IAAR,EAAcV,KAAd;AADhB,SAFP;AAKHtC,QAAAA,KAAK,EAAE5C,QAAQ,CAAC;AAAE+F,UAAAA,MAAM,EAAE;AAAV,SAAD,EAAsB,OAAO1B,SAAP,KAAqB,UAArB,GAAkCA,SAAS,CAACuB,IAAD,EAAOV,KAAP,CAA3C,GAA2Db,SAAjF;AALZ,OAAP;AAOH,KATD;AAUAa,IAAAA,KAAK,CAACc,IAAN,CAAW,UAAUA,IAAV,EAAgB;AACvB,UAAIpB,UAAU,GAAGlD,WAAW,CAACiD,aAAD,EAAgBqB,IAAhB,CAA5B;AACA,UAAIlB,QAAQ,GAAGpD,WAAW,CAACmD,WAAD,EAAcmB,IAAd,CAA1B;;AACA,UAAI/B,EAAE,GAAGc,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmDA,YAAnD,GAAkE,EAA3E;AAAA,UAA+EnC,KAAK,GAAGqB,EAAE,CAACrB,KAA1F;AAAA,UAAiGqD,OAAO,GAAGhC,EAAE,CAACgC,OAA9G;;AACA,aAAO;AACH1B,QAAAA,KAAK,EAAE9C,eAAe,CAACwE,OAAD,EAAUD,IAAV,EAAgBd,KAAhB,CADnB;AAEHY,QAAAA,QAAQ,EAAE;AACNlD,UAAAA,KAAK,EAAEnB,eAAe,CAACmB,KAAD,EAAQoD,IAAR,EAAcd,KAAd;AADhB,SAFP;AAKHtC,QAAAA,KAAK,EAAE5C,QAAQ,CAAC;AAAE+F,UAAAA,MAAM,EAAE,MAAV;AAAkBnB,UAAAA,UAAU,EAAEA,UAA9B;AAA0CE,UAAAA,QAAQ,EAAEA;AAApD,SAAD,EAAkE,OAAOJ,SAAP,KAAqB,UAArB,GAAkCA,SAAS,CAACsB,IAAD,EAAOd,KAAP,CAA3C,GAA2DR,SAA7H;AALZ,OAAP;AAOH,KAXD;AAYAnD,IAAAA,cAAc,CAACqC,UAAD,EAAasB,KAAb,CAAd;AACAvD,IAAAA,eAAe,CAACuD,KAAD,EAAQ1B,MAAR,CAAf;AACAhC,IAAAA,WAAW,CAAC0D,KAAD,EAAQzB,IAAR,CAAX;;AACA,QAAII,OAAJ,EAAa;AACTA,MAAAA,OAAO,CAACqB,KAAD,CAAP;AACH;;AACD,WAAO,YAAY;AACf,UAAInD,MAAM,CAACoD,OAAD,CAAV,EAAqB;AACjBpD,QAAAA,MAAM,CAACoD,OAAD,CAAN,CAAgBe,OAAhB;AACA,eAAOnE,MAAM,CAACoD,OAAD,CAAb;AACH;AACJ,KALD;AAMH,GA/DQ,EA+DN,EA/DM,CAAT;AAgEA,SAAQrE,KAAK,CAACqF,aAAN,CAAoBlF,aAApB,EAAmC;AAAE+C,IAAAA,aAAa,EAAEA;AAAjB,GAAnC,EACJF,OAAO,IAAIhD,KAAK,CAACqF,aAAN,CAAoB/E,YAApB,EAAkC;AAAE2C,IAAAA,eAAe,EAAEA;AAAnB,GAAlC,CADP,EAEJjD,KAAK,CAACqF,aAAN,CAAoB,KAApB,EAA2B;AAAEzC,IAAAA,SAAS,EAAEA,SAAb;AAAwBd,IAAAA,KAAK,EAAEA,KAA/B;AAAsCwD,IAAAA,GAAG,EAAEpB;AAA3C,GAA3B,CAFI,CAAR;AAGH,CA5ED;;AA6EA,eAAe1B,eAAf","sourcesContent":["var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport React, { useEffect } from 'react';\r\nimport G6 from '@antv/g6';\r\nimport { ErrorBoundary } from '../../base';\r\nimport useGraph from '../../hooks/useGraph';\r\nimport useProps from '../../hooks/useProps';\r\nimport ChartLoading from '../../util/createLoading';\r\nimport { getGraphSize, getGraphId } from '../utils';\r\nimport { processMinimap, renderGraph, getCommonConfig, getArrowCfg, bindStateEvents, } from '../utils';\r\nimport { defaultFlowGraphAnchorPoints, defaultStateStyles, defaultNodeStyle } from '../constants';\r\nvar graphs = {};\r\nvar defaultLayout = {\r\n    type: 'dendrogram',\r\n    direction: 'LR',\r\n    nodeSep: 20,\r\n    rankSep: 100,\r\n    radial: true,\r\n};\r\nvar defaultProps = {\r\n    nodeCfg: {\r\n        type: 'circle',\r\n        size: 30,\r\n        anchorPoints: defaultFlowGraphAnchorPoints,\r\n        linkCenter: true,\r\n        nodeStateStyles: defaultStateStyles,\r\n        style: defaultNodeStyle,\r\n    },\r\n    edgeCfg: {\r\n        type: 'line',\r\n        edgeStateStyles: defaultStateStyles,\r\n    },\r\n    behaviors: ['zoom-canvas', 'drag-canvas'],\r\n    layout: defaultLayout,\r\n    animate: true,\r\n    markerPosition: 'right',\r\n    autoFit: true,\r\n    fitCenter: true,\r\n    style: {\r\n        height: 'inherit',\r\n    },\r\n};\r\nvar RadialTreeGraph = function (props) {\r\n    var uProps = useProps(props, defaultProps).uProps;\r\n    var data = uProps.data, className = uProps.className, style = uProps.style, width = uProps.width, height = uProps.height, behaviors = uProps.behaviors, layout = uProps.layout, animate = uProps.animate, nodeCfg = uProps.nodeCfg, edgeCfg = uProps.edgeCfg, autoFit = uProps.autoFit, fitCenter = uProps.fitCenter, minimapCfg = uProps.minimapCfg, onReady = uProps.onReady, loading = uProps.loading, loadingTemplate = uProps.loadingTemplate, errorTemplate = uProps.errorTemplate;\r\n    var _a = nodeCfg !== null && nodeCfg !== void 0 ? nodeCfg : {}, nodeType = _a.type, nodeSize = _a.size, nodeAnchorPoints = _a.anchorPoints, nodeStateStyles = _a.nodeStateStyles, linkCenter = _a.linkCenter, nodeStyle = _a.style, nodeLabelCfg = _a.label;\r\n    var _b = edgeCfg !== null && edgeCfg !== void 0 ? edgeCfg : {}, edgeType = _b.type, edgeStyle = _b.style, startArrowCfg = _b.startArrow, endArrowCfg = _b.endArrow, edgeLabelCfg = _b.label, edgeStateStyles = _b.edgeStateStyles;\r\n    var container = React.useRef(null);\r\n    var graph = React.useRef(null);\r\n    var graphId = getGraphId(graph);\r\n    useGraph(graphs[graphId], uProps, container);\r\n    useEffect(function () {\r\n        var graphSize = getGraphSize(width, height, container);\r\n        var graph = graphs[graphId];\r\n        if (!graph) {\r\n            graph = new G6.TreeGraph({\r\n                container: container.current,\r\n                width: graphSize[0],\r\n                height: graphSize[1],\r\n                animate: animate,\r\n                linkCenter: linkCenter,\r\n                modes: {\r\n                    default: behaviors,\r\n                },\r\n                defaultNode: {\r\n                    type: nodeType,\r\n                    size: nodeSize,\r\n                    anchorPoints: nodeAnchorPoints,\r\n                },\r\n                defaultEdge: {\r\n                    type: edgeType,\r\n                },\r\n                nodeStateStyles: nodeStateStyles,\r\n                edgeStateStyles: edgeStateStyles,\r\n                layout: layout,\r\n                fitView: autoFit,\r\n                fitCenter: fitCenter,\r\n            });\r\n            graphs[graphId] = graph;\r\n        }\r\n        graph.node(function (node) {\r\n            var style = (nodeLabelCfg !== null && nodeLabelCfg !== void 0 ? nodeLabelCfg : {}).style;\r\n            return {\r\n                label: node.value,\r\n                labelCfg: {\r\n                    style: getCommonConfig(style, node, graph),\r\n                },\r\n                style: __assign({ stroke: '#ccc' }, (typeof nodeStyle === 'function' ? nodeStyle(node, graph) : nodeStyle)),\r\n            };\r\n        });\r\n        graph.edge(function (edge) {\r\n            var startArrow = getArrowCfg(startArrowCfg, edge);\r\n            var endArrow = getArrowCfg(endArrowCfg, edge);\r\n            var _a = edgeLabelCfg !== null && edgeLabelCfg !== void 0 ? edgeLabelCfg : {}, style = _a.style, content = _a.content;\r\n            return {\r\n                label: getCommonConfig(content, edge, graph),\r\n                labelCfg: {\r\n                    style: getCommonConfig(style, edge, graph),\r\n                },\r\n                style: __assign({ stroke: '#ccc', startArrow: startArrow, endArrow: endArrow }, (typeof edgeStyle === 'function' ? edgeStyle(edge, graph) : edgeStyle)),\r\n            };\r\n        });\r\n        processMinimap(minimapCfg, graph);\r\n        bindStateEvents(graph, uProps);\r\n        renderGraph(graph, data);\r\n        if (onReady) {\r\n            onReady(graph);\r\n        }\r\n        return function () {\r\n            if (graphs[graphId]) {\r\n                graphs[graphId].destroy();\r\n                delete graphs[graphId];\r\n            }\r\n        };\r\n    }, []);\r\n    return (React.createElement(ErrorBoundary, { errorTemplate: errorTemplate },\r\n        loading && React.createElement(ChartLoading, { loadingTemplate: loadingTemplate }),\r\n        React.createElement(\"div\", { className: className, style: style, ref: container })));\r\n};\r\nexport default RadialTreeGraph;\r\n"]},"metadata":{},"sourceType":"module"}