{"ast":null,"code":"import { head, isNil, last } from '@antv/util';\nimport interval from '../util/interval';\nimport pretty from '../util/pretty';\nimport strictLimit from '../util/strict-limit';\n/**\r\n * 计算线性的 ticks，使用 R's pretty 方法\r\n * @param cfg 度量的配置项\r\n * @returns 计算后的 ticks\r\n */\n\nexport default function linearPretty(cfg) {\n  var min = cfg.min,\n      max = cfg.max,\n      tickCount = cfg.tickCount,\n      tickInterval = cfg.tickInterval,\n      minLimit = cfg.minLimit,\n      maxLimit = cfg.maxLimit;\n  var ticks = pretty(min, max, tickCount).ticks;\n\n  if (!isNil(minLimit) || !isNil(maxLimit)) {\n    return strictLimit(cfg, head(ticks), last(ticks));\n  }\n\n  if (tickInterval) {\n    return interval(min, max, tickInterval).ticks;\n  }\n\n  return ticks;\n}","map":{"version":3,"sources":["../../src/tick-method/r-prettry.ts"],"names":[],"mappings":"AAAA,SAAS,IAAT,EAAe,KAAf,EAAsB,IAAtB,QAAkC,YAAlC;AAEA,OAAO,QAAP,MAAqB,kBAArB;AACA,OAAO,MAAP,MAAmB,gBAAnB;AACA,OAAO,WAAP,MAAwB,sBAAxB;AAEA;;;;AAIG;;AACH,eAAc,SAAU,YAAV,CAAuB,GAAvB,EAAuC;AAC3C,MAAA,GAAG,GAAuD,GAAG,CAA1D,GAAH;AAAA,MAAK,GAAG,GAAkD,GAAG,CAArD,GAAR;AAAA,MAAU,SAAS,GAAuC,GAAG,CAA1C,SAAnB;AAAA,MAAqB,YAAY,GAAyB,GAAG,CAA5B,YAAjC;AAAA,MAAmC,QAAQ,GAAe,GAAG,CAAlB,QAA3C;AAAA,MAA6C,QAAQ,GAAK,GAAG,CAAR,QAArD;AACR,MAAM,KAAK,GAAG,MAAM,CAAC,GAAD,EAAM,GAAN,EAAW,SAAX,CAAN,CAA4B,KAA1C;;AAEA,MAAI,CAAC,KAAK,CAAC,QAAD,CAAN,IAAoB,CAAC,KAAK,CAAC,QAAD,CAA9B,EAA0C;AACxC,WAAO,WAAW,CAAC,GAAD,EAAM,IAAI,CAAC,KAAD,CAAV,EAAmB,IAAI,CAAC,KAAD,CAAvB,CAAlB;AACD;;AACD,MAAI,YAAJ,EAAkB;AAChB,WAAO,QAAQ,CAAC,GAAD,EAAM,GAAN,EAAW,YAAX,CAAR,CAAiC,KAAxC;AACD;;AACD,SAAO,KAAP;AACD","sourceRoot":"","sourcesContent":["import { head, isNil, last } from '@antv/util';\r\nimport interval from '../util/interval';\r\nimport pretty from '../util/pretty';\r\nimport strictLimit from '../util/strict-limit';\r\n/**\r\n * 计算线性的 ticks，使用 R's pretty 方法\r\n * @param cfg 度量的配置项\r\n * @returns 计算后的 ticks\r\n */\r\nexport default function linearPretty(cfg) {\r\n    var min = cfg.min, max = cfg.max, tickCount = cfg.tickCount, tickInterval = cfg.tickInterval, minLimit = cfg.minLimit, maxLimit = cfg.maxLimit;\r\n    var ticks = pretty(min, max, tickCount).ticks;\r\n    if (!isNil(minLimit) || !isNil(maxLimit)) {\r\n        return strictLimit(cfg, head(ticks), last(ticks));\r\n    }\r\n    if (tickInterval) {\r\n        return interval(min, max, tickInterval).ticks;\r\n    }\r\n    return ticks;\r\n}\r\n//# sourceMappingURL=r-prettry.js.map"]},"metadata":{},"sourceType":"module"}