{"ast":null,"code":"import { each, isString } from '@antv/util';\nvar timer = null;\n\nvar StateController =\n/** @class */\nfunction () {\n  function StateController(graph) {\n    this.graph = graph;\n    /**\r\n     * this.cachedStates = {\r\n     *    enabled: {\r\n     *        hover: [Node]\r\n     *    },\r\n     *     disabled: {}\r\n     *  }\r\n     */\n\n    this.cachedStates = {\n      enabled: {},\n      disabled: {}\n    };\n    this.destroyed = false;\n  }\n  /**\r\n   * 检查 cache 的可用性\r\n   *\r\n   * @private\r\n   * @param {Item} item\r\n   * @param {string} state\r\n   * @param {object} cache\r\n   * @returns\r\n   * @memberof State\r\n   */\n\n\n  StateController.checkCache = function (item, state, cache) {\n    if (!cache[state]) {\n      return;\n    }\n\n    var index = cache[state].indexOf(item);\n\n    if (index >= 0) {\n      cache[state].splice(index, 1);\n    }\n  };\n  /**\r\n   * 缓存 state\r\n   *\r\n   * @private\r\n   * @param {Item} item Item 实例\r\n   * @param {string} state 状态名称\r\n   * @param {object} states\r\n   * @memberof State\r\n   */\n\n\n  StateController.cacheState = function (item, state, states) {\n    if (!states[state]) {\n      states[state] = [];\n    }\n\n    states[state].push(item);\n  };\n  /**\r\n   * 更新 Item 的状态\r\n   *\r\n   * @param {Item} item Item实例\r\n   * @param {string} state 状态名称\r\n   * @param {boolean} enabled 状态是否可用\r\n   * @memberof State\r\n   */\n\n\n  StateController.prototype.updateState = function (item, state, enabled) {\n    var _this = this;\n\n    var checkCache = StateController.checkCache,\n        cacheState = StateController.cacheState;\n\n    if (item.destroyed) {\n      return;\n    }\n\n    var cachedStates = this.cachedStates;\n    var enabledStates = cachedStates.enabled;\n    var disabledStates = cachedStates.disabled;\n\n    if (enabled) {\n      checkCache(item, state, disabledStates);\n      cacheState(item, state, enabledStates);\n    } else {\n      checkCache(item, state, enabledStates);\n      cacheState(item, state, disabledStates);\n    }\n\n    if (timer) {\n      clearTimeout(timer);\n    }\n\n    timer = setTimeout(function () {\n      timer = null;\n\n      _this.updateGraphStates();\n    }, 16);\n  };\n  /**\r\n   * 批量更新 states，兼容 updateState，支持更新一个 state\r\n   *\r\n   * @param {Item} item\r\n   * @param {(string | string[])} states\r\n   * @param {boolean} enabled\r\n   * @memberof State\r\n   */\n\n\n  StateController.prototype.updateStates = function (item, states, enabled) {\n    var _this = this;\n\n    if (isString(states)) {\n      this.updateState(item, states, enabled);\n    } else {\n      states.forEach(function (state) {\n        _this.updateState(item, state, enabled);\n      });\n    }\n  };\n  /**\r\n   * 更新 states\r\n   *\r\n   * @memberof State\r\n   */\n\n\n  StateController.prototype.updateGraphStates = function () {\n    var states = this.graph.get('states');\n    var cachedStates = this.cachedStates;\n    each(cachedStates.disabled, function (val, key) {\n      if (states[key]) {\n        states[key] = states[key].filter(function (item) {\n          return val.indexOf(item) < 0 && !val.destroyed;\n        });\n      }\n    });\n    each(cachedStates.enabled, function (val, key) {\n      if (!states[key]) {\n        states[key] = val;\n      } else {\n        var map_1 = {};\n        states[key].forEach(function (item) {\n          if (!item.destroyed) {\n            map_1[item.get('id')] = true;\n          }\n        });\n        val.forEach(function (item) {\n          if (!item.destroyed) {\n            var id = item.get('id');\n\n            if (!map_1[id]) {\n              map_1[id] = true;\n              states[key].push(item);\n            }\n          }\n        });\n      }\n    });\n    this.graph.emit('graphstatechange', {\n      states: states\n    });\n    this.cachedStates = {\n      enabled: {},\n      disabled: {}\n    };\n  };\n\n  StateController.prototype.destroy = function () {\n    this.graph = null;\n    this.cachedStates = null;\n\n    if (timer) {\n      clearTimeout(timer);\n    }\n\n    timer = null;\n    this.destroyed = true;\n  };\n\n  return StateController;\n}();\n\nexport default StateController;","map":{"version":3,"sources":["D:/SQL/sqlindex2/sql/frontend/node_modules/@antv/g6-core/es/graph/controller/state.js"],"names":["each","isString","timer","StateController","graph","cachedStates","enabled","disabled","destroyed","checkCache","item","state","cache","index","indexOf","splice","cacheState","states","push","prototype","updateState","_this","enabledStates","disabledStates","clearTimeout","setTimeout","updateGraphStates","updateStates","forEach","get","val","key","filter","map_1","id","emit","destroy"],"mappings":"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","sourcesContent":["import { each, isString } from '@antv/util';\r\nvar timer = null;\r\n\r\nvar StateController =\r\n/** @class */\r\nfunction () {\r\n  function StateController(graph) {\r\n    this.graph = graph;\r\n    /**\r\n     * this.cachedStates = {\r\n     *    enabled: {\r\n     *        hover: [Node]\r\n     *    },\r\n     *     disabled: {}\r\n     *  }\r\n     */\r\n\r\n    this.cachedStates = {\r\n      enabled: {},\r\n      disabled: {}\r\n    };\r\n    this.destroyed = false;\r\n  }\r\n  /**\r\n   * 检查 cache 的可用性\r\n   *\r\n   * @private\r\n   * @param {Item} item\r\n   * @param {string} state\r\n   * @param {object} cache\r\n   * @returns\r\n   * @memberof State\r\n   */\r\n\r\n\r\n  StateController.checkCache = function (item, state, cache) {\r\n    if (!cache[state]) {\r\n      return;\r\n    }\r\n\r\n    var index = cache[state].indexOf(item);\r\n\r\n    if (index >= 0) {\r\n      cache[state].splice(index, 1);\r\n    }\r\n  };\r\n  /**\r\n   * 缓存 state\r\n   *\r\n   * @private\r\n   * @param {Item} item Item 实例\r\n   * @param {string} state 状态名称\r\n   * @param {object} states\r\n   * @memberof State\r\n   */\r\n\r\n\r\n  StateController.cacheState = function (item, state, states) {\r\n    if (!states[state]) {\r\n      states[state] = [];\r\n    }\r\n\r\n    states[state].push(item);\r\n  };\r\n  /**\r\n   * 更新 Item 的状态\r\n   *\r\n   * @param {Item} item Item实例\r\n   * @param {string} state 状态名称\r\n   * @param {boolean} enabled 状态是否可用\r\n   * @memberof State\r\n   */\r\n\r\n\r\n  StateController.prototype.updateState = function (item, state, enabled) {\r\n    var _this = this;\r\n\r\n    var checkCache = StateController.checkCache,\r\n        cacheState = StateController.cacheState;\r\n\r\n    if (item.destroyed) {\r\n      return;\r\n    }\r\n\r\n    var cachedStates = this.cachedStates;\r\n    var enabledStates = cachedStates.enabled;\r\n    var disabledStates = cachedStates.disabled;\r\n\r\n    if (enabled) {\r\n      checkCache(item, state, disabledStates);\r\n      cacheState(item, state, enabledStates);\r\n    } else {\r\n      checkCache(item, state, enabledStates);\r\n      cacheState(item, state, disabledStates);\r\n    }\r\n\r\n    if (timer) {\r\n      clearTimeout(timer);\r\n    }\r\n\r\n    timer = setTimeout(function () {\r\n      timer = null;\r\n\r\n      _this.updateGraphStates();\r\n    }, 16);\r\n  };\r\n  /**\r\n   * 批量更新 states，兼容 updateState，支持更新一个 state\r\n   *\r\n   * @param {Item} item\r\n   * @param {(string | string[])} states\r\n   * @param {boolean} enabled\r\n   * @memberof State\r\n   */\r\n\r\n\r\n  StateController.prototype.updateStates = function (item, states, enabled) {\r\n    var _this = this;\r\n\r\n    if (isString(states)) {\r\n      this.updateState(item, states, enabled);\r\n    } else {\r\n      states.forEach(function (state) {\r\n        _this.updateState(item, state, enabled);\r\n      });\r\n    }\r\n  };\r\n  /**\r\n   * 更新 states\r\n   *\r\n   * @memberof State\r\n   */\r\n\r\n\r\n  StateController.prototype.updateGraphStates = function () {\r\n    var states = this.graph.get('states');\r\n    var cachedStates = this.cachedStates;\r\n    each(cachedStates.disabled, function (val, key) {\r\n      if (states[key]) {\r\n        states[key] = states[key].filter(function (item) {\r\n          return val.indexOf(item) < 0 && !val.destroyed;\r\n        });\r\n      }\r\n    });\r\n    each(cachedStates.enabled, function (val, key) {\r\n      if (!states[key]) {\r\n        states[key] = val;\r\n      } else {\r\n        var map_1 = {};\r\n        states[key].forEach(function (item) {\r\n          if (!item.destroyed) {\r\n            map_1[item.get('id')] = true;\r\n          }\r\n        });\r\n        val.forEach(function (item) {\r\n          if (!item.destroyed) {\r\n            var id = item.get('id');\r\n\r\n            if (!map_1[id]) {\r\n              map_1[id] = true;\r\n              states[key].push(item);\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n    this.graph.emit('graphstatechange', {\r\n      states: states\r\n    });\r\n    this.cachedStates = {\r\n      enabled: {},\r\n      disabled: {}\r\n    };\r\n  };\r\n\r\n  StateController.prototype.destroy = function () {\r\n    this.graph = null;\r\n    this.cachedStates = null;\r\n\r\n    if (timer) {\r\n      clearTimeout(timer);\r\n    }\r\n\r\n    timer = null;\r\n    this.destroyed = true;\r\n  };\r\n\r\n  return StateController;\r\n}();\r\n\r\nexport default StateController;"]},"metadata":{},"sourceType":"module"}