{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { createDom, modifyCSS } from '@antv/dom-util';\nimport { isNil, isString, deepMix, each, hasKey } from '@antv/util';\nimport { clearDom, createBBox, hasClass } from '../util/util';\nimport Component from './component';\n\nvar HtmlComponent =\n/** @class */\nfunction (_super) {\n  __extends(HtmlComponent, _super);\n\n  function HtmlComponent() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  HtmlComponent.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n\n    return __assign(__assign({}, cfg), {\n      container: null,\n      containerTpl: '<div></div>',\n      updateAutoRender: true,\n      containerClassName: '',\n      parent: null\n    });\n    return cfg;\n  };\n\n  HtmlComponent.prototype.getContainer = function () {\n    return this.get('container');\n  };\n  /**\r\n   * 显示组件\r\n   */\n\n\n  HtmlComponent.prototype.show = function () {\n    var container = this.get('container');\n    container.style.display = '';\n    this.set('visible', true);\n  };\n  /**\r\n   * 隐藏组件\r\n   */\n\n\n  HtmlComponent.prototype.hide = function () {\n    var container = this.get('container');\n    container.style.display = 'none';\n    this.set('visible', false);\n  };\n  /**\r\n   * 是否允许捕捉事件\r\n   * @param capture 事件捕捉\r\n   */\n\n\n  HtmlComponent.prototype.setCapture = function (capture) {\n    var container = this.getContainer();\n    var value = capture ? 'auto' : 'none';\n    container.style.pointerEvents = value;\n    this.set('capture', capture);\n  };\n\n  HtmlComponent.prototype.getBBox = function () {\n    var container = this.getContainer();\n    var x = parseFloat(container.style.left) || 0;\n    var y = parseFloat(container.style.top) || 0;\n    return createBBox(x, y, container.clientWidth, container.clientHeight);\n  };\n\n  HtmlComponent.prototype.clear = function () {\n    var container = this.get('container');\n    clearDom(container);\n  };\n\n  HtmlComponent.prototype.destroy = function () {\n    this.removeEvent();\n    this.removeDom();\n\n    _super.prototype.destroy.call(this);\n  };\n  /**\r\n   * 复写 init，主要是初始化 DOM 和事件\r\n   */\n\n\n  HtmlComponent.prototype.init = function () {\n    _super.prototype.init.call(this);\n\n    this.initContainer();\n    this.initDom();\n    this.resetStyles(); // 初始化样式\n\n    this.applyStyles(); // 应用样式\n\n    this.initEvent();\n    this.initCapture();\n    this.initVisible();\n  };\n\n  HtmlComponent.prototype.initCapture = function () {\n    this.setCapture(this.get('capture'));\n  };\n\n  HtmlComponent.prototype.initVisible = function () {\n    if (!this.get('visible')) {\n      // 设置初始显示状态\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  HtmlComponent.prototype.initDom = function () {};\n\n  HtmlComponent.prototype.initContainer = function () {\n    var container = this.get('container');\n\n    if (isNil(container)) {\n      // 未指定 container 则创建\n      container = this.createDom();\n      var parent_1 = this.get('parent');\n\n      if (isString(parent_1)) {\n        parent_1 = document.getElementById(parent_1);\n        this.set('parent', parent_1);\n      }\n\n      parent_1.appendChild(container);\n      this.set('container', container);\n    } else if (isString(container)) {\n      // 用户传入的 id, 作为 container\n      container = document.getElementById(container);\n      this.set('container', container);\n    } // else container 是 DOM\n\n\n    if (!this.get('parent')) {\n      this.set('parent', container.parentNode);\n    }\n  }; // 样式需要进行合并，不能单纯的替换，否则使用非常不方便\n\n\n  HtmlComponent.prototype.resetStyles = function () {\n    var style = this.get('domStyles');\n    var defaultStyles = this.get('defaultStyles');\n\n    if (!style) {\n      style = defaultStyles;\n    } else {\n      style = deepMix({}, defaultStyles, style);\n    }\n\n    this.set('domStyles', style);\n  }; // 应用所有的样式\n\n\n  HtmlComponent.prototype.applyStyles = function () {\n    var domStyles = this.get('domStyles');\n\n    if (!domStyles) {\n      return;\n    }\n\n    var container = this.getContainer();\n    this.applyChildrenStyles(container, domStyles);\n    var containerClassName = this.get('containerClassName');\n\n    if (containerClassName && hasClass(container, containerClassName)) {\n      var containerCss = domStyles[containerClassName];\n      modifyCSS(container, containerCss);\n    }\n  };\n\n  HtmlComponent.prototype.applyChildrenStyles = function (element, styles) {\n    each(styles, function (style, name) {\n      var elements = element.getElementsByClassName(name);\n      each(elements, function (el) {\n        modifyCSS(el, style);\n      });\n    });\n  }; // 应用到单个 DOM\n\n\n  HtmlComponent.prototype.applyStyle = function (cssName, dom) {\n    var domStyles = this.get('domStyles');\n    modifyCSS(dom, domStyles[cssName]);\n  };\n  /**\r\n   * @protected\r\n   */\n\n\n  HtmlComponent.prototype.createDom = function () {\n    var containerTpl = this.get('containerTpl');\n    return createDom(containerTpl);\n  };\n  /**\r\n   * @protected\r\n   * 初始化事件\r\n   */\n\n\n  HtmlComponent.prototype.initEvent = function () {};\n  /**\r\n   * @protected\r\n   * 清理 DOM\r\n   */\n\n\n  HtmlComponent.prototype.removeDom = function () {\n    var container = this.get('container'); // 节点不一定有parentNode\n\n    container && container.parentNode && container.parentNode.removeChild(container);\n  };\n  /**\r\n   * @protected\r\n   * 清理事件\r\n   */\n\n\n  HtmlComponent.prototype.removeEvent = function () {};\n\n  HtmlComponent.prototype.updateInner = function (cfg) {\n    // 更新样式\n    if (hasKey(cfg, 'domStyles')) {\n      this.resetStyles();\n      this.applyStyles();\n    } // 只要属性发生变化，都调整一些位置\n\n\n    this.resetPosition();\n  };\n\n  HtmlComponent.prototype.resetPosition = function () {};\n\n  ;\n  return HtmlComponent;\n}(Component);\n\nexport default HtmlComponent;","map":{"version":3,"sources":["../../src/abstract/html-component.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends } from \"tslib\";\r\nimport { createDom, modifyCSS } from '@antv/dom-util';\r\nimport { isNil, isString, deepMix, each, hasKey } from '@antv/util';\r\nimport { clearDom, createBBox, hasClass } from '../util/util';\r\nimport Component from './component';\r\nvar HtmlComponent = /** @class */ (function (_super) {\r\n    __extends(HtmlComponent, _super);\r\n    function HtmlComponent() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    HtmlComponent.prototype.getDefaultCfg = function () {\r\n        var cfg = _super.prototype.getDefaultCfg.call(this);\r\n        return __assign(__assign({}, cfg), { container: null, containerTpl: '<div></div>', updateAutoRender: true, containerClassName: '', parent: null });\r\n        return cfg;\r\n    };\r\n    HtmlComponent.prototype.getContainer = function () {\r\n        return this.get('container');\r\n    };\r\n    /**\r\n     * 显示组件\r\n     */\r\n    HtmlComponent.prototype.show = function () {\r\n        var container = this.get('container');\r\n        container.style.display = '';\r\n        this.set('visible', true);\r\n    };\r\n    /**\r\n     * 隐藏组件\r\n     */\r\n    HtmlComponent.prototype.hide = function () {\r\n        var container = this.get('container');\r\n        container.style.display = 'none';\r\n        this.set('visible', false);\r\n    };\r\n    /**\r\n     * 是否允许捕捉事件\r\n     * @param capture 事件捕捉\r\n     */\r\n    HtmlComponent.prototype.setCapture = function (capture) {\r\n        var container = this.getContainer();\r\n        var value = capture ? 'auto' : 'none';\r\n        container.style.pointerEvents = value;\r\n        this.set('capture', capture);\r\n    };\r\n    HtmlComponent.prototype.getBBox = function () {\r\n        var container = this.getContainer();\r\n        var x = parseFloat(container.style.left) || 0;\r\n        var y = parseFloat(container.style.top) || 0;\r\n        return createBBox(x, y, container.clientWidth, container.clientHeight);\r\n    };\r\n    HtmlComponent.prototype.clear = function () {\r\n        var container = this.get('container');\r\n        clearDom(container);\r\n    };\r\n    HtmlComponent.prototype.destroy = function () {\r\n        this.removeEvent();\r\n        this.removeDom();\r\n        _super.prototype.destroy.call(this);\r\n    };\r\n    /**\r\n     * 复写 init，主要是初始化 DOM 和事件\r\n     */\r\n    HtmlComponent.prototype.init = function () {\r\n        _super.prototype.init.call(this);\r\n        this.initContainer();\r\n        this.initDom();\r\n        this.resetStyles(); // 初始化样式\r\n        this.applyStyles(); // 应用样式\r\n        this.initEvent();\r\n        this.initCapture();\r\n        this.initVisible();\r\n    };\r\n    HtmlComponent.prototype.initCapture = function () {\r\n        this.setCapture(this.get('capture'));\r\n    };\r\n    HtmlComponent.prototype.initVisible = function () {\r\n        if (!this.get('visible')) {\r\n            // 设置初始显示状态\r\n            this.hide();\r\n        }\r\n        else {\r\n            this.show();\r\n        }\r\n    };\r\n    HtmlComponent.prototype.initDom = function () {\r\n    };\r\n    HtmlComponent.prototype.initContainer = function () {\r\n        var container = this.get('container');\r\n        if (isNil(container)) {\r\n            // 未指定 container 则创建\r\n            container = this.createDom();\r\n            var parent_1 = this.get('parent');\r\n            if (isString(parent_1)) {\r\n                parent_1 = document.getElementById(parent_1);\r\n                this.set('parent', parent_1);\r\n            }\r\n            parent_1.appendChild(container);\r\n            this.set('container', container);\r\n        }\r\n        else if (isString(container)) {\r\n            // 用户传入的 id, 作为 container\r\n            container = document.getElementById(container);\r\n            this.set('container', container);\r\n        } // else container 是 DOM\r\n        if (!this.get('parent')) {\r\n            this.set('parent', container.parentNode);\r\n        }\r\n    };\r\n    // 样式需要进行合并，不能单纯的替换，否则使用非常不方便\r\n    HtmlComponent.prototype.resetStyles = function () {\r\n        var style = this.get('domStyles');\r\n        var defaultStyles = this.get('defaultStyles');\r\n        if (!style) {\r\n            style = defaultStyles;\r\n        }\r\n        else {\r\n            style = deepMix({}, defaultStyles, style);\r\n        }\r\n        this.set('domStyles', style);\r\n    };\r\n    // 应用所有的样式\r\n    HtmlComponent.prototype.applyStyles = function () {\r\n        var domStyles = this.get('domStyles');\r\n        if (!domStyles) {\r\n            return;\r\n        }\r\n        var container = this.getContainer();\r\n        this.applyChildrenStyles(container, domStyles);\r\n        var containerClassName = this.get('containerClassName');\r\n        if (containerClassName && hasClass(container, containerClassName)) {\r\n            var containerCss = domStyles[containerClassName];\r\n            modifyCSS(container, containerCss);\r\n        }\r\n    };\r\n    HtmlComponent.prototype.applyChildrenStyles = function (element, styles) {\r\n        each(styles, function (style, name) {\r\n            var elements = element.getElementsByClassName(name);\r\n            each(elements, function (el) {\r\n                modifyCSS(el, style);\r\n            });\r\n        });\r\n    };\r\n    // 应用到单个 DOM\r\n    HtmlComponent.prototype.applyStyle = function (cssName, dom) {\r\n        var domStyles = this.get('domStyles');\r\n        modifyCSS(dom, domStyles[cssName]);\r\n    };\r\n    /**\r\n     * @protected\r\n     */\r\n    HtmlComponent.prototype.createDom = function () {\r\n        var containerTpl = this.get('containerTpl');\r\n        return createDom(containerTpl);\r\n    };\r\n    /**\r\n     * @protected\r\n     * 初始化事件\r\n     */\r\n    HtmlComponent.prototype.initEvent = function () { };\r\n    /**\r\n     * @protected\r\n     * 清理 DOM\r\n     */\r\n    HtmlComponent.prototype.removeDom = function () {\r\n        var container = this.get('container');\r\n        // 节点不一定有parentNode\r\n        container && container.parentNode && container.parentNode.removeChild(container);\r\n    };\r\n    /**\r\n     * @protected\r\n     * 清理事件\r\n     */\r\n    HtmlComponent.prototype.removeEvent = function () { };\r\n    HtmlComponent.prototype.updateInner = function (cfg) {\r\n        // 更新样式\r\n        if (hasKey(cfg, 'domStyles')) {\r\n            this.resetStyles();\r\n            this.applyStyles();\r\n        }\r\n        // 只要属性发生变化，都调整一些位置\r\n        this.resetPosition();\r\n    };\r\n    HtmlComponent.prototype.resetPosition = function () { };\r\n    ;\r\n    return HtmlComponent;\r\n}(Component));\r\nexport default HtmlComponent;\r\n//# sourceMappingURL=html-component.js.map"]},"metadata":{},"sourceType":"module"}