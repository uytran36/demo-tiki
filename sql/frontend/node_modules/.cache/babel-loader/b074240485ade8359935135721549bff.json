{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Event } from '../../../chart';\nimport { clearHighlight, setHighlightBy } from './highlight-util';\nimport ElementRangeState from './range-state';\nvar EVENTS;\n\n(function (EVENTS) {\n  EVENTS[\"BEFORE_HIGHLIGHT\"] = \"element-range-highlight:beforehighlight\";\n  EVENTS[\"AFTER_HIGHLIGHT\"] = \"element-range-highlight:afterhighlight\";\n  EVENTS[\"BEFORE_CLEAR\"] = \"element-range-highlight:beforeclear\";\n  EVENTS[\"AFTER_CLEAR\"] = \"element-range-highlight:afterclear\";\n})(EVENTS || (EVENTS = {}));\n\nexport { EVENTS as ELEMENT_RANGE_HIGHLIGHT_EVENTS };\n/**\r\n * @ignore\r\n * 区域 highlight 的 Action\r\n */\n\nvar ElementRangeHighlight =\n/** @class */\nfunction (_super) {\n  __extends(ElementRangeHighlight, _super);\n\n  function ElementRangeHighlight() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.stateName = 'active';\n    return _this;\n  } // 清理掉所有的 active， unactive 状态\n\n\n  ElementRangeHighlight.prototype.clearViewState = function (view) {\n    clearHighlight(view);\n  };\n  /**\r\n   * 设置 highlight\r\n   */\n\n\n  ElementRangeHighlight.prototype.highlight = function () {\n    var _a = this.context,\n        view = _a.view,\n        event = _a.event;\n    var elements = this.getIntersectElements();\n    var payload = {\n      view: view,\n      event: event,\n      highlightElements: elements\n    };\n    view.emit(EVENTS.BEFORE_HIGHLIGHT, Event.fromData(view, EVENTS.BEFORE_HIGHLIGHT, payload));\n    this.setState();\n    view.emit(EVENTS.AFTER_HIGHLIGHT, Event.fromData(view, EVENTS.AFTER_HIGHLIGHT, payload));\n  };\n  /**\r\n   * @overrider 添加事件\r\n   */\n\n\n  ElementRangeHighlight.prototype.clear = function () {\n    var view = this.context.view;\n    view.emit(EVENTS.BEFORE_CLEAR, Event.fromData(view, EVENTS.BEFORE_CLEAR, {}));\n\n    _super.prototype.clear.call(this);\n\n    view.emit(EVENTS.AFTER_CLEAR, Event.fromData(view, EVENTS.AFTER_CLEAR, {}));\n  };\n\n  ElementRangeHighlight.prototype.setElementsState = function (elements, enable, allElements) {\n    setHighlightBy(allElements, function (el) {\n      return elements.indexOf(el) >= 0;\n    }, enable);\n  };\n\n  return ElementRangeHighlight;\n}(ElementRangeState);\n\nexport default ElementRangeHighlight;","map":{"version":3,"sources":["../../../../src/interaction/action/element/range-highlight.ts"],"names":[],"mappings":";AACA,SAAS,KAAT,QAAS,gBAAT;AACA,SAAO,cAAP,EAAwB,cAAxB,QAA8C,kBAA9C;AAEA,OAAA,iBAAA,MAAA,eAAA;;;;AAGG,EAAA,MAAA,CAAA,kBAAA,CAAA,GAAA,yCAAA;AACH,EAAA,MAAA,CAAA,iBAAA,CAAA,GAAA,wCAAA;AAAoC,EAAA,MAAA,CAAA,cAAA,CAAA,GAAA,qCAAA;AAApC,EAAA,MAAA,CAAA,aAAA,CAAA,GAAA,oCAAA;GAAA,MAAA,KAAA,MAAA,GAAA,EAAA,C;;AACY,SAAA,MAAA,IAAA,8BAAA;;AAiBZ;AAfE;AACA;;IACE,qBAAe;AAAK;AAAC,UAAA,MAAA,EAAA;AACvB,EAAA,SAAC,CAAA,qBAAA,EAAA,MAAA,CAAD;;AAEA,WAAA,qBAAA,GAAA;;;AAEG,IAAA,KAAA,CAAA,SAAA,GAAA,QAAA;AACI,WAAP,KAAO;AACL,GAPqB,CAQvB;;;AAEU,EAAA,qBAAA,CAAA,SAAA,CAAA,cAAA,GAAV,UAAA,IAAA,EAA2B;AACzB,IAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFS;AAGZ;AAlBA;AAoBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAfyB,C,iBAAA,C","sourcesContent":["import Element from '../../../geometry/element/';\nimport { clearHighlight, setHighlightBy } from './highlight-util';\nimport ElementRangeState from './range-state';\n\n/**\n * @ignore\n * 区域 highlight 的 Action\n */\nclass ElementRangeHighlight extends ElementRangeState {\n  protected stateName: string = 'active';\n\n  // 清理掉所有的 active， unactive 状态\n  protected clearViewState(view) {\n    clearHighlight(view);\n  }\n\n  /**\n   * 设置 highlight\n   */\n  public highlight() {\n    this.setState();\n  }\n\n  protected setElementsState(elements: Element[], enable: boolean, allElements: Element[]) {\n    setHighlightBy(allElements, (el) => elements.indexOf(el) >= 0, enable);\n  }\n}\n\nexport default ElementRangeHighlight;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}