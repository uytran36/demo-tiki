{"ast":null,"code":"import Hierarchy from '@antv/hierarchy';\nimport Util from '../util';\nvar radialLayout = Util.radialLayout;\n\nvar TreeLayout =\n/** @class */\nfunction () {\n  function TreeLayout(cfg) {\n    this.type = cfg.type;\n    this.radial = cfg.radial;\n    this.config = cfg;\n  }\n\n  TreeLayout.prototype.init = function (data) {\n    var _this = this;\n\n    this.data = data;\n\n    if (this.radial) {\n      this.layoutMethod = function (data) {\n        var layoutData = Hierarchy[_this.type](data, _this.config);\n\n        radialLayout(layoutData);\n        return layoutData;\n      };\n\n      return;\n    }\n\n    this.layoutMethod = function (data) {\n      return Hierarchy[_this.type](data, _this.config);\n    };\n  };\n\n  TreeLayout.prototype.execute = function () {\n    return this.layoutMethod(this.data, this.config);\n  };\n\n  TreeLayout.prototype.layout = function (data) {\n    this.init(data);\n    return this.execute();\n  };\n\n  return TreeLayout;\n}();\n\nexport default TreeLayout;","map":{"version":3,"sources":["D:/Code/sqlindex2/sql/frontend/node_modules/@antv/g6-pc/es/layout/tree-layout.js"],"names":["Hierarchy","Util","radialLayout","TreeLayout","cfg","type","radial","config","prototype","init","data","_this","layoutMethod","layoutData","execute","layout"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,iBAAtB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,IAAIC,YAAY,GAAGD,IAAI,CAACC,YAAxB;;AAEA,IAAIC,UAAU;AACd;AACA,YAAY;AACV,WAASA,UAAT,CAAoBC,GAApB,EAAyB;AACvB,SAAKC,IAAL,GAAYD,GAAG,CAACC,IAAhB;AACA,SAAKC,MAAL,GAAcF,GAAG,CAACE,MAAlB;AACA,SAAKC,MAAL,GAAcH,GAAd;AACD;;AAEDD,EAAAA,UAAU,CAACK,SAAX,CAAqBC,IAArB,GAA4B,UAAUC,IAAV,EAAgB;AAC1C,QAAIC,KAAK,GAAG,IAAZ;;AAEA,SAAKD,IAAL,GAAYA,IAAZ;;AAEA,QAAI,KAAKJ,MAAT,EAAiB;AACf,WAAKM,YAAL,GAAoB,UAAUF,IAAV,EAAgB;AAClC,YAAIG,UAAU,GAAGb,SAAS,CAACW,KAAK,CAACN,IAAP,CAAT,CAAsBK,IAAtB,EAA4BC,KAAK,CAACJ,MAAlC,CAAjB;;AAEAL,QAAAA,YAAY,CAACW,UAAD,CAAZ;AACA,eAAOA,UAAP;AACD,OALD;;AAOA;AACD;;AAED,SAAKD,YAAL,GAAoB,UAAUF,IAAV,EAAgB;AAClC,aAAOV,SAAS,CAACW,KAAK,CAACN,IAAP,CAAT,CAAsBK,IAAtB,EAA4BC,KAAK,CAACJ,MAAlC,CAAP;AACD,KAFD;AAGD,GAnBD;;AAqBAJ,EAAAA,UAAU,CAACK,SAAX,CAAqBM,OAArB,GAA+B,YAAY;AACzC,WAAO,KAAKF,YAAL,CAAkB,KAAKF,IAAvB,EAA6B,KAAKH,MAAlC,CAAP;AACD,GAFD;;AAIAJ,EAAAA,UAAU,CAACK,SAAX,CAAqBO,MAArB,GAA8B,UAAUL,IAAV,EAAgB;AAC5C,SAAKD,IAAL,CAAUC,IAAV;AACA,WAAO,KAAKI,OAAL,EAAP;AACD,GAHD;;AAKA,SAAOX,UAAP;AACD,CAtCD,EAFA;;AA0CA,eAAeA,UAAf","sourcesContent":["import Hierarchy from '@antv/hierarchy';\r\nimport Util from '../util';\r\nvar radialLayout = Util.radialLayout;\r\n\r\nvar TreeLayout =\r\n/** @class */\r\nfunction () {\r\n  function TreeLayout(cfg) {\r\n    this.type = cfg.type;\r\n    this.radial = cfg.radial;\r\n    this.config = cfg;\r\n  }\r\n\r\n  TreeLayout.prototype.init = function (data) {\r\n    var _this = this;\r\n\r\n    this.data = data;\r\n\r\n    if (this.radial) {\r\n      this.layoutMethod = function (data) {\r\n        var layoutData = Hierarchy[_this.type](data, _this.config);\r\n\r\n        radialLayout(layoutData);\r\n        return layoutData;\r\n      };\r\n\r\n      return;\r\n    }\r\n\r\n    this.layoutMethod = function (data) {\r\n      return Hierarchy[_this.type](data, _this.config);\r\n    };\r\n  };\r\n\r\n  TreeLayout.prototype.execute = function () {\r\n    return this.layoutMethod(this.data, this.config);\r\n  };\r\n\r\n  TreeLayout.prototype.layout = function (data) {\r\n    this.init(data);\r\n    return this.execute();\r\n  };\r\n\r\n  return TreeLayout;\r\n}();\r\n\r\nexport default TreeLayout;"]},"metadata":{},"sourceType":"module"}