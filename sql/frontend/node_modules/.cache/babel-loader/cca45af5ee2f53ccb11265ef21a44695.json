{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = depthFirstSearch;\n\nvar _util = require(\"./util\");\n\nfunction initCallbacks(callbacks) {\n  if (callbacks === void 0) {\n    callbacks = {};\n  }\n\n  var initiatedCallback = callbacks;\n\n  var stubCallback = function stubCallback() {};\n\n  var allowTraversalCallback = function () {\n    var seen = {};\n    return function (_a) {\n      var next = _a.next;\n\n      if (!seen[next]) {\n        seen[next] = true;\n        return true;\n      }\n\n      return false;\n    };\n  }();\n\n  initiatedCallback.allowTraversal = callbacks.allowTraversal || allowTraversalCallback;\n  initiatedCallback.enter = callbacks.enter || stubCallback;\n  initiatedCallback.leave = callbacks.leave || stubCallback;\n  return initiatedCallback;\n}\n/**\r\n * @param {Graph} graph\r\n * @param {GraphNode} currentNode\r\n * @param {GraphNode} previousNode\r\n * @param {Callbacks} callbacks\r\n */\n\n\nfunction depthFirstSearchRecursive(graphData, currentNode, previousNode, callbacks) {\n  callbacks.enter({\n    current: currentNode,\n    previous: previousNode\n  });\n  var _a = graphData.edges,\n      edges = _a === void 0 ? [] : _a;\n  (0, _util.getNeighbors)(currentNode, edges, 'target').forEach(function (nextNode) {\n    if (callbacks.allowTraversal({\n      previous: previousNode,\n      current: currentNode,\n      next: nextNode\n    })) {\n      depthFirstSearchRecursive(graphData, nextNode, currentNode, callbacks);\n    }\n  });\n  callbacks.leave({\n    current: currentNode,\n    previous: previousNode\n  });\n}\n/**\r\n * 深度优先遍历图\r\n * @param data GraphData 图数据\r\n * @param startNodeId 开始遍历的节点的 ID\r\n * @param originalCallbacks 回调\r\n */\n\n\nfunction depthFirstSearch(graphData, startNodeId, callbacks) {\n  depthFirstSearchRecursive(graphData, startNodeId, '', initCallbacks(callbacks));\n}","map":{"version":3,"sources":["D:/Code/sqlindex2/sql/frontend/node_modules/@antv/algorithm/lib/dfs.js"],"names":["Object","defineProperty","exports","value","default","depthFirstSearch","_util","require","initCallbacks","callbacks","initiatedCallback","stubCallback","allowTraversalCallback","seen","_a","next","allowTraversal","enter","leave","depthFirstSearchRecursive","graphData","currentNode","previousNode","current","previous","edges","getNeighbors","forEach","nextNode","startNodeId"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,gBAAlB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,QAAD,CAAnB;;AAEA,SAASC,aAAT,CAAuBC,SAAvB,EAAkC;AAChC,MAAIA,SAAS,KAAK,KAAK,CAAvB,EAA0B;AACxBA,IAAAA,SAAS,GAAG,EAAZ;AACD;;AAED,MAAIC,iBAAiB,GAAGD,SAAxB;;AAEA,MAAIE,YAAY,GAAG,SAASA,YAAT,GAAwB,CAAE,CAA7C;;AAEA,MAAIC,sBAAsB,GAAG,YAAY;AACvC,QAAIC,IAAI,GAAG,EAAX;AACA,WAAO,UAAUC,EAAV,EAAc;AACnB,UAAIC,IAAI,GAAGD,EAAE,CAACC,IAAd;;AAEA,UAAI,CAACF,IAAI,CAACE,IAAD,CAAT,EAAiB;AACfF,QAAAA,IAAI,CAACE,IAAD,CAAJ,GAAa,IAAb;AACA,eAAO,IAAP;AACD;;AAED,aAAO,KAAP;AACD,KATD;AAUD,GAZ4B,EAA7B;;AAcAL,EAAAA,iBAAiB,CAACM,cAAlB,GAAmCP,SAAS,CAACO,cAAV,IAA4BJ,sBAA/D;AACAF,EAAAA,iBAAiB,CAACO,KAAlB,GAA0BR,SAAS,CAACQ,KAAV,IAAmBN,YAA7C;AACAD,EAAAA,iBAAiB,CAACQ,KAAlB,GAA0BT,SAAS,CAACS,KAAV,IAAmBP,YAA7C;AACA,SAAOD,iBAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASS,yBAAT,CAAmCC,SAAnC,EAA8CC,WAA9C,EAA2DC,YAA3D,EAAyEb,SAAzE,EAAoF;AAClFA,EAAAA,SAAS,CAACQ,KAAV,CAAgB;AACdM,IAAAA,OAAO,EAAEF,WADK;AAEdG,IAAAA,QAAQ,EAAEF;AAFI,GAAhB;AAIA,MAAIR,EAAE,GAAGM,SAAS,CAACK,KAAnB;AAAA,MACIA,KAAK,GAAGX,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EADjC;AAEA,GAAC,GAAGR,KAAK,CAACoB,YAAV,EAAwBL,WAAxB,EAAqCI,KAArC,EAA4C,QAA5C,EAAsDE,OAAtD,CAA8D,UAAUC,QAAV,EAAoB;AAChF,QAAInB,SAAS,CAACO,cAAV,CAAyB;AAC3BQ,MAAAA,QAAQ,EAAEF,YADiB;AAE3BC,MAAAA,OAAO,EAAEF,WAFkB;AAG3BN,MAAAA,IAAI,EAAEa;AAHqB,KAAzB,CAAJ,EAII;AACFT,MAAAA,yBAAyB,CAACC,SAAD,EAAYQ,QAAZ,EAAsBP,WAAtB,EAAmCZ,SAAnC,CAAzB;AACD;AACF,GARD;AASAA,EAAAA,SAAS,CAACS,KAAV,CAAgB;AACdK,IAAAA,OAAO,EAAEF,WADK;AAEdG,IAAAA,QAAQ,EAAEF;AAFI,GAAhB;AAID;AACD;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASjB,gBAAT,CAA0Be,SAA1B,EAAqCS,WAArC,EAAkDpB,SAAlD,EAA6D;AAC3DU,EAAAA,yBAAyB,CAACC,SAAD,EAAYS,WAAZ,EAAyB,EAAzB,EAA6BrB,aAAa,CAACC,SAAD,CAA1C,CAAzB;AACD","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = depthFirstSearch;\r\n\r\nvar _util = require(\"./util\");\r\n\r\nfunction initCallbacks(callbacks) {\r\n  if (callbacks === void 0) {\r\n    callbacks = {};\r\n  }\r\n\r\n  var initiatedCallback = callbacks;\r\n\r\n  var stubCallback = function stubCallback() {};\r\n\r\n  var allowTraversalCallback = function () {\r\n    var seen = {};\r\n    return function (_a) {\r\n      var next = _a.next;\r\n\r\n      if (!seen[next]) {\r\n        seen[next] = true;\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    };\r\n  }();\r\n\r\n  initiatedCallback.allowTraversal = callbacks.allowTraversal || allowTraversalCallback;\r\n  initiatedCallback.enter = callbacks.enter || stubCallback;\r\n  initiatedCallback.leave = callbacks.leave || stubCallback;\r\n  return initiatedCallback;\r\n}\r\n/**\r\n * @param {Graph} graph\r\n * @param {GraphNode} currentNode\r\n * @param {GraphNode} previousNode\r\n * @param {Callbacks} callbacks\r\n */\r\n\r\n\r\nfunction depthFirstSearchRecursive(graphData, currentNode, previousNode, callbacks) {\r\n  callbacks.enter({\r\n    current: currentNode,\r\n    previous: previousNode\r\n  });\r\n  var _a = graphData.edges,\r\n      edges = _a === void 0 ? [] : _a;\r\n  (0, _util.getNeighbors)(currentNode, edges, 'target').forEach(function (nextNode) {\r\n    if (callbacks.allowTraversal({\r\n      previous: previousNode,\r\n      current: currentNode,\r\n      next: nextNode\r\n    })) {\r\n      depthFirstSearchRecursive(graphData, nextNode, currentNode, callbacks);\r\n    }\r\n  });\r\n  callbacks.leave({\r\n    current: currentNode,\r\n    previous: previousNode\r\n  });\r\n}\r\n/**\r\n * 深度优先遍历图\r\n * @param data GraphData 图数据\r\n * @param startNodeId 开始遍历的节点的 ID\r\n * @param originalCallbacks 回调\r\n */\r\n\r\n\r\nfunction depthFirstSearch(graphData, startNodeId, callbacks) {\r\n  depthFirstSearchRecursive(graphData, startNodeId, '', initCallbacks(callbacks));\r\n}"]},"metadata":{},"sourceType":"script"}