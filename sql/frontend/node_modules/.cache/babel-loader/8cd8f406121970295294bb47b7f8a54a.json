{"ast":null,"code":"var _jsxFileName = \"D:\\\\SQL\\\\sqlindex2\\\\sql\\\\frontend\\\\src\\\\pages\\\\nhaban\\\\components\\\\chart.js\",\n    _s = $RefreshSig$();\n\nimport { Column } from \"@ant-design/charts\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = ({\n  config,\n  data,\n  setData,\n  setConfig\n}) => {\n  _s();\n\n  useEffect(() => {\n    const dataW = JSON.parse(window.localStorage.getItem(\"auth\"));\n\n    const fetchData = async () => {\n      await axios.get(\"http://localhost:5000/api/nhaban/doanhthu/\" + dataW.MaNhaBan).then(res => {\n        setData();\n        setConfig({\n          data: data,\n          isGroup: true,\n          xField: \"date\",\n          yField: \"money\",\n          seriesField: \"name\",\n          label: {\n            position: \"middle\",\n            layout: [{\n              type: \"interval-adjust-position\"\n            }, {\n              type: \"interval-hide-overlap\"\n            }, {\n              type: \"adjust-color\"\n            }]\n          },\n          xAxis: {\n            label: {\n              autoHide: true,\n              autoRotate: false\n            }\n          }\n        });\n      });\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Column, { ...config\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["D:/SQL/sqlindex2/sql/frontend/src/pages/nhaban/components/chart.js"],"names":["Column","React","useState","useEffect","axios","Chart","config","data","setData","setConfig","dataW","JSON","parse","window","localStorage","getItem","fetchData","get","MaNhaBan","then","res","isGroup","xField","yField","seriesField","label","position","layout","type","xAxis","autoHide","autoRotate"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,oBAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,IAAV;AAAgBC,EAAAA,OAAhB;AAAyBC,EAAAA;AAAzB,CAAD,KAA0C;AAAA;;AACtDN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,CAAX,CAAd;;AACA,UAAMC,SAAS,GAAG,YAAY;AAC5B,YAAMZ,KAAK,CACRa,GADG,CACC,+CAA+CP,KAAK,CAACQ,QADtD,EAEHC,IAFG,CAEGC,GAAD,IAAS;AACbZ,QAAAA,OAAO;AAGPC,QAAAA,SAAS,CAAC;AACRF,UAAAA,IAAI,EAAEA,IADE;AAERc,UAAAA,OAAO,EAAE,IAFD;AAGRC,UAAAA,MAAM,EAAE,MAHA;AAIRC,UAAAA,MAAM,EAAE,OAJA;AAKRC,UAAAA,WAAW,EAAE,MALL;AAMRC,UAAAA,KAAK,EAAE;AACLC,YAAAA,QAAQ,EAAE,QADL;AAELC,YAAAA,MAAM,EAAE,CACN;AAAEC,cAAAA,IAAI,EAAE;AAAR,aADM,EAEN;AAAEA,cAAAA,IAAI,EAAE;AAAR,aAFM,EAGN;AAAEA,cAAAA,IAAI,EAAE;AAAR,aAHM;AAFH,WANC;AAcRC,UAAAA,KAAK,EAAE;AACLJ,YAAAA,KAAK,EAAE;AACLK,cAAAA,QAAQ,EAAE,IADL;AAELC,cAAAA,UAAU,EAAE;AAFP;AADF;AAdC,SAAD,CAAT;AAqBD,OA3BG,CAAN;AA4BD,KA7BD;;AA+BAf,IAAAA,SAAS;AACV,GAlCQ,EAkCN,EAlCM,CAAT;AAoCA,sBACE;AAAA,2BACE,QAAC,MAAD,OAAYV;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA1CD;;GAAMD,K;;KAAAA,K;AA2CN,eAAeA,KAAf","sourcesContent":["import { Column } from \"@ant-design/charts\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Chart = ({ config, data, setData, setConfig }) => {\r\n  useEffect(() => {\r\n    const dataW = JSON.parse(window.localStorage.getItem(\"auth\"));\r\n    const fetchData = async () => {\r\n      await axios\r\n        .get(\"http://localhost:5000/api/nhaban/doanhthu/\" + dataW.MaNhaBan)\r\n        .then((res) => {\r\n          setData(\r\n           \r\n          );\r\n          setConfig({\r\n            data: data,\r\n            isGroup: true,\r\n            xField: \"date\",\r\n            yField: \"money\",\r\n            seriesField: \"name\",\r\n            label: {\r\n              position: \"middle\",\r\n              layout: [\r\n                { type: \"interval-adjust-position\" },\r\n                { type: \"interval-hide-overlap\" },\r\n                { type: \"adjust-color\" },\r\n              ],\r\n            },\r\n            xAxis: {\r\n              label: {\r\n                autoHide: true,\r\n                autoRotate: false,\r\n              },\r\n            },\r\n          });\r\n        });\r\n    };\r\n    \r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Column {...config} />\r\n    </div>\r\n  );\r\n};\r\nexport default Chart;\r\n"]},"metadata":{},"sourceType":"module"}