{"ast":null,"code":"import { __extends } from \"tslib\";\nimport Container from './container';\n\nvar AbstractGroup =\n/** @class */\nfunction (_super) {\n  __extends(AbstractGroup, _super);\n\n  function AbstractGroup() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AbstractGroup.prototype.isGroup = function () {\n    return true;\n  };\n\n  AbstractGroup.prototype.isEntityGroup = function () {\n    return false;\n  };\n\n  AbstractGroup.prototype.clone = function () {\n    var clone = _super.prototype.clone.call(this); // 获取构造函数\n\n\n    var children = this.getChildren();\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      clone.add(child.clone());\n    }\n\n    return clone;\n  };\n\n  return AbstractGroup;\n}(Container);\n\nexport default AbstractGroup;","map":{"version":3,"sources":["../../src/abstract/group.ts"],"names":[],"mappings":";AACA,OAAO,SAAP,MAAsB,aAAtB;;AAEA,IAAA,aAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAqC,EAAA,SAAA,CAAA,aAAA,EAAA,MAAA,CAAA;;AAArC,WAAA,aAAA,GAAA;;AAmBC;;AAlBC,EAAA,aAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACE,WAAO,IAAP;AACD,GAFD;;AAIA,EAAA,aAAA,CAAA,SAAA,CAAA,aAAA,GAAA,YAAA;AACE,WAAO,KAAP;AACD,GAFD;;AAIA,EAAA,aAAA,CAAA,SAAA,CAAA,KAAA,GAAA,YAAA;AACE,QAAM,KAAK,GAAG,MAAA,CAAA,SAAA,CAAM,KAAN,CAAW,IAAX,CAAW,IAAX,CAAd,CADF,CAEE;;;AACA,QAAM,QAAQ,GAAG,KAAK,WAAL,EAAjB;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,MAA7B,EAAqC,CAAC,EAAtC,EAA0C;AACxC,UAAM,KAAK,GAAG,QAAQ,CAAC,CAAD,CAAtB;AACA,MAAA,KAAK,CAAC,GAAN,CAAU,KAAK,CAAC,KAAN,EAAV;AACD;;AACD,WAAO,KAAP;AACD,GATD;;AAUF,SAAA,aAAA;AAAC,CAnBD,CAAqC,SAArC,CAAA;;AAqBA,eAAe,aAAf","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\r\nimport Container from './container';\r\nvar AbstractGroup = /** @class */ (function (_super) {\r\n    __extends(AbstractGroup, _super);\r\n    function AbstractGroup() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AbstractGroup.prototype.isGroup = function () {\r\n        return true;\r\n    };\r\n    AbstractGroup.prototype.isEntityGroup = function () {\r\n        return false;\r\n    };\r\n    AbstractGroup.prototype.clone = function () {\r\n        var clone = _super.prototype.clone.call(this);\r\n        // 获取构造函数\r\n        var children = this.getChildren();\r\n        for (var i = 0; i < children.length; i++) {\r\n            var child = children[i];\r\n            clone.add(child.clone());\r\n        }\r\n        return clone;\r\n    };\r\n    return AbstractGroup;\r\n}(Container));\r\nexport default AbstractGroup;\r\n//# sourceMappingURL=group.js.map"]},"metadata":{},"sourceType":"module"}