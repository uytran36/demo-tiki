{"ast":null,"code":"import { __assign, __extends, __rest } from \"tslib\";\nimport { clamp, deepMix, each, filter, get, mix, isNumber, isFunction } from '@antv/util';\nimport { ellipsisLabel } from '../util/label';\nimport { getMatrixByAngle, getMatrixByTranslate } from '../util/matrix';\nimport { getStatesStyle } from '../util/state';\nimport Theme from '../util/theme';\nimport LegendBase from './base';\n/**\r\n * 分页器 默认配置\r\n */\n\nvar DEFAULT_PAGE_NAVIGATOR = {\n  marker: {\n    style: {\n      inactiveFill: '#000',\n      inactiveOpacity: 0.45,\n      fill: '#000',\n      opacity: 1,\n      size: 12\n    }\n  },\n  text: {\n    style: {\n      fill: '#ccc',\n      fontSize: 12\n    }\n  }\n}; // 默认 文本style\n\nvar textStyle = {\n  fill: Theme.textColor,\n  fontSize: 12,\n  textAlign: 'start',\n  textBaseline: 'middle',\n  fontFamily: Theme.fontFamily,\n  fontWeight: \"normal\",\n  lineHeight: 12\n};\n\nvar Category =\n/** @class */\nfunction (_super) {\n  __extends(Category, _super);\n\n  function Category() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.currentPageIndex = 1;\n    _this.totalPagesCnt = 1;\n    _this.pageWidth = 0;\n    _this.pageHeight = 0;\n    _this.startX = 0;\n    _this.startY = 0;\n\n    _this.onNavigationBack = function () {\n      var itemGroup = _this.getElementByLocalId('item-group');\n\n      if (_this.currentPageIndex > 1) {\n        _this.currentPageIndex -= 1;\n\n        _this.updateNavigation();\n\n        var matrix = _this.getCurrentNavigationMatrix();\n\n        if (_this.get('animate')) {\n          itemGroup.animate({\n            matrix: matrix\n          }, 100);\n        } else {\n          itemGroup.attr({\n            matrix: matrix\n          });\n        }\n      }\n    };\n\n    _this.onNavigationAfter = function () {\n      var itemGroup = _this.getElementByLocalId('item-group');\n\n      if (_this.currentPageIndex < _this.totalPagesCnt) {\n        _this.currentPageIndex += 1;\n\n        _this.updateNavigation();\n\n        var matrix = _this.getCurrentNavigationMatrix();\n\n        if (_this.get('animate')) {\n          itemGroup.animate({\n            matrix: matrix\n          }, 100);\n        } else {\n          itemGroup.attr({\n            matrix: matrix\n          });\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  Category.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n\n    return __assign(__assign({}, cfg), {\n      name: 'legend',\n      type: 'category',\n      itemSpacing: 24,\n      itemMarginBottom: 8,\n      maxItemWidth: null,\n      itemWidth: null,\n      itemHeight: null,\n      itemName: {},\n      itemValue: null,\n      maxWidth: null,\n      maxHeight: null,\n      marker: {},\n      items: [],\n      itemStates: {},\n      itemBackground: {},\n      pageNavigator: {},\n      defaultCfg: {\n        title: {\n          spacing: 5,\n          style: {\n            fill: Theme.textColor,\n            fontSize: 12,\n            textAlign: 'start',\n            textBaseline: 'top'\n          }\n        },\n        background: {\n          padding: 5,\n          style: {\n            stroke: Theme.lineColor\n          }\n        },\n        itemBackground: {\n          style: {\n            opacity: 0,\n            fill: '#fff'\n          }\n        },\n        pageNavigator: DEFAULT_PAGE_NAVIGATOR,\n        itemName: {\n          spacing: 16,\n          style: textStyle\n        },\n        marker: {\n          spacing: 8,\n          style: {\n            r: 6,\n            symbol: 'circle'\n          }\n        },\n        itemValue: {\n          alignRight: false,\n          formatter: null,\n          style: textStyle\n        },\n        itemStates: {\n          active: {\n            nameStyle: {\n              opacity: 0.8\n            }\n          },\n          unchecked: {\n            nameStyle: {\n              fill: Theme.uncheckedColor\n            },\n            markerStyle: {\n              fill: Theme.uncheckedColor,\n              stroke: Theme.uncheckedColor\n            }\n          },\n          inactive: {\n            nameStyle: {\n              fill: Theme.uncheckedColor\n            },\n            markerStyle: {\n              opacity: 0.2\n            }\n          }\n        }\n      }\n    });\n  }; // 实现 IList 接口\n\n\n  Category.prototype.isList = function () {\n    return true;\n  };\n  /**\r\n   * 获取图例项\r\n   * @return {ListItem[]} 列表项集合\r\n   */\n\n\n  Category.prototype.getItems = function () {\n    return this.get('items');\n  };\n  /**\r\n   * 设置列表项\r\n   * @param {ListItem[]} items 列表项集合\r\n   */\n\n\n  Category.prototype.setItems = function (items) {\n    this.update({\n      items: items\n    });\n  };\n  /**\r\n   * 更新列表项\r\n   * @param {ListItem} item 列表项\r\n   * @param {object}   cfg  列表项\r\n   */\n\n\n  Category.prototype.updateItem = function (item, cfg) {\n    mix(item, cfg);\n    this.clear(); // 由于单个图例项变化，会引起全局变化，所以全部更新\n\n    this.render();\n  };\n  /**\r\n   * 清空列表\r\n   */\n\n\n  Category.prototype.clearItems = function () {\n    var itemGroup = this.getElementByLocalId('item-group');\n    itemGroup && itemGroup.clear();\n  };\n  /**\r\n   * 设置列表项的状态\r\n   * @param {ListItem} item  列表项\r\n   * @param {string}   state 状态名\r\n   * @param {boolean}  value 状态值, true, false\r\n   */\n\n\n  Category.prototype.setItemState = function (item, state, value) {\n    item[state] = value;\n    var itemElement = this.getElementByLocalId(\"item-\" + item.id);\n\n    if (itemElement) {\n      var items = this.getItems();\n      var index = items.indexOf(item);\n      var offsetGroup = this.createOffScreenGroup(); // 离屏的 group\n\n      var newElement = this.drawItem(item, index, this.getItemHeight(), offsetGroup);\n      this.updateElements(newElement, itemElement); // 更新整个分组\n\n      this.clearUpdateStatus(itemElement); // 清理更新状态，防止出现 bug\n    }\n  };\n  /**\r\n   * 是否存在指定的状态\r\n   * @param {ListItem} item  列表项\r\n   * @param {boolean} state 状态名\r\n   */\n\n\n  Category.prototype.hasState = function (item, state) {\n    return !!item[state];\n  };\n\n  Category.prototype.getItemStates = function (item) {\n    var itemStates = this.get('itemStates');\n    var rst = [];\n    each(itemStates, function (v, k) {\n      if (item[k]) {\n        // item.selected\n        rst.push(k);\n      }\n    });\n    return rst;\n  };\n  /**\r\n   * 清楚所有列表项的状态\r\n   * @param {string} state 状态值\r\n   */\n\n\n  Category.prototype.clearItemsState = function (state) {\n    var _this = this;\n\n    var items = this.getItemsByState(state);\n    each(items, function (item) {\n      _this.setItemState(item, state, false);\n    });\n  };\n  /**\r\n   * 根据状态获取图例项\r\n   * @param  {string}     state [description]\r\n   * @return {ListItem[]}       [description]\r\n   */\n\n\n  Category.prototype.getItemsByState = function (state) {\n    var _this = this;\n\n    var items = this.getItems();\n    return filter(items, function (item) {\n      return _this.hasState(item, state);\n    });\n  }; // 绘制 legend 的选项\n\n\n  Category.prototype.drawLegendContent = function (group) {\n    this.processItems();\n    this.drawItems(group);\n  }; // 防止未设置 id\n\n\n  Category.prototype.processItems = function () {\n    var items = this.get('items');\n    each(items, function (item) {\n      if (!item.id) {\n        // 如果没有设置 id，默认使用 name\n        item.id = item.name;\n      }\n    });\n  }; // 绘制所有的图例选项\n\n\n  Category.prototype.drawItems = function (group) {\n    var _this = this;\n\n    var itemContainerGroup = this.addGroup(group, {\n      id: this.getElementId('item-container-group'),\n      name: 'legend-item-container-group'\n    });\n    var itemGroup = this.addGroup(itemContainerGroup, {\n      id: this.getElementId('item-group'),\n      name: 'legend-item-group'\n    });\n    var itemHeight = this.getItemHeight();\n    var itemWidth = this.get('itemWidth');\n    var itemSpacing = this.get('itemSpacing');\n    var itemMarginBottom = this.get('itemMarginBottom');\n    var currentPoint = this.get('currentPoint');\n    var startX = currentPoint.x;\n    var startY = currentPoint.y;\n    var layout = this.get('layout');\n    var items = this.get('items');\n    var wrapped = false;\n    var pageWidth = 0;\n    var maxWidth = this.get('maxWidth'); // 最大宽度，会导致 layout : 'horizontal' 时自动换行\n\n    var maxHeight = this.get('maxHeight'); // 最大高度，会导致出现分页\n    // 暂时不考虑分页\n\n    each(items, function (item, index) {\n      var subGroup = _this.drawItem(item, index, itemHeight, itemGroup);\n\n      var bbox = subGroup.getBBox();\n      var width = itemWidth || bbox.width;\n\n      if (width > pageWidth) {\n        pageWidth = width;\n      }\n\n      if (layout === 'horizontal') {\n        // 如果水平布局\n        if (maxWidth && maxWidth < currentPoint.x + width - startX) {\n          // 检测是否换行\n          wrapped = true;\n          currentPoint.x = startX;\n          currentPoint.y += itemHeight + itemMarginBottom;\n        }\n\n        _this.moveElementTo(subGroup, currentPoint);\n\n        currentPoint.x += width + itemSpacing;\n      } else {\n        // 如果垂直布局\n        if (maxHeight && maxHeight < currentPoint.y + itemHeight + itemMarginBottom - startY) {\n          // 换行\n          wrapped = true;\n          currentPoint.x += pageWidth + itemSpacing;\n          currentPoint.y = startY;\n          pageWidth = 0;\n        }\n\n        _this.moveElementTo(subGroup, currentPoint);\n\n        currentPoint.y += itemHeight + itemMarginBottom; // itemSpacing 仅影响水平间距\n      }\n    });\n\n    if (wrapped && this.get('flipPage')) {\n      this.pageHeight = 0;\n      this.pageWidth = 0;\n      this.totalPagesCnt = 1;\n      this.startX = startX;\n      this.startY = startY;\n      this.adjustNavigation(group, itemGroup);\n    }\n  }; // 获取图例项的高度，如果未定义，则按照 name 的高度计算\n\n\n  Category.prototype.getItemHeight = function () {\n    var itemHeight = this.get('itemHeight');\n\n    if (!itemHeight) {\n      var style_1 = (this.get('itemName') || {}).style;\n\n      if (isFunction(style_1)) {\n        var items_1 = this.getItems();\n        items_1.forEach(function (item, index) {\n          var fontSize = __assign(__assign({}, textStyle), style_1(item, index, items_1)).fontSize;\n\n          if (itemHeight < fontSize) {\n            itemHeight = fontSize;\n          }\n        });\n      } else if (style_1) {\n        itemHeight = style_1.fontSize;\n      }\n    }\n\n    return itemHeight;\n  }; // 绘制 marker\n\n\n  Category.prototype.drawMarker = function (container, markerCfg, item, itemHeight) {\n    var markerAttrs = __assign(__assign(__assign({\n      x: 0,\n      y: itemHeight / 2\n    }, markerCfg.style), {\n      symbol: get(item.marker, 'symbol', 'circle')\n    }), get(item.marker, 'style', {}));\n\n    var shape = this.addShape(container, {\n      type: 'marker',\n      id: this.getElementId(\"item-\" + item.id + \"-marker\"),\n      name: 'legend-item-marker',\n      attrs: markerAttrs\n    });\n    var bbox = shape.getBBox();\n    shape.attr('x', bbox.width / 2); // marker 需要左对齐，所以不能占用左侧的空间\n\n    var _a = shape.attr(),\n        stroke = _a.stroke,\n        fill = _a.fill;\n\n    if (stroke) {\n      shape.set('isStroke', true);\n    }\n\n    if (fill) {\n      shape.set('isFill', true);\n    }\n\n    return shape;\n  }; // 绘制文本\n\n\n  Category.prototype.drawItemText = function (container, textName, cfg, item, itemHeight, xPosition, index) {\n    var formatter = cfg.formatter;\n    var style = cfg.style;\n\n    var attrs = __assign(__assign({\n      x: xPosition,\n      y: itemHeight / 2,\n      text: formatter ? formatter(item[textName], item, index) : item[textName]\n    }, textStyle), isFunction(style) ? style(item, index, this.getItems()) : style);\n\n    return this.addShape(container, {\n      type: 'text',\n      id: this.getElementId(\"item-\" + item.id + \"-\" + textName),\n      name: \"legend-item-\" + textName,\n      attrs: attrs\n    });\n  }; // 绘制图例项\n\n\n  Category.prototype.drawItem = function (item, index, itemHeight, itemGroup) {\n    var groupId = \"item-\" + item.id; // 设置单独的 Group 用于 setClip\n\n    var subContainer = this.addGroup(itemGroup, {\n      name: 'legend-item-container',\n      id: this.getElementId(\"item-container-\" + groupId),\n      delegateObject: {\n        item: item,\n        index: index\n      }\n    });\n    var subGroup = this.addGroup(subContainer, {\n      name: 'legend-item',\n      id: this.getElementId(groupId),\n      delegateObject: {\n        item: item,\n        index: index\n      }\n    });\n    var marker = this.get('marker');\n    var itemName = this.get('itemName');\n    var itemValue = this.get('itemValue');\n    var itemBackground = this.get('itemBackground');\n    var itemWidth = this.getLimitItemWidth();\n    var curX = 0; // 记录当前 x 的位置\n\n    if (marker) {\n      var markerShape = this.drawMarker(subGroup, marker, item, itemHeight);\n      var spacing = marker.spacing;\n      var itemMarkerSpacing = get(item, ['marker', 'spacing']);\n\n      if (isNumber(itemMarkerSpacing)) {\n        // 如果 item 有配置 marker.spacing，采用 item 的配置\n        spacing = itemMarkerSpacing;\n      }\n\n      curX = markerShape.getBBox().maxX + spacing;\n    }\n\n    if (itemName) {\n      var nameShape = this.drawItemText(subGroup, 'name', itemName, item, itemHeight, curX, index);\n\n      if (itemWidth) {\n        // 设置了 item 的最大宽度限制，并且超出了，进行省略处理\n        ellipsisLabel(true, nameShape, clamp(itemWidth - curX, 0, itemWidth));\n      }\n\n      curX = nameShape.getBBox().maxX + itemName.spacing;\n    }\n\n    if (itemValue) {\n      var valueShape = this.drawItemText(subGroup, 'value', itemValue, item, itemHeight, curX, index);\n\n      if (itemWidth) {\n        if (itemValue.alignRight) {\n          valueShape.attr({\n            textAlign: 'right',\n            x: itemWidth\n          });\n          ellipsisLabel(true, valueShape, clamp(itemWidth - curX, 0, itemWidth), 'head');\n        } else {\n          ellipsisLabel(true, valueShape, clamp(itemWidth - curX, 0, itemWidth));\n        }\n      }\n    } // 添加透明的背景，便于拾取和包围盒计算\n\n\n    if (itemBackground) {\n      var bbox = subGroup.getBBox();\n      var backShape = this.addShape(subGroup, {\n        type: 'rect',\n        name: 'legend-item-background',\n        id: this.getElementId(groupId + \"-background\"),\n        attrs: __assign({\n          x: 0,\n          y: 0,\n          width: bbox.width,\n          height: itemHeight\n        }, itemBackground.style)\n      });\n      backShape.toBack();\n    }\n\n    this.applyItemStates(item, subGroup);\n    return subGroup;\n  }; // 加上分页器并重新排序 items\n\n\n  Category.prototype.adjustNavigation = function (container, itemGroup) {\n    var _this = this;\n\n    var startX = this.startX;\n    var startY = this.startY;\n    var layout = this.get('layout');\n    var subGroups = itemGroup.findAll(function (item) {\n      return item.get('name') === 'legend-item';\n    });\n    var maxWidth = this.get('maxWidth');\n    var maxHeight = this.get('maxHeight');\n    var itemWidth = this.get('itemWidth');\n    var itemSpacing = this.get('itemSpacing');\n    var itemHeight = this.getItemHeight();\n    var pageNavigator = deepMix({}, DEFAULT_PAGE_NAVIGATOR, this.get('pageNavigator'));\n    var navigation = this.drawNavigation(container, layout, '00/00', pageNavigator);\n    var navigationBBox = navigation.getBBox();\n    var currentPoint = {\n      x: startX,\n      y: startY\n    };\n    var pages = 1;\n    var widthLimit = 0;\n    var pageWidth = 0;\n    var maxItemWidth = 0;\n    var itemMarginBottom = this.get('itemMarginBottom');\n\n    if (layout === 'horizontal') {\n      var maxRow = this.get('maxRow') || 1;\n      var maxRowHeight_1 = itemHeight + (maxRow === 1 ? 0 : itemMarginBottom);\n      this.pageHeight = maxRowHeight_1 * maxRow;\n      each(subGroups, function (item) {\n        var bbox = item.getBBox();\n        var width = itemWidth || bbox.width;\n\n        if (widthLimit && widthLimit < currentPoint.x + width + itemSpacing || maxWidth < currentPoint.x + width + itemSpacing + navigationBBox.width) {\n          if (pages === 1) {\n            widthLimit = currentPoint.x + itemSpacing;\n            _this.pageWidth = widthLimit;\n\n            _this.moveElementTo(navigation, {\n              x: maxWidth - itemSpacing - navigationBBox.width - navigationBBox.minX,\n              y: currentPoint.y + itemHeight / 2 - navigationBBox.height / 2 - navigationBBox.minY\n            });\n          }\n\n          pages += 1;\n          currentPoint.x = startX;\n          currentPoint.y += maxRowHeight_1;\n        }\n\n        _this.moveElementTo(item, currentPoint);\n\n        item.getParent().setClip({\n          type: 'rect',\n          attrs: {\n            x: currentPoint.x,\n            y: currentPoint.y,\n            width: width + itemSpacing,\n            height: itemHeight\n          }\n        });\n        currentPoint.x += width + itemSpacing;\n      });\n    } else {\n      each(subGroups, function (item) {\n        var bbox = item.getBBox();\n\n        if (bbox.width > pageWidth) {\n          pageWidth = bbox.width;\n        }\n      });\n      maxItemWidth = pageWidth;\n      pageWidth += itemSpacing;\n\n      if (maxWidth) {\n        // maxWidth 限制加上\n        pageWidth = Math.min(maxWidth, pageWidth);\n        maxItemWidth = Math.min(maxWidth, maxItemWidth);\n      }\n\n      this.pageWidth = pageWidth;\n      this.pageHeight = maxHeight - Math.max(navigationBBox.height, itemHeight + itemMarginBottom);\n      var cntPerPage_1 = Math.floor(this.pageHeight / (itemHeight + itemMarginBottom));\n      each(subGroups, function (item, index) {\n        if (index !== 0 && index % cntPerPage_1 === 0) {\n          pages += 1;\n          currentPoint.x += pageWidth;\n          currentPoint.y = startY;\n        }\n\n        _this.moveElementTo(item, currentPoint);\n\n        item.getParent().setClip({\n          type: 'rect',\n          attrs: {\n            x: currentPoint.x,\n            y: currentPoint.y,\n            width: pageWidth,\n            height: itemHeight\n          }\n        });\n        currentPoint.y += itemHeight + itemMarginBottom;\n      });\n      this.totalPagesCnt = pages;\n      this.moveElementTo(navigation, {\n        x: startX + maxItemWidth / 2 - navigationBBox.width / 2 - navigationBBox.minX,\n        y: maxHeight - navigationBBox.height - navigationBBox.minY\n      });\n    }\n\n    if (this.pageHeight && this.pageWidth) {\n      // 为了使固定的 clip 生效，clip 设置在 itemContainerGroup 上，itemGroup 需要在翻页时会设置 matrix\n      itemGroup.getParent().setClip({\n        type: 'rect',\n        attrs: {\n          x: this.startX,\n          y: this.startY,\n          width: this.pageWidth,\n          height: this.pageHeight\n        }\n      });\n    } // 重新计算 totalPagesCnt\n\n\n    if (layout === 'horizontal' && this.get('maxRow')) {\n      this.totalPagesCnt = Math.ceil(pages / this.get('maxRow'));\n    } else {\n      this.totalPagesCnt = pages;\n    }\n\n    if (this.currentPageIndex > this.totalPagesCnt) {\n      this.currentPageIndex = 1;\n    }\n\n    this.updateNavigation(navigation); // update initial matrix\n\n    itemGroup.attr('matrix', this.getCurrentNavigationMatrix());\n  };\n  /**\r\n   * 绘制分页器\r\n   */\n\n\n  Category.prototype.drawNavigation = function (group, layout, text, styleCfg) {\n    var currentPoint = {\n      x: 0,\n      y: 0\n    };\n    var subGroup = this.addGroup(group, {\n      id: this.getElementId('navigation-group'),\n      name: 'legend-navigation'\n    });\n\n    var _a = get(styleCfg.marker, 'style', {}),\n        _b = _a.size,\n        size = _b === void 0 ? 12 : _b,\n        arrowStyle = __rest(_a, [\"size\"]);\n\n    var leftArrow = this.drawArrow(subGroup, currentPoint, 'navigation-arrow-left', layout === 'horizontal' ? 'up' : 'left', size, arrowStyle);\n    leftArrow.on('click', this.onNavigationBack);\n    var leftArrowBBox = leftArrow.getBBox();\n    currentPoint.x += leftArrowBBox.width + 2;\n    var textShape = this.addShape(subGroup, {\n      type: 'text',\n      id: this.getElementId('navigation-text'),\n      name: 'navigation-text',\n      attrs: __assign({\n        x: currentPoint.x,\n        y: currentPoint.y + size / 2,\n        text: text,\n        textBaseline: 'middle'\n      }, get(styleCfg.text, 'style'))\n    });\n    var textBBox = textShape.getBBox();\n    currentPoint.x += textBBox.width + 2;\n    var rightArrow = this.drawArrow(subGroup, currentPoint, 'navigation-arrow-right', layout === 'horizontal' ? 'down' : 'right', size, arrowStyle);\n    rightArrow.on('click', this.onNavigationAfter);\n    return subGroup;\n  };\n\n  Category.prototype.updateNavigation = function (navigation) {\n    var pageNavigator = deepMix({}, DEFAULT_PAGE_NAVIGATOR, this.get('pageNavigator'));\n    var _a = pageNavigator.marker.style,\n        fill = _a.fill,\n        opacity = _a.opacity,\n        inactiveFill = _a.inactiveFill,\n        inactiveOpacity = _a.inactiveOpacity;\n    var text = this.currentPageIndex + \"/\" + this.totalPagesCnt;\n    var textShape = navigation ? navigation.getChildren()[1] : this.getElementByLocalId('navigation-text');\n    var leftArrow = navigation ? navigation.findById(this.getElementId('navigation-arrow-left')) : this.getElementByLocalId('navigation-arrow-left');\n    var rightArrow = navigation ? navigation.findById(this.getElementId('navigation-arrow-right')) : this.getElementByLocalId('navigation-arrow-right');\n    var origBBox = textShape.getBBox();\n    textShape.attr('text', text);\n    var newBBox = textShape.getBBox();\n    textShape.attr('x', textShape.attr('x') - (newBBox.width - origBBox.width) / 2); // 更新 left-arrow marker\n\n    leftArrow.attr('opacity', this.currentPageIndex === 1 ? inactiveOpacity : opacity);\n    leftArrow.attr('fill', this.currentPageIndex === 1 ? inactiveFill : fill);\n    leftArrow.attr('cursor', this.currentPageIndex === 1 ? 'not-allowed' : 'pointer'); // 更新 right-arrow marker\n\n    rightArrow.attr('opacity', this.currentPageIndex === this.totalPagesCnt ? inactiveOpacity : opacity);\n    rightArrow.attr('fill', this.currentPageIndex === this.totalPagesCnt ? inactiveFill : fill);\n    rightArrow.attr('cursor', this.currentPageIndex === this.totalPagesCnt ? 'not-allowed' : 'pointer');\n  };\n\n  Category.prototype.drawArrow = function (group, currentPoint, name, direction, size, style) {\n    var x = currentPoint.x,\n        y = currentPoint.y;\n    var rotateMap = {\n      right: 90 * Math.PI / 180,\n      left: (360 - 90) * Math.PI / 180,\n      up: 0,\n      down: 180 * Math.PI / 180\n    };\n    var shape = this.addShape(group, {\n      type: 'path',\n      id: this.getElementId(name),\n      name: name,\n      attrs: __assign({\n        path: [['M', x + size / 2, y], ['L', x, y + size], ['L', x + size, y + size], ['Z']],\n        cursor: 'pointer'\n      }, style)\n    });\n    shape.attr('matrix', getMatrixByAngle({\n      x: x + size / 2,\n      y: y + size / 2\n    }, rotateMap[direction]));\n    return shape;\n  };\n\n  Category.prototype.getCurrentNavigationMatrix = function () {\n    var _a = this,\n        currentPageIndex = _a.currentPageIndex,\n        pageWidth = _a.pageWidth,\n        pageHeight = _a.pageHeight;\n\n    var layout = this.get('layout');\n    var translate = layout === 'horizontal' ? {\n      x: 0,\n      y: pageHeight * (1 - currentPageIndex)\n    } : {\n      x: pageWidth * (1 - currentPageIndex),\n      y: 0\n    };\n    return getMatrixByTranslate(translate);\n  }; // 附加状态对应的样式\n\n\n  Category.prototype.applyItemStates = function (item, subGroup) {\n    var states = this.getItemStates(item);\n    var hasStates = states.length > 0;\n\n    if (hasStates) {\n      var children = subGroup.getChildren();\n      var itemStates_1 = this.get('itemStates');\n      each(children, function (element) {\n        var name = element.get('name');\n        var elName = name.split('-')[2]; // marker, name, value\n\n        var statesStyle = getStatesStyle(item, elName, itemStates_1);\n\n        if (statesStyle) {\n          element.attr(statesStyle);\n\n          if (elName === 'marker' && !(element.get('isStroke') && element.get('isFill'))) {\n            // 如果 marker 是单填充或者单描边的话，就不要额外添加 stroke 或这 fill 属性，否则会影响 unchecked 后的显示\n            if (element.get('isStroke')) {\n              element.attr('fill', null);\n            }\n\n            if (element.get('isFill')) {\n              element.attr('stroke', null);\n            }\n          }\n        }\n      });\n    }\n  }; // 获取 itemWidth 的最终设置\n\n\n  Category.prototype.getLimitItemWidth = function () {\n    var itemWidth = this.get('itemWidth');\n    var maxItemWidth = this.get('maxItemWidth');\n\n    if (maxItemWidth) {\n      // 设置了最大宽度\n      if (itemWidth) {\n        maxItemWidth = itemWidth <= maxItemWidth ? itemWidth : maxItemWidth;\n      }\n    } else if (itemWidth) {\n      maxItemWidth = itemWidth;\n    }\n\n    return maxItemWidth;\n  };\n\n  return Category;\n}(LegendBase);\n\nexport default Category;","map":{"version":3,"sources":["../../src/legend/category.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends, __rest } from \"tslib\";\r\nimport { clamp, deepMix, each, filter, get, mix, isNumber, isFunction } from '@antv/util';\r\nimport { ellipsisLabel } from '../util/label';\r\nimport { getMatrixByAngle, getMatrixByTranslate } from '../util/matrix';\r\nimport { getStatesStyle } from '../util/state';\r\nimport Theme from '../util/theme';\r\nimport LegendBase from './base';\r\n/**\r\n * 分页器 默认配置\r\n */\r\nvar DEFAULT_PAGE_NAVIGATOR = {\r\n    marker: {\r\n        style: {\r\n            inactiveFill: '#000',\r\n            inactiveOpacity: 0.45,\r\n            fill: '#000',\r\n            opacity: 1,\r\n            size: 12,\r\n        },\r\n    },\r\n    text: {\r\n        style: {\r\n            fill: '#ccc',\r\n            fontSize: 12,\r\n        },\r\n    },\r\n};\r\n// 默认 文本style\r\nvar textStyle = {\r\n    fill: Theme.textColor,\r\n    fontSize: 12,\r\n    textAlign: 'start',\r\n    textBaseline: 'middle',\r\n    fontFamily: Theme.fontFamily,\r\n    fontWeight: \"normal\",\r\n    lineHeight: 12,\r\n};\r\nvar Category = /** @class */ (function (_super) {\r\n    __extends(Category, _super);\r\n    function Category() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.currentPageIndex = 1;\r\n        _this.totalPagesCnt = 1;\r\n        _this.pageWidth = 0;\r\n        _this.pageHeight = 0;\r\n        _this.startX = 0;\r\n        _this.startY = 0;\r\n        _this.onNavigationBack = function () {\r\n            var itemGroup = _this.getElementByLocalId('item-group');\r\n            if (_this.currentPageIndex > 1) {\r\n                _this.currentPageIndex -= 1;\r\n                _this.updateNavigation();\r\n                var matrix = _this.getCurrentNavigationMatrix();\r\n                if (_this.get('animate')) {\r\n                    itemGroup.animate({\r\n                        matrix: matrix,\r\n                    }, 100);\r\n                }\r\n                else {\r\n                    itemGroup.attr({ matrix: matrix });\r\n                }\r\n            }\r\n        };\r\n        _this.onNavigationAfter = function () {\r\n            var itemGroup = _this.getElementByLocalId('item-group');\r\n            if (_this.currentPageIndex < _this.totalPagesCnt) {\r\n                _this.currentPageIndex += 1;\r\n                _this.updateNavigation();\r\n                var matrix = _this.getCurrentNavigationMatrix();\r\n                if (_this.get('animate')) {\r\n                    itemGroup.animate({\r\n                        matrix: matrix,\r\n                    }, 100);\r\n                }\r\n                else {\r\n                    itemGroup.attr({ matrix: matrix });\r\n                }\r\n            }\r\n        };\r\n        return _this;\r\n    }\r\n    Category.prototype.getDefaultCfg = function () {\r\n        var cfg = _super.prototype.getDefaultCfg.call(this);\r\n        return __assign(__assign({}, cfg), { name: 'legend', type: 'category', itemSpacing: 24, itemMarginBottom: 8, maxItemWidth: null, itemWidth: null, itemHeight: null, itemName: {}, itemValue: null, maxWidth: null, maxHeight: null, marker: {}, items: [], itemStates: {}, itemBackground: {}, pageNavigator: {}, defaultCfg: {\r\n                title: {\r\n                    spacing: 5,\r\n                    style: {\r\n                        fill: Theme.textColor,\r\n                        fontSize: 12,\r\n                        textAlign: 'start',\r\n                        textBaseline: 'top',\r\n                    },\r\n                },\r\n                background: {\r\n                    padding: 5,\r\n                    style: {\r\n                        stroke: Theme.lineColor,\r\n                    },\r\n                },\r\n                itemBackground: {\r\n                    style: {\r\n                        opacity: 0,\r\n                        fill: '#fff',\r\n                    },\r\n                },\r\n                pageNavigator: DEFAULT_PAGE_NAVIGATOR,\r\n                itemName: {\r\n                    spacing: 16,\r\n                    style: textStyle,\r\n                },\r\n                marker: {\r\n                    spacing: 8,\r\n                    style: {\r\n                        r: 6,\r\n                        symbol: 'circle',\r\n                    },\r\n                },\r\n                itemValue: {\r\n                    alignRight: false,\r\n                    formatter: null,\r\n                    style: textStyle,\r\n                },\r\n                itemStates: {\r\n                    active: {\r\n                        nameStyle: {\r\n                            opacity: 0.8,\r\n                        },\r\n                    },\r\n                    unchecked: {\r\n                        nameStyle: {\r\n                            fill: Theme.uncheckedColor,\r\n                        },\r\n                        markerStyle: {\r\n                            fill: Theme.uncheckedColor,\r\n                            stroke: Theme.uncheckedColor,\r\n                        },\r\n                    },\r\n                    inactive: {\r\n                        nameStyle: {\r\n                            fill: Theme.uncheckedColor,\r\n                        },\r\n                        markerStyle: {\r\n                            opacity: 0.2,\r\n                        },\r\n                    },\r\n                },\r\n            } });\r\n    };\r\n    // 实现 IList 接口\r\n    Category.prototype.isList = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * 获取图例项\r\n     * @return {ListItem[]} 列表项集合\r\n     */\r\n    Category.prototype.getItems = function () {\r\n        return this.get('items');\r\n    };\r\n    /**\r\n     * 设置列表项\r\n     * @param {ListItem[]} items 列表项集合\r\n     */\r\n    Category.prototype.setItems = function (items) {\r\n        this.update({\r\n            items: items,\r\n        });\r\n    };\r\n    /**\r\n     * 更新列表项\r\n     * @param {ListItem} item 列表项\r\n     * @param {object}   cfg  列表项\r\n     */\r\n    Category.prototype.updateItem = function (item, cfg) {\r\n        mix(item, cfg);\r\n        this.clear(); // 由于单个图例项变化，会引起全局变化，所以全部更新\r\n        this.render();\r\n    };\r\n    /**\r\n     * 清空列表\r\n     */\r\n    Category.prototype.clearItems = function () {\r\n        var itemGroup = this.getElementByLocalId('item-group');\r\n        itemGroup && itemGroup.clear();\r\n    };\r\n    /**\r\n     * 设置列表项的状态\r\n     * @param {ListItem} item  列表项\r\n     * @param {string}   state 状态名\r\n     * @param {boolean}  value 状态值, true, false\r\n     */\r\n    Category.prototype.setItemState = function (item, state, value) {\r\n        item[state] = value;\r\n        var itemElement = this.getElementByLocalId(\"item-\" + item.id);\r\n        if (itemElement) {\r\n            var items = this.getItems();\r\n            var index = items.indexOf(item);\r\n            var offsetGroup = this.createOffScreenGroup(); // 离屏的 group\r\n            var newElement = this.drawItem(item, index, this.getItemHeight(), offsetGroup);\r\n            this.updateElements(newElement, itemElement); // 更新整个分组\r\n            this.clearUpdateStatus(itemElement); // 清理更新状态，防止出现 bug\r\n        }\r\n    };\r\n    /**\r\n     * 是否存在指定的状态\r\n     * @param {ListItem} item  列表项\r\n     * @param {boolean} state 状态名\r\n     */\r\n    Category.prototype.hasState = function (item, state) {\r\n        return !!item[state];\r\n    };\r\n    Category.prototype.getItemStates = function (item) {\r\n        var itemStates = this.get('itemStates');\r\n        var rst = [];\r\n        each(itemStates, function (v, k) {\r\n            if (item[k]) {\r\n                // item.selected\r\n                rst.push(k);\r\n            }\r\n        });\r\n        return rst;\r\n    };\r\n    /**\r\n     * 清楚所有列表项的状态\r\n     * @param {string} state 状态值\r\n     */\r\n    Category.prototype.clearItemsState = function (state) {\r\n        var _this = this;\r\n        var items = this.getItemsByState(state);\r\n        each(items, function (item) {\r\n            _this.setItemState(item, state, false);\r\n        });\r\n    };\r\n    /**\r\n     * 根据状态获取图例项\r\n     * @param  {string}     state [description]\r\n     * @return {ListItem[]}       [description]\r\n     */\r\n    Category.prototype.getItemsByState = function (state) {\r\n        var _this = this;\r\n        var items = this.getItems();\r\n        return filter(items, function (item) {\r\n            return _this.hasState(item, state);\r\n        });\r\n    };\r\n    // 绘制 legend 的选项\r\n    Category.prototype.drawLegendContent = function (group) {\r\n        this.processItems();\r\n        this.drawItems(group);\r\n    };\r\n    // 防止未设置 id\r\n    Category.prototype.processItems = function () {\r\n        var items = this.get('items');\r\n        each(items, function (item) {\r\n            if (!item.id) {\r\n                // 如果没有设置 id，默认使用 name\r\n                item.id = item.name;\r\n            }\r\n        });\r\n    };\r\n    // 绘制所有的图例选项\r\n    Category.prototype.drawItems = function (group) {\r\n        var _this = this;\r\n        var itemContainerGroup = this.addGroup(group, {\r\n            id: this.getElementId('item-container-group'),\r\n            name: 'legend-item-container-group',\r\n        });\r\n        var itemGroup = this.addGroup(itemContainerGroup, {\r\n            id: this.getElementId('item-group'),\r\n            name: 'legend-item-group',\r\n        });\r\n        var itemHeight = this.getItemHeight();\r\n        var itemWidth = this.get('itemWidth');\r\n        var itemSpacing = this.get('itemSpacing');\r\n        var itemMarginBottom = this.get('itemMarginBottom');\r\n        var currentPoint = this.get('currentPoint');\r\n        var startX = currentPoint.x;\r\n        var startY = currentPoint.y;\r\n        var layout = this.get('layout');\r\n        var items = this.get('items');\r\n        var wrapped = false;\r\n        var pageWidth = 0;\r\n        var maxWidth = this.get('maxWidth'); // 最大宽度，会导致 layout : 'horizontal' 时自动换行\r\n        var maxHeight = this.get('maxHeight'); // 最大高度，会导致出现分页\r\n        // 暂时不考虑分页\r\n        each(items, function (item, index) {\r\n            var subGroup = _this.drawItem(item, index, itemHeight, itemGroup);\r\n            var bbox = subGroup.getBBox();\r\n            var width = itemWidth || bbox.width;\r\n            if (width > pageWidth) {\r\n                pageWidth = width;\r\n            }\r\n            if (layout === 'horizontal') {\r\n                // 如果水平布局\r\n                if (maxWidth && maxWidth < currentPoint.x + width - startX) {\r\n                    // 检测是否换行\r\n                    wrapped = true;\r\n                    currentPoint.x = startX;\r\n                    currentPoint.y += itemHeight + itemMarginBottom;\r\n                }\r\n                _this.moveElementTo(subGroup, currentPoint);\r\n                currentPoint.x += width + itemSpacing;\r\n            }\r\n            else {\r\n                // 如果垂直布局\r\n                if (maxHeight && maxHeight < currentPoint.y + itemHeight + itemMarginBottom - startY) {\r\n                    // 换行\r\n                    wrapped = true;\r\n                    currentPoint.x += pageWidth + itemSpacing;\r\n                    currentPoint.y = startY;\r\n                    pageWidth = 0;\r\n                }\r\n                _this.moveElementTo(subGroup, currentPoint);\r\n                currentPoint.y += itemHeight + itemMarginBottom; // itemSpacing 仅影响水平间距\r\n            }\r\n        });\r\n        if (wrapped && this.get('flipPage')) {\r\n            this.pageHeight = 0;\r\n            this.pageWidth = 0;\r\n            this.totalPagesCnt = 1;\r\n            this.startX = startX;\r\n            this.startY = startY;\r\n            this.adjustNavigation(group, itemGroup);\r\n        }\r\n    };\r\n    // 获取图例项的高度，如果未定义，则按照 name 的高度计算\r\n    Category.prototype.getItemHeight = function () {\r\n        var itemHeight = this.get('itemHeight');\r\n        if (!itemHeight) {\r\n            var style_1 = (this.get('itemName') || {}).style;\r\n            if (isFunction(style_1)) {\r\n                var items_1 = this.getItems();\r\n                items_1.forEach(function (item, index) {\r\n                    var fontSize = __assign(__assign({}, textStyle), style_1(item, index, items_1)).fontSize;\r\n                    if (itemHeight < fontSize) {\r\n                        itemHeight = fontSize;\r\n                    }\r\n                });\r\n            }\r\n            else if (style_1) {\r\n                itemHeight = style_1.fontSize;\r\n            }\r\n        }\r\n        return itemHeight;\r\n    };\r\n    // 绘制 marker\r\n    Category.prototype.drawMarker = function (container, markerCfg, item, itemHeight) {\r\n        var markerAttrs = __assign(__assign(__assign({ x: 0, y: itemHeight / 2 }, markerCfg.style), { symbol: get(item.marker, 'symbol', 'circle') }), get(item.marker, 'style', {}));\r\n        var shape = this.addShape(container, {\r\n            type: 'marker',\r\n            id: this.getElementId(\"item-\" + item.id + \"-marker\"),\r\n            name: 'legend-item-marker',\r\n            attrs: markerAttrs,\r\n        });\r\n        var bbox = shape.getBBox();\r\n        shape.attr('x', bbox.width / 2); // marker 需要左对齐，所以不能占用左侧的空间\r\n        var _a = shape.attr(), stroke = _a.stroke, fill = _a.fill;\r\n        if (stroke) {\r\n            shape.set('isStroke', true);\r\n        }\r\n        if (fill) {\r\n            shape.set('isFill', true);\r\n        }\r\n        return shape;\r\n    };\r\n    // 绘制文本\r\n    Category.prototype.drawItemText = function (container, textName, cfg, item, itemHeight, xPosition, index) {\r\n        var formatter = cfg.formatter;\r\n        var style = cfg.style;\r\n        var attrs = __assign(__assign({ x: xPosition, y: itemHeight / 2, text: formatter ? formatter(item[textName], item, index) : item[textName] }, textStyle), (isFunction(style) ? style(item, index, this.getItems()) : style));\r\n        return this.addShape(container, {\r\n            type: 'text',\r\n            id: this.getElementId(\"item-\" + item.id + \"-\" + textName),\r\n            name: \"legend-item-\" + textName,\r\n            attrs: attrs,\r\n        });\r\n    };\r\n    // 绘制图例项\r\n    Category.prototype.drawItem = function (item, index, itemHeight, itemGroup) {\r\n        var groupId = \"item-\" + item.id;\r\n        // 设置单独的 Group 用于 setClip\r\n        var subContainer = this.addGroup(itemGroup, {\r\n            name: 'legend-item-container',\r\n            id: this.getElementId(\"item-container-\" + groupId),\r\n            delegateObject: {\r\n                item: item,\r\n                index: index,\r\n            },\r\n        });\r\n        var subGroup = this.addGroup(subContainer, {\r\n            name: 'legend-item',\r\n            id: this.getElementId(groupId),\r\n            delegateObject: {\r\n                item: item,\r\n                index: index,\r\n            },\r\n        });\r\n        var marker = this.get('marker');\r\n        var itemName = this.get('itemName');\r\n        var itemValue = this.get('itemValue');\r\n        var itemBackground = this.get('itemBackground');\r\n        var itemWidth = this.getLimitItemWidth();\r\n        var curX = 0; // 记录当前 x 的位置\r\n        if (marker) {\r\n            var markerShape = this.drawMarker(subGroup, marker, item, itemHeight);\r\n            var spacing = marker.spacing;\r\n            var itemMarkerSpacing = get(item, ['marker', 'spacing']);\r\n            if (isNumber(itemMarkerSpacing)) {\r\n                // 如果 item 有配置 marker.spacing，采用 item 的配置\r\n                spacing = itemMarkerSpacing;\r\n            }\r\n            curX = markerShape.getBBox().maxX + spacing;\r\n        }\r\n        if (itemName) {\r\n            var nameShape = this.drawItemText(subGroup, 'name', itemName, item, itemHeight, curX, index);\r\n            if (itemWidth) {\r\n                // 设置了 item 的最大宽度限制，并且超出了，进行省略处理\r\n                ellipsisLabel(true, nameShape, clamp(itemWidth - curX, 0, itemWidth));\r\n            }\r\n            curX = nameShape.getBBox().maxX + itemName.spacing;\r\n        }\r\n        if (itemValue) {\r\n            var valueShape = this.drawItemText(subGroup, 'value', itemValue, item, itemHeight, curX, index);\r\n            if (itemWidth) {\r\n                if (itemValue.alignRight) {\r\n                    valueShape.attr({\r\n                        textAlign: 'right',\r\n                        x: itemWidth,\r\n                    });\r\n                    ellipsisLabel(true, valueShape, clamp(itemWidth - curX, 0, itemWidth), 'head');\r\n                }\r\n                else {\r\n                    ellipsisLabel(true, valueShape, clamp(itemWidth - curX, 0, itemWidth));\r\n                }\r\n            }\r\n        }\r\n        // 添加透明的背景，便于拾取和包围盒计算\r\n        if (itemBackground) {\r\n            var bbox = subGroup.getBBox();\r\n            var backShape = this.addShape(subGroup, {\r\n                type: 'rect',\r\n                name: 'legend-item-background',\r\n                id: this.getElementId(groupId + \"-background\"),\r\n                attrs: __assign({ x: 0, y: 0, width: bbox.width, height: itemHeight }, itemBackground.style),\r\n            });\r\n            backShape.toBack();\r\n        }\r\n        this.applyItemStates(item, subGroup);\r\n        return subGroup;\r\n    };\r\n    // 加上分页器并重新排序 items\r\n    Category.prototype.adjustNavigation = function (container, itemGroup) {\r\n        var _this = this;\r\n        var startX = this.startX;\r\n        var startY = this.startY;\r\n        var layout = this.get('layout');\r\n        var subGroups = itemGroup.findAll(function (item) { return item.get('name') === 'legend-item'; });\r\n        var maxWidth = this.get('maxWidth');\r\n        var maxHeight = this.get('maxHeight');\r\n        var itemWidth = this.get('itemWidth');\r\n        var itemSpacing = this.get('itemSpacing');\r\n        var itemHeight = this.getItemHeight();\r\n        var pageNavigator = deepMix({}, DEFAULT_PAGE_NAVIGATOR, this.get('pageNavigator'));\r\n        var navigation = this.drawNavigation(container, layout, '00/00', pageNavigator);\r\n        var navigationBBox = navigation.getBBox();\r\n        var currentPoint = { x: startX, y: startY };\r\n        var pages = 1;\r\n        var widthLimit = 0;\r\n        var pageWidth = 0;\r\n        var maxItemWidth = 0;\r\n        var itemMarginBottom = this.get('itemMarginBottom');\r\n        if (layout === 'horizontal') {\r\n            var maxRow = this.get('maxRow') || 1;\r\n            var maxRowHeight_1 = itemHeight + (maxRow === 1 ? 0 : itemMarginBottom);\r\n            this.pageHeight = maxRowHeight_1 * maxRow;\r\n            each(subGroups, function (item) {\r\n                var bbox = item.getBBox();\r\n                var width = itemWidth || bbox.width;\r\n                if ((widthLimit && widthLimit < currentPoint.x + width + itemSpacing) ||\r\n                    maxWidth < currentPoint.x + width + itemSpacing + navigationBBox.width) {\r\n                    if (pages === 1) {\r\n                        widthLimit = currentPoint.x + itemSpacing;\r\n                        _this.pageWidth = widthLimit;\r\n                        _this.moveElementTo(navigation, {\r\n                            x: maxWidth - itemSpacing - navigationBBox.width - navigationBBox.minX,\r\n                            y: currentPoint.y + itemHeight / 2 - navigationBBox.height / 2 - navigationBBox.minY,\r\n                        });\r\n                    }\r\n                    pages += 1;\r\n                    currentPoint.x = startX;\r\n                    currentPoint.y += maxRowHeight_1;\r\n                }\r\n                _this.moveElementTo(item, currentPoint);\r\n                item.getParent().setClip({\r\n                    type: 'rect',\r\n                    attrs: {\r\n                        x: currentPoint.x,\r\n                        y: currentPoint.y,\r\n                        width: width + itemSpacing,\r\n                        height: itemHeight,\r\n                    },\r\n                });\r\n                currentPoint.x += width + itemSpacing;\r\n            });\r\n        }\r\n        else {\r\n            each(subGroups, function (item) {\r\n                var bbox = item.getBBox();\r\n                if (bbox.width > pageWidth) {\r\n                    pageWidth = bbox.width;\r\n                }\r\n            });\r\n            maxItemWidth = pageWidth;\r\n            pageWidth += itemSpacing;\r\n            if (maxWidth) {\r\n                // maxWidth 限制加上\r\n                pageWidth = Math.min(maxWidth, pageWidth);\r\n                maxItemWidth = Math.min(maxWidth, maxItemWidth);\r\n            }\r\n            this.pageWidth = pageWidth;\r\n            this.pageHeight = maxHeight - Math.max(navigationBBox.height, itemHeight + itemMarginBottom);\r\n            var cntPerPage_1 = Math.floor(this.pageHeight / (itemHeight + itemMarginBottom));\r\n            each(subGroups, function (item, index) {\r\n                if (index !== 0 && index % cntPerPage_1 === 0) {\r\n                    pages += 1;\r\n                    currentPoint.x += pageWidth;\r\n                    currentPoint.y = startY;\r\n                }\r\n                _this.moveElementTo(item, currentPoint);\r\n                item.getParent().setClip({\r\n                    type: 'rect',\r\n                    attrs: {\r\n                        x: currentPoint.x,\r\n                        y: currentPoint.y,\r\n                        width: pageWidth,\r\n                        height: itemHeight,\r\n                    },\r\n                });\r\n                currentPoint.y += itemHeight + itemMarginBottom;\r\n            });\r\n            this.totalPagesCnt = pages;\r\n            this.moveElementTo(navigation, {\r\n                x: startX + maxItemWidth / 2 - navigationBBox.width / 2 - navigationBBox.minX,\r\n                y: maxHeight - navigationBBox.height - navigationBBox.minY,\r\n            });\r\n        }\r\n        if (this.pageHeight && this.pageWidth) {\r\n            // 为了使固定的 clip 生效，clip 设置在 itemContainerGroup 上，itemGroup 需要在翻页时会设置 matrix\r\n            itemGroup.getParent().setClip({\r\n                type: 'rect',\r\n                attrs: {\r\n                    x: this.startX,\r\n                    y: this.startY,\r\n                    width: this.pageWidth,\r\n                    height: this.pageHeight,\r\n                },\r\n            });\r\n        }\r\n        // 重新计算 totalPagesCnt\r\n        if (layout === 'horizontal' && this.get('maxRow')) {\r\n            this.totalPagesCnt = Math.ceil(pages / this.get('maxRow'));\r\n        }\r\n        else {\r\n            this.totalPagesCnt = pages;\r\n        }\r\n        if (this.currentPageIndex > this.totalPagesCnt) {\r\n            this.currentPageIndex = 1;\r\n        }\r\n        this.updateNavigation(navigation);\r\n        // update initial matrix\r\n        itemGroup.attr('matrix', this.getCurrentNavigationMatrix());\r\n    };\r\n    /**\r\n     * 绘制分页器\r\n     */\r\n    Category.prototype.drawNavigation = function (group, layout, text, styleCfg) {\r\n        var currentPoint = { x: 0, y: 0 };\r\n        var subGroup = this.addGroup(group, {\r\n            id: this.getElementId('navigation-group'),\r\n            name: 'legend-navigation',\r\n        });\r\n        var _a = get(styleCfg.marker, 'style', {}), _b = _a.size, size = _b === void 0 ? 12 : _b, arrowStyle = __rest(_a, [\"size\"]);\r\n        var leftArrow = this.drawArrow(subGroup, currentPoint, 'navigation-arrow-left', layout === 'horizontal' ? 'up' : 'left', size, arrowStyle);\r\n        leftArrow.on('click', this.onNavigationBack);\r\n        var leftArrowBBox = leftArrow.getBBox();\r\n        currentPoint.x += leftArrowBBox.width + 2;\r\n        var textShape = this.addShape(subGroup, {\r\n            type: 'text',\r\n            id: this.getElementId('navigation-text'),\r\n            name: 'navigation-text',\r\n            attrs: __assign({ x: currentPoint.x, y: currentPoint.y + size / 2, text: text, textBaseline: 'middle' }, get(styleCfg.text, 'style')),\r\n        });\r\n        var textBBox = textShape.getBBox();\r\n        currentPoint.x += textBBox.width + 2;\r\n        var rightArrow = this.drawArrow(subGroup, currentPoint, 'navigation-arrow-right', layout === 'horizontal' ? 'down' : 'right', size, arrowStyle);\r\n        rightArrow.on('click', this.onNavigationAfter);\r\n        return subGroup;\r\n    };\r\n    Category.prototype.updateNavigation = function (navigation) {\r\n        var pageNavigator = deepMix({}, DEFAULT_PAGE_NAVIGATOR, this.get('pageNavigator'));\r\n        var _a = pageNavigator.marker.style, fill = _a.fill, opacity = _a.opacity, inactiveFill = _a.inactiveFill, inactiveOpacity = _a.inactiveOpacity;\r\n        var text = this.currentPageIndex + \"/\" + this.totalPagesCnt;\r\n        var textShape = navigation ? navigation.getChildren()[1] : this.getElementByLocalId('navigation-text');\r\n        var leftArrow = navigation\r\n            ? navigation.findById(this.getElementId('navigation-arrow-left'))\r\n            : this.getElementByLocalId('navigation-arrow-left');\r\n        var rightArrow = navigation\r\n            ? navigation.findById(this.getElementId('navigation-arrow-right'))\r\n            : this.getElementByLocalId('navigation-arrow-right');\r\n        var origBBox = textShape.getBBox();\r\n        textShape.attr('text', text);\r\n        var newBBox = textShape.getBBox();\r\n        textShape.attr('x', textShape.attr('x') - (newBBox.width - origBBox.width) / 2);\r\n        // 更新 left-arrow marker\r\n        leftArrow.attr('opacity', this.currentPageIndex === 1 ? inactiveOpacity : opacity);\r\n        leftArrow.attr('fill', this.currentPageIndex === 1 ? inactiveFill : fill);\r\n        leftArrow.attr('cursor', this.currentPageIndex === 1 ? 'not-allowed' : 'pointer');\r\n        // 更新 right-arrow marker\r\n        rightArrow.attr('opacity', this.currentPageIndex === this.totalPagesCnt ? inactiveOpacity : opacity);\r\n        rightArrow.attr('fill', this.currentPageIndex === this.totalPagesCnt ? inactiveFill : fill);\r\n        rightArrow.attr('cursor', this.currentPageIndex === this.totalPagesCnt ? 'not-allowed' : 'pointer');\r\n    };\r\n    Category.prototype.drawArrow = function (group, currentPoint, name, direction, size, style) {\r\n        var x = currentPoint.x, y = currentPoint.y;\r\n        var rotateMap = {\r\n            right: (90 * Math.PI) / 180,\r\n            left: ((360 - 90) * Math.PI) / 180,\r\n            up: 0,\r\n            down: (180 * Math.PI) / 180,\r\n        };\r\n        var shape = this.addShape(group, {\r\n            type: 'path',\r\n            id: this.getElementId(name),\r\n            name: name,\r\n            attrs: __assign({ path: [['M', x + size / 2, y], ['L', x, y + size], ['L', x + size, y + size], ['Z']], cursor: 'pointer' }, style),\r\n        });\r\n        shape.attr('matrix', getMatrixByAngle({ x: x + size / 2, y: y + size / 2 }, rotateMap[direction]));\r\n        return shape;\r\n    };\r\n    Category.prototype.getCurrentNavigationMatrix = function () {\r\n        var _a = this, currentPageIndex = _a.currentPageIndex, pageWidth = _a.pageWidth, pageHeight = _a.pageHeight;\r\n        var layout = this.get('layout');\r\n        var translate = layout === 'horizontal'\r\n            ? {\r\n                x: 0,\r\n                y: pageHeight * (1 - currentPageIndex),\r\n            }\r\n            : {\r\n                x: pageWidth * (1 - currentPageIndex),\r\n                y: 0,\r\n            };\r\n        return getMatrixByTranslate(translate);\r\n    };\r\n    // 附加状态对应的样式\r\n    Category.prototype.applyItemStates = function (item, subGroup) {\r\n        var states = this.getItemStates(item);\r\n        var hasStates = states.length > 0;\r\n        if (hasStates) {\r\n            var children = subGroup.getChildren();\r\n            var itemStates_1 = this.get('itemStates');\r\n            each(children, function (element) {\r\n                var name = element.get('name');\r\n                var elName = name.split('-')[2]; // marker, name, value\r\n                var statesStyle = getStatesStyle(item, elName, itemStates_1);\r\n                if (statesStyle) {\r\n                    element.attr(statesStyle);\r\n                    if (elName === 'marker' && !(element.get('isStroke') && element.get('isFill'))) {\r\n                        // 如果 marker 是单填充或者单描边的话，就不要额外添加 stroke 或这 fill 属性，否则会影响 unchecked 后的显示\r\n                        if (element.get('isStroke')) {\r\n                            element.attr('fill', null);\r\n                        }\r\n                        if (element.get('isFill')) {\r\n                            element.attr('stroke', null);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    // 获取 itemWidth 的最终设置\r\n    Category.prototype.getLimitItemWidth = function () {\r\n        var itemWidth = this.get('itemWidth');\r\n        var maxItemWidth = this.get('maxItemWidth');\r\n        if (maxItemWidth) {\r\n            // 设置了最大宽度\r\n            if (itemWidth) {\r\n                maxItemWidth = itemWidth <= maxItemWidth ? itemWidth : maxItemWidth;\r\n            }\r\n        }\r\n        else if (itemWidth) {\r\n            maxItemWidth = itemWidth;\r\n        }\r\n        return maxItemWidth;\r\n    };\r\n    return Category;\r\n}(LegendBase));\r\nexport default Category;\r\n//# sourceMappingURL=category.js.map"]},"metadata":{},"sourceType":"module"}