{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { isNumber } from '@antv/util';\nimport Base from '../base';\n/**\r\n * identity scale原则上是定义域和值域一致，scale/invert方法也是一致的\r\n * 参考R的实现：https://github.com/r-lib/scales/blob/master/R/pal-identity.r\r\n * 参考d3的实现（做了下转型）：https://github.com/d3/d3-scale/blob/master/src/identity.js\r\n */\n\nvar Identity =\n/** @class */\nfunction (_super) {\n  __extends(Identity, _super);\n\n  function Identity() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'identity';\n    _this.isIdentity = true;\n    return _this;\n  }\n\n  Identity.prototype.calculateTicks = function () {\n    return this.values;\n  };\n\n  Identity.prototype.scale = function (value) {\n    // 如果传入的值不等于 identity 的值，则直接返回，用于一维图时的 dodge\n    if (this.values[0] !== value && isNumber(value)) {\n      return value;\n    }\n\n    return this.range[0];\n  };\n\n  Identity.prototype.invert = function (value) {\n    var range = this.range;\n\n    if (value < range[0] || value > range[1]) {\n      return NaN;\n    }\n\n    return this.values[0];\n  };\n\n  return Identity;\n}(Base);\n\nexport default Identity;","map":{"version":3,"sources":["../../src/identity/index.ts"],"names":[],"mappings":";AAAA,SAAc,QAAd,QAA8B,YAA9B;AACA,OAAO,IAAP,MAAiB,SAAjB;AAGA;;;;AAIG;;AACH,IAAA,QAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAsC,EAAA,SAAA,CAAA,QAAA,EAAA,MAAA,CAAA;;AAAtC,WAAA,QAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AACkB,IAAA,KAAA,CAAA,IAAA,GAAkB,UAAlB;AACA,IAAA,KAAA,CAAA,UAAA,GAAsB,IAAtB;;AAqBjB;;AAnBQ,EAAA,QAAA,CAAA,SAAA,CAAA,cAAA,GAAP,YAAA;AACE,WAAO,KAAK,MAAZ;AACD,GAFM;;AAIA,EAAA,QAAA,CAAA,SAAA,CAAA,KAAA,GAAP,UAAa,KAAb,EAAuB;AACrB;AACA,QAAI,KAAK,MAAL,CAAY,CAAZ,MAAmB,KAAnB,IAA4B,QAAQ,CAAC,KAAD,CAAxC,EAAiD;AAC/C,aAAO,KAAP;AACD;;AACD,WAAO,KAAK,KAAL,CAAW,CAAX,CAAP;AACD,GANM;;AAQA,EAAA,QAAA,CAAA,SAAA,CAAA,MAAA,GAAP,UAAc,KAAd,EAA4B;AAC1B,QAAM,KAAK,GAAG,KAAK,KAAnB;;AACA,QAAI,KAAK,GAAG,KAAK,CAAC,CAAD,CAAb,IAAoB,KAAK,GAAG,KAAK,CAAC,CAAD,CAArC,EAA0C;AACxC,aAAO,GAAP;AACD;;AACD,WAAO,KAAK,MAAL,CAAY,CAAZ,CAAP;AACD,GANM;;AAOT,SAAA,QAAA;AAAC,CAvBD,CAAsC,IAAtC,CAAA","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\r\nimport { isNumber } from '@antv/util';\r\nimport Base from '../base';\r\n/**\r\n * identity scale原则上是定义域和值域一致，scale/invert方法也是一致的\r\n * 参考R的实现：https://github.com/r-lib/scales/blob/master/R/pal-identity.r\r\n * 参考d3的实现（做了下转型）：https://github.com/d3/d3-scale/blob/master/src/identity.js\r\n */\r\nvar Identity = /** @class */ (function (_super) {\r\n    __extends(Identity, _super);\r\n    function Identity() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.type = 'identity';\r\n        _this.isIdentity = true;\r\n        return _this;\r\n    }\r\n    Identity.prototype.calculateTicks = function () {\r\n        return this.values;\r\n    };\r\n    Identity.prototype.scale = function (value) {\r\n        // 如果传入的值不等于 identity 的值，则直接返回，用于一维图时的 dodge\r\n        if (this.values[0] !== value && isNumber(value)) {\r\n            return value;\r\n        }\r\n        return this.range[0];\r\n    };\r\n    Identity.prototype.invert = function (value) {\r\n        var range = this.range;\r\n        if (value < range[0] || value > range[1]) {\r\n            return NaN;\r\n        }\r\n        return this.values[0];\r\n    };\r\n    return Identity;\r\n}(Base));\r\nexport default Identity;\r\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}