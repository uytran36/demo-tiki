{"ast":null,"code":"/**\r\n * @fileoverview shadow\r\n * @author dengfuping_develop@163.com\r\n */\nimport { each, uniqueId } from '@antv/util';\nimport { createSVGElement } from '../util/dom';\nvar ATTR_MAP = {\n  shadowColor: 'color',\n  shadowOpacity: 'opacity',\n  shadowBlur: 'blur',\n  shadowOffsetX: 'dx',\n  shadowOffsetY: 'dy'\n};\nvar SHADOW_DIMENSION = {\n  x: '-40%',\n  y: '-40%',\n  width: '200%',\n  height: '200%'\n};\n\nvar Shadow =\n/** @class */\nfunction () {\n  function Shadow(cfg) {\n    this.type = 'filter';\n    this.cfg = {};\n    this.type = 'filter';\n    var el = createSVGElement('filter'); // expand the filter region to fill in shadows\n\n    each(SHADOW_DIMENSION, function (v, k) {\n      el.setAttribute(k, v);\n    });\n    this.el = el;\n    this.id = uniqueId('filter_');\n    this.el.id = this.id;\n    this.cfg = cfg;\n\n    this._parseShadow(cfg, el);\n\n    return this;\n  }\n\n  Shadow.prototype.match = function (type, cfg) {\n    if (this.type !== type) {\n      return false;\n    }\n\n    var flag = true;\n    var config = this.cfg;\n    each(Object.keys(config), function (attr) {\n      if (config[attr] !== cfg[attr]) {\n        flag = false;\n        return false;\n      }\n    });\n    return flag;\n  };\n\n  Shadow.prototype.update = function (name, value) {\n    var config = this.cfg;\n    config[ATTR_MAP[name]] = value;\n\n    this._parseShadow(config, this.el);\n\n    return this;\n  };\n\n  Shadow.prototype._parseShadow = function (config, el) {\n    var child = \"<feDropShadow\\n      dx=\\\"\" + (config.dx || 0) + \"\\\"\\n      dy=\\\"\" + (config.dy || 0) + \"\\\"\\n      stdDeviation=\\\"\" + (config.blur ? config.blur / 10 : 0) + \"\\\"\\n      flood-color=\\\"\" + (config.color ? config.color : '#000') + \"\\\"\\n      flood-opacity=\\\"\" + (config.opacity ? config.opacity : 1) + \"\\\"\\n      />\";\n    el.innerHTML = child;\n  };\n\n  return Shadow;\n}();\n\nexport default Shadow;","map":{"version":3,"sources":["../../src/defs/shadow.ts"],"names":[],"mappings":"AAAA;;;AAGG;AAEH,SAAS,IAAT,EAAe,QAAf,QAA+B,YAA/B;AACA,SAAS,gBAAT,QAAiC,aAAjC;AAEA,IAAM,QAAQ,GAAG;AACf,EAAA,WAAW,EAAE,OADE;AAEf,EAAA,aAAa,EAAE,SAFA;AAGf,EAAA,UAAU,EAAE,MAHG;AAIf,EAAA,aAAa,EAAE,IAJA;AAKf,EAAA,aAAa,EAAE;AALA,CAAjB;AAQA,IAAM,gBAAgB,GAAG;AACvB,EAAA,CAAC,EAAE,MADoB;AAEvB,EAAA,CAAC,EAAE,MAFoB;AAGvB,EAAA,KAAK,EAAE,MAHgB;AAIvB,EAAA,MAAM,EAAE;AAJe,CAAzB;;AAOA,IAAA,MAAA;AAAA;AAAA,YAAA;AAQE,WAAA,MAAA,CAAY,GAAZ,EAAe;AAPf,SAAA,IAAA,GAAe,QAAf;AAGA,SAAA,GAAA,GAEI,EAFJ;AAKE,SAAK,IAAL,GAAY,QAAZ;AACA,QAAM,EAAE,GAAG,gBAAgB,CAAC,QAAD,CAA3B,CAFa,CAGb;;AACA,IAAA,IAAI,CAAC,gBAAD,EAAmB,UAAC,CAAD,EAAI,CAAJ,EAAK;AAC1B,MAAA,EAAE,CAAC,YAAH,CAAgB,CAAhB,EAAmB,CAAnB;AACD,KAFG,CAAJ;AAGA,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,EAAL,GAAU,QAAQ,CAAC,SAAD,CAAlB;AACA,SAAK,EAAL,CAAQ,EAAR,GAAa,KAAK,EAAlB;AACA,SAAK,GAAL,GAAW,GAAX;;AACA,SAAK,YAAL,CAAkB,GAAlB,EAAuB,EAAvB;;AACA,WAAO,IAAP;AACD;;AAED,EAAA,MAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,IAAN,EAAY,GAAZ,EAAe;AACb,QAAI,KAAK,IAAL,KAAc,IAAlB,EAAwB;AACtB,aAAO,KAAP;AACD;;AACD,QAAI,IAAI,GAAG,IAAX;AACA,QAAM,MAAM,GAAG,KAAK,GAApB;AACA,IAAA,IAAI,CAAC,MAAM,CAAC,IAAP,CAAY,MAAZ,CAAD,EAAsB,UAAC,IAAD,EAAK;AAC7B,UAAI,MAAM,CAAC,IAAD,CAAN,KAAiB,GAAG,CAAC,IAAD,CAAxB,EAAgC;AAC9B,QAAA,IAAI,GAAG,KAAP;AACA,eAAO,KAAP;AACD;AACF,KALG,CAAJ;AAMA,WAAO,IAAP;AACD,GAbD;;AAeA,EAAA,MAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,IAAP,EAAa,KAAb,EAAkB;AAChB,QAAM,MAAM,GAAG,KAAK,GAApB;AACA,IAAA,MAAM,CAAC,QAAQ,CAAC,IAAD,CAAT,CAAN,GAAyB,KAAzB;;AACA,SAAK,YAAL,CAAkB,MAAlB,EAA0B,KAAK,EAA/B;;AACA,WAAO,IAAP;AACD,GALD;;AAOA,EAAA,MAAA,CAAA,SAAA,CAAA,YAAA,GAAA,UAAa,MAAb,EAAqB,EAArB,EAAuB;AACrB,QAAM,KAAK,GAAG,gCACN,MAAM,CAAC,EAAP,IAAa,CADP,IACQ,iBADR,IAEN,MAAM,CAAC,EAAP,IAAa,CAFP,IAEQ,2BAFR,IAGI,MAAM,CAAC,IAAP,GAAc,MAAM,CAAC,IAAP,GAAc,EAA5B,GAAiC,CAHrC,IAGsC,0BAHtC,IAIG,MAAM,CAAC,KAAP,GAAe,MAAM,CAAC,KAAtB,GAA8B,MAJjC,IAIuC,4BAJvC,IAKK,MAAM,CAAC,OAAP,GAAiB,MAAM,CAAC,OAAxB,GAAkC,CALvC,IAKwC,cALtD;AAOA,IAAA,EAAE,CAAC,SAAH,GAAe,KAAf;AACD,GATD;;AAUF,SAAA,MAAA;AAAC,CAvDD,EAAA;;AAyDA,eAAe,MAAf","sourceRoot":"","sourcesContent":["/**\r\n * @fileoverview shadow\r\n * @author dengfuping_develop@163.com\r\n */\r\nimport { each, uniqueId } from '@antv/util';\r\nimport { createSVGElement } from '../util/dom';\r\nvar ATTR_MAP = {\r\n    shadowColor: 'color',\r\n    shadowOpacity: 'opacity',\r\n    shadowBlur: 'blur',\r\n    shadowOffsetX: 'dx',\r\n    shadowOffsetY: 'dy',\r\n};\r\nvar SHADOW_DIMENSION = {\r\n    x: '-40%',\r\n    y: '-40%',\r\n    width: '200%',\r\n    height: '200%',\r\n};\r\nvar Shadow = /** @class */ (function () {\r\n    function Shadow(cfg) {\r\n        this.type = 'filter';\r\n        this.cfg = {};\r\n        this.type = 'filter';\r\n        var el = createSVGElement('filter');\r\n        // expand the filter region to fill in shadows\r\n        each(SHADOW_DIMENSION, function (v, k) {\r\n            el.setAttribute(k, v);\r\n        });\r\n        this.el = el;\r\n        this.id = uniqueId('filter_');\r\n        this.el.id = this.id;\r\n        this.cfg = cfg;\r\n        this._parseShadow(cfg, el);\r\n        return this;\r\n    }\r\n    Shadow.prototype.match = function (type, cfg) {\r\n        if (this.type !== type) {\r\n            return false;\r\n        }\r\n        var flag = true;\r\n        var config = this.cfg;\r\n        each(Object.keys(config), function (attr) {\r\n            if (config[attr] !== cfg[attr]) {\r\n                flag = false;\r\n                return false;\r\n            }\r\n        });\r\n        return flag;\r\n    };\r\n    Shadow.prototype.update = function (name, value) {\r\n        var config = this.cfg;\r\n        config[ATTR_MAP[name]] = value;\r\n        this._parseShadow(config, this.el);\r\n        return this;\r\n    };\r\n    Shadow.prototype._parseShadow = function (config, el) {\r\n        var child = \"<feDropShadow\\n      dx=\\\"\" + (config.dx || 0) + \"\\\"\\n      dy=\\\"\" + (config.dy || 0) + \"\\\"\\n      stdDeviation=\\\"\" + (config.blur ? config.blur / 10 : 0) + \"\\\"\\n      flood-color=\\\"\" + (config.color ? config.color : '#000') + \"\\\"\\n      flood-opacity=\\\"\" + (config.opacity ? config.opacity : 1) + \"\\\"\\n      />\";\r\n        el.innerHTML = child;\r\n    };\r\n    return Shadow;\r\n}());\r\nexport default Shadow;\r\n//# sourceMappingURL=shadow.js.map"]},"metadata":{},"sourceType":"module"}