{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { addEventListener } from '@antv/dom-util';\nimport { clamp, deepMix, get, noop } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nvar DEFAULT_STYLE = {\n  trackColor: 'rgba(0,0,0,0)',\n  thumbColor: 'rgba(0,0,0,0.15)',\n  size: 8,\n  lineCap: 'round'\n};\nexport var DEFAULT_THEME = {\n  // 默认样式\n  default: DEFAULT_STYLE,\n  // 鼠标 hover 的样式\n  hover: {\n    thumbColor: 'rgba(0,0,0,0.2)'\n  }\n};\n\nvar Scrollbar =\n/** @class */\nfunction (_super) {\n  __extends(Scrollbar, _super);\n\n  function Scrollbar() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.clearEvents = noop;\n\n    _this.onStartEvent = function (isMobile) {\n      return function (e) {\n        _this.isMobile = isMobile;\n        e.originalEvent.preventDefault();\n        var clientX = isMobile ? get(e.originalEvent, 'touches.0.clientX') : e.clientX;\n        var clientY = isMobile ? get(e.originalEvent, 'touches.0.clientY') : e.clientY; // 将开始的点记录下来\n\n        _this.startPos = _this.cfg.isHorizontal ? clientX : clientY;\n\n        _this.bindLaterEvent();\n      };\n    };\n\n    _this.bindLaterEvent = function () {\n      var containerDOM = _this.getContainerDOM();\n\n      var events = [];\n\n      if (_this.isMobile) {\n        events = [addEventListener(containerDOM, 'touchmove', _this.onMouseMove), addEventListener(containerDOM, 'touchend', _this.onMouseUp), addEventListener(containerDOM, 'touchcancel', _this.onMouseUp)];\n      } else {\n        events = [addEventListener(containerDOM, 'mousemove', _this.onMouseMove), addEventListener(containerDOM, 'mouseup', _this.onMouseUp), // 为了保证划出 canvas containerDom 时还没触发 mouseup\n        addEventListener(containerDOM, 'mouseleave', _this.onMouseUp)];\n      }\n\n      _this.clearEvents = function () {\n        events.forEach(function (e) {\n          e.remove();\n        });\n      };\n    }; // 拖拽滑块的事件回调\n    // 这里是 dom 原生事件，绑定在 dom 元素上的\n\n\n    _this.onMouseMove = function (e) {\n      var _a = _this.cfg,\n          isHorizontal = _a.isHorizontal,\n          thumbOffset = _a.thumbOffset;\n      e.preventDefault();\n      var clientX = _this.isMobile ? get(e, 'touches.0.clientX') : e.clientX;\n      var clientY = _this.isMobile ? get(e, 'touches.0.clientY') : e.clientY; // 鼠标松开的位置\n\n      var endPos = isHorizontal ? clientX : clientY; // 滑块需要移动的距离, 由于这里是对滑块监听，所以移动的距离就是 diffDis, 如果监听对象是 container dom，则需要算比例\n\n      var diff = endPos - _this.startPos; // 更新 _startPos\n\n      _this.startPos = endPos;\n\n      _this.updateThumbOffset(thumbOffset + diff);\n    };\n\n    _this.onMouseUp = function (e) {\n      e.preventDefault();\n\n      _this.clearEvents();\n    }; // 点击滑道的事件回调,移动滑块位置\n\n\n    _this.onTrackClick = function (e) {\n      var _a = _this.cfg,\n          isHorizontal = _a.isHorizontal,\n          x = _a.x,\n          y = _a.y,\n          thumbLen = _a.thumbLen;\n\n      var containerDOM = _this.getContainerDOM();\n\n      var rect = containerDOM.getBoundingClientRect();\n      var clientX = e.clientX,\n          clientY = e.clientY;\n      var offset = isHorizontal ? clientX - rect.left - x - thumbLen / 2 : clientY - rect.top - y - thumbLen / 2;\n\n      var newOffset = _this.validateRange(offset);\n\n      _this.updateThumbOffset(newOffset);\n    };\n\n    _this.onThumbMouseOver = function () {\n      var thumbColor = _this.cfg.theme.hover.thumbColor;\n\n      _this.getElementByLocalId('thumb').attr('stroke', thumbColor);\n\n      _this.draw();\n    };\n\n    _this.onThumbMouseOut = function () {\n      var thumbColor = _this.cfg.theme.default.thumbColor;\n\n      _this.getElementByLocalId('thumb').attr('stroke', thumbColor);\n\n      _this.draw();\n    };\n\n    return _this;\n  }\n\n  Scrollbar.prototype.setRange = function (min, max) {\n    this.set('minLimit', min);\n    this.set('maxLimit', max);\n    var curValue = this.getValue();\n    var newValue = clamp(curValue, min, max);\n\n    if (curValue !== newValue && !this.get('isInit')) {\n      this.setValue(newValue);\n    }\n  };\n\n  Scrollbar.prototype.getRange = function () {\n    var min = this.get('minLimit') || 0;\n    var max = this.get('maxLimit') || 1;\n    return {\n      min: min,\n      max: max\n    };\n  };\n\n  Scrollbar.prototype.setValue = function (value) {\n    var range = this.getRange();\n    var originalValue = this.getValue();\n    this.update({\n      thumbOffset: (this.get('trackLen') - this.get('thumbLen')) * clamp(value, range.min, range.max)\n    });\n    this.delegateEmit('valuechange', {\n      originalValue: originalValue,\n      value: this.getValue()\n    });\n  };\n\n  Scrollbar.prototype.getValue = function () {\n    return clamp(this.get('thumbOffset') / (this.get('trackLen') - this.get('thumbLen')), 0, 1);\n  };\n\n  Scrollbar.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n\n    return __assign(__assign({}, cfg), {\n      name: 'scrollbar',\n      isHorizontal: true,\n      minThumbLen: 20,\n      thumbOffset: 0,\n      theme: DEFAULT_THEME\n    });\n  };\n\n  Scrollbar.prototype.renderInner = function (group) {\n    this.renderTrackShape(group);\n    this.renderThumbShape(group);\n  };\n\n  Scrollbar.prototype.applyOffset = function () {\n    this.moveElementTo(this.get('group'), {\n      x: this.get('x'),\n      y: this.get('y')\n    });\n  };\n\n  Scrollbar.prototype.initEvent = function () {\n    this.bindEvents();\n  }; // 创建滑道的 shape\n\n\n  Scrollbar.prototype.renderTrackShape = function (group) {\n    var _a = this.cfg,\n        trackLen = _a.trackLen,\n        _b = _a.theme,\n        theme = _b === void 0 ? {\n      default: {}\n    } : _b;\n    var _c = deepMix({}, DEFAULT_THEME, theme).default,\n        lineCap = _c.lineCap,\n        trackColor = _c.trackColor,\n        themeSize = _c.size;\n    var size = get(this.cfg, 'size', themeSize);\n    var attrs = this.get('isHorizontal') ? {\n      x1: 0 + size / 2,\n      y1: size / 2,\n      x2: trackLen - size / 2,\n      y2: size / 2,\n      lineWidth: size,\n      stroke: trackColor,\n      lineCap: lineCap\n    } : {\n      x1: size / 2,\n      y1: 0 + size / 2,\n      x2: size / 2,\n      y2: trackLen - size / 2,\n      lineWidth: size,\n      stroke: trackColor,\n      lineCap: lineCap\n    };\n    return this.addShape(group, {\n      id: this.getElementId('track'),\n      name: 'track',\n      type: 'line',\n      attrs: attrs\n    });\n  }; // 创建滑块的 shape\n\n\n  Scrollbar.prototype.renderThumbShape = function (group) {\n    var _a = this.cfg,\n        thumbOffset = _a.thumbOffset,\n        thumbLen = _a.thumbLen,\n        theme = _a.theme;\n    var _b = deepMix({}, DEFAULT_THEME, theme).default,\n        themeSize = _b.size,\n        lineCap = _b.lineCap,\n        thumbColor = _b.thumbColor;\n    var size = get(this.cfg, 'size', themeSize);\n    var attrs = this.get('isHorizontal') ? {\n      x1: thumbOffset + size / 2,\n      y1: size / 2,\n      x2: thumbOffset + thumbLen - size / 2,\n      y2: size / 2,\n      lineWidth: size,\n      stroke: thumbColor,\n      lineCap: lineCap,\n      cursor: 'default'\n    } : {\n      x1: size / 2,\n      y1: thumbOffset + size / 2,\n      x2: size / 2,\n      y2: thumbOffset + thumbLen - size / 2,\n      lineWidth: size,\n      stroke: thumbColor,\n      lineCap: lineCap,\n      cursor: 'default'\n    };\n    return this.addShape(group, {\n      id: this.getElementId('thumb'),\n      name: 'thumb',\n      type: 'line',\n      attrs: attrs\n    });\n  };\n\n  Scrollbar.prototype.bindEvents = function () {\n    var group = this.get('group');\n    group.on('mousedown', this.onStartEvent(false));\n    group.on('mouseup', this.onMouseUp);\n    group.on('touchstart', this.onStartEvent(true));\n    group.on('touchend', this.onMouseUp);\n    var trackShape = group.findById(this.getElementId('track'));\n    trackShape.on('click', this.onTrackClick);\n    var thumbShape = group.findById(this.getElementId('thumb'));\n    thumbShape.on('mouseover', this.onThumbMouseOver);\n    thumbShape.on('mouseout', this.onThumbMouseOut);\n  };\n\n  Scrollbar.prototype.getContainerDOM = function () {\n    var container = this.get('container');\n    var canvas = container && container.get('canvas');\n    return canvas && canvas.get('container');\n  };\n\n  Scrollbar.prototype.validateRange = function (offset) {\n    var _a = this.cfg,\n        thumbLen = _a.thumbLen,\n        trackLen = _a.trackLen;\n    var newOffset = offset;\n\n    if (offset + thumbLen > trackLen) {\n      newOffset = trackLen - thumbLen;\n    } else if (offset + thumbLen < thumbLen) {\n      newOffset = 0;\n    }\n\n    return newOffset;\n  };\n\n  Scrollbar.prototype.draw = function () {\n    var container = this.get('container');\n    var canvas = container && container.get('canvas');\n\n    if (canvas) {\n      canvas.draw();\n    }\n  };\n\n  Scrollbar.prototype.updateThumbOffset = function (offset) {\n    var _a = this.cfg,\n        thumbOffset = _a.thumbOffset,\n        isHorizontal = _a.isHorizontal,\n        thumbLen = _a.thumbLen,\n        size = _a.size;\n    var newOffset = this.validateRange(offset);\n\n    if (newOffset === thumbOffset) {\n      // 如果更新后的 offset 与原值相同，则不改变\n      return;\n    }\n\n    var thumbShape = this.getElementByLocalId('thumb');\n\n    if (isHorizontal) {\n      thumbShape.attr({\n        x1: newOffset + size / 2,\n        x2: newOffset + thumbLen - size / 2\n      });\n    } else {\n      thumbShape.attr({\n        y1: newOffset + size / 2,\n        y2: newOffset + thumbLen - size / 2\n      });\n    }\n\n    this.emitOffsetChange(newOffset);\n  };\n\n  Scrollbar.prototype.emitOffsetChange = function (offset) {\n    var _a = this.cfg,\n        originalValue = _a.thumbOffset,\n        trackLen = _a.trackLen,\n        thumbLen = _a.thumbLen;\n    this.cfg.thumbOffset = offset; // 发送事件\n\n    this.emit('scrollchange', {\n      thumbOffset: offset,\n      ratio: clamp(offset / (trackLen - thumbLen), 0, 1)\n    });\n    this.delegateEmit('valuechange', {\n      originalValue: originalValue,\n      value: offset\n    });\n  };\n\n  return Scrollbar;\n}(GroupComponent);\n\nexport { Scrollbar };","map":{"version":3,"sources":["../../src/scrollbar/scrollbar.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends } from \"tslib\";\r\nimport { addEventListener } from '@antv/dom-util';\r\nimport { clamp, deepMix, get, noop } from '@antv/util';\r\nimport GroupComponent from '../abstract/group-component';\r\nvar DEFAULT_STYLE = {\r\n    trackColor: 'rgba(0,0,0,0)',\r\n    thumbColor: 'rgba(0,0,0,0.15)',\r\n    size: 8,\r\n    lineCap: 'round',\r\n};\r\nexport var DEFAULT_THEME = {\r\n    // 默认样式\r\n    default: DEFAULT_STYLE,\r\n    // 鼠标 hover 的样式\r\n    hover: {\r\n        thumbColor: 'rgba(0,0,0,0.2)',\r\n    },\r\n};\r\nvar Scrollbar = /** @class */ (function (_super) {\r\n    __extends(Scrollbar, _super);\r\n    function Scrollbar() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.clearEvents = noop;\r\n        _this.onStartEvent = function (isMobile) { return function (e) {\r\n            _this.isMobile = isMobile;\r\n            e.originalEvent.preventDefault();\r\n            var clientX = isMobile ? get(e.originalEvent, 'touches.0.clientX') : e.clientX;\r\n            var clientY = isMobile ? get(e.originalEvent, 'touches.0.clientY') : e.clientY;\r\n            // 将开始的点记录下来\r\n            _this.startPos = _this.cfg.isHorizontal ? clientX : clientY;\r\n            _this.bindLaterEvent();\r\n        }; };\r\n        _this.bindLaterEvent = function () {\r\n            var containerDOM = _this.getContainerDOM();\r\n            var events = [];\r\n            if (_this.isMobile) {\r\n                events = [\r\n                    addEventListener(containerDOM, 'touchmove', _this.onMouseMove),\r\n                    addEventListener(containerDOM, 'touchend', _this.onMouseUp),\r\n                    addEventListener(containerDOM, 'touchcancel', _this.onMouseUp),\r\n                ];\r\n            }\r\n            else {\r\n                events = [\r\n                    addEventListener(containerDOM, 'mousemove', _this.onMouseMove),\r\n                    addEventListener(containerDOM, 'mouseup', _this.onMouseUp),\r\n                    // 为了保证划出 canvas containerDom 时还没触发 mouseup\r\n                    addEventListener(containerDOM, 'mouseleave', _this.onMouseUp),\r\n                ];\r\n            }\r\n            _this.clearEvents = function () {\r\n                events.forEach(function (e) {\r\n                    e.remove();\r\n                });\r\n            };\r\n        };\r\n        // 拖拽滑块的事件回调\r\n        // 这里是 dom 原生事件，绑定在 dom 元素上的\r\n        _this.onMouseMove = function (e) {\r\n            var _a = _this.cfg, isHorizontal = _a.isHorizontal, thumbOffset = _a.thumbOffset;\r\n            e.preventDefault();\r\n            var clientX = _this.isMobile ? get(e, 'touches.0.clientX') : e.clientX;\r\n            var clientY = _this.isMobile ? get(e, 'touches.0.clientY') : e.clientY;\r\n            // 鼠标松开的位置\r\n            var endPos = isHorizontal ? clientX : clientY;\r\n            // 滑块需要移动的距离, 由于这里是对滑块监听，所以移动的距离就是 diffDis, 如果监听对象是 container dom，则需要算比例\r\n            var diff = endPos - _this.startPos;\r\n            // 更新 _startPos\r\n            _this.startPos = endPos;\r\n            _this.updateThumbOffset(thumbOffset + diff);\r\n        };\r\n        _this.onMouseUp = function (e) {\r\n            e.preventDefault();\r\n            _this.clearEvents();\r\n        };\r\n        // 点击滑道的事件回调,移动滑块位置\r\n        _this.onTrackClick = function (e) {\r\n            var _a = _this.cfg, isHorizontal = _a.isHorizontal, x = _a.x, y = _a.y, thumbLen = _a.thumbLen;\r\n            var containerDOM = _this.getContainerDOM();\r\n            var rect = containerDOM.getBoundingClientRect();\r\n            var clientX = e.clientX, clientY = e.clientY;\r\n            var offset = isHorizontal ? clientX - rect.left - x - thumbLen / 2 : clientY - rect.top - y - thumbLen / 2;\r\n            var newOffset = _this.validateRange(offset);\r\n            _this.updateThumbOffset(newOffset);\r\n        };\r\n        _this.onThumbMouseOver = function () {\r\n            var thumbColor = _this.cfg.theme.hover.thumbColor;\r\n            _this.getElementByLocalId('thumb').attr('stroke', thumbColor);\r\n            _this.draw();\r\n        };\r\n        _this.onThumbMouseOut = function () {\r\n            var thumbColor = _this.cfg.theme.default.thumbColor;\r\n            _this.getElementByLocalId('thumb').attr('stroke', thumbColor);\r\n            _this.draw();\r\n        };\r\n        return _this;\r\n    }\r\n    Scrollbar.prototype.setRange = function (min, max) {\r\n        this.set('minLimit', min);\r\n        this.set('maxLimit', max);\r\n        var curValue = this.getValue();\r\n        var newValue = clamp(curValue, min, max);\r\n        if (curValue !== newValue && !this.get('isInit')) {\r\n            this.setValue(newValue);\r\n        }\r\n    };\r\n    Scrollbar.prototype.getRange = function () {\r\n        var min = this.get('minLimit') || 0;\r\n        var max = this.get('maxLimit') || 1;\r\n        return { min: min, max: max };\r\n    };\r\n    Scrollbar.prototype.setValue = function (value) {\r\n        var range = this.getRange();\r\n        var originalValue = this.getValue();\r\n        this.update({\r\n            thumbOffset: (this.get('trackLen') - this.get('thumbLen')) * clamp(value, range.min, range.max),\r\n        });\r\n        this.delegateEmit('valuechange', {\r\n            originalValue: originalValue,\r\n            value: this.getValue(),\r\n        });\r\n    };\r\n    Scrollbar.prototype.getValue = function () {\r\n        return clamp(this.get('thumbOffset') / (this.get('trackLen') - this.get('thumbLen')), 0, 1);\r\n    };\r\n    Scrollbar.prototype.getDefaultCfg = function () {\r\n        var cfg = _super.prototype.getDefaultCfg.call(this);\r\n        return __assign(__assign({}, cfg), { name: 'scrollbar', isHorizontal: true, minThumbLen: 20, thumbOffset: 0, theme: DEFAULT_THEME });\r\n    };\r\n    Scrollbar.prototype.renderInner = function (group) {\r\n        this.renderTrackShape(group);\r\n        this.renderThumbShape(group);\r\n    };\r\n    Scrollbar.prototype.applyOffset = function () {\r\n        this.moveElementTo(this.get('group'), {\r\n            x: this.get('x'),\r\n            y: this.get('y'),\r\n        });\r\n    };\r\n    Scrollbar.prototype.initEvent = function () {\r\n        this.bindEvents();\r\n    };\r\n    // 创建滑道的 shape\r\n    Scrollbar.prototype.renderTrackShape = function (group) {\r\n        var _a = this.cfg, trackLen = _a.trackLen, _b = _a.theme, theme = _b === void 0 ? { default: {} } : _b;\r\n        var _c = deepMix({}, DEFAULT_THEME, theme).default, lineCap = _c.lineCap, trackColor = _c.trackColor, themeSize = _c.size;\r\n        var size = get(this.cfg, 'size', themeSize);\r\n        var attrs = this.get('isHorizontal')\r\n            ? {\r\n                x1: 0 + size / 2,\r\n                y1: size / 2,\r\n                x2: trackLen - size / 2,\r\n                y2: size / 2,\r\n                lineWidth: size,\r\n                stroke: trackColor,\r\n                lineCap: lineCap,\r\n            }\r\n            : {\r\n                x1: size / 2,\r\n                y1: 0 + size / 2,\r\n                x2: size / 2,\r\n                y2: trackLen - size / 2,\r\n                lineWidth: size,\r\n                stroke: trackColor,\r\n                lineCap: lineCap,\r\n            };\r\n        return this.addShape(group, {\r\n            id: this.getElementId('track'),\r\n            name: 'track',\r\n            type: 'line',\r\n            attrs: attrs,\r\n        });\r\n    };\r\n    // 创建滑块的 shape\r\n    Scrollbar.prototype.renderThumbShape = function (group) {\r\n        var _a = this.cfg, thumbOffset = _a.thumbOffset, thumbLen = _a.thumbLen, theme = _a.theme;\r\n        var _b = deepMix({}, DEFAULT_THEME, theme).default, themeSize = _b.size, lineCap = _b.lineCap, thumbColor = _b.thumbColor;\r\n        var size = get(this.cfg, 'size', themeSize);\r\n        var attrs = this.get('isHorizontal')\r\n            ? {\r\n                x1: thumbOffset + size / 2,\r\n                y1: size / 2,\r\n                x2: thumbOffset + thumbLen - size / 2,\r\n                y2: size / 2,\r\n                lineWidth: size,\r\n                stroke: thumbColor,\r\n                lineCap: lineCap,\r\n                cursor: 'default',\r\n            }\r\n            : {\r\n                x1: size / 2,\r\n                y1: thumbOffset + size / 2,\r\n                x2: size / 2,\r\n                y2: thumbOffset + thumbLen - size / 2,\r\n                lineWidth: size,\r\n                stroke: thumbColor,\r\n                lineCap: lineCap,\r\n                cursor: 'default',\r\n            };\r\n        return this.addShape(group, {\r\n            id: this.getElementId('thumb'),\r\n            name: 'thumb',\r\n            type: 'line',\r\n            attrs: attrs,\r\n        });\r\n    };\r\n    Scrollbar.prototype.bindEvents = function () {\r\n        var group = this.get('group');\r\n        group.on('mousedown', this.onStartEvent(false));\r\n        group.on('mouseup', this.onMouseUp);\r\n        group.on('touchstart', this.onStartEvent(true));\r\n        group.on('touchend', this.onMouseUp);\r\n        var trackShape = group.findById(this.getElementId('track'));\r\n        trackShape.on('click', this.onTrackClick);\r\n        var thumbShape = group.findById(this.getElementId('thumb'));\r\n        thumbShape.on('mouseover', this.onThumbMouseOver);\r\n        thumbShape.on('mouseout', this.onThumbMouseOut);\r\n    };\r\n    Scrollbar.prototype.getContainerDOM = function () {\r\n        var container = this.get('container');\r\n        var canvas = container && container.get('canvas');\r\n        return canvas && canvas.get('container');\r\n    };\r\n    Scrollbar.prototype.validateRange = function (offset) {\r\n        var _a = this.cfg, thumbLen = _a.thumbLen, trackLen = _a.trackLen;\r\n        var newOffset = offset;\r\n        if (offset + thumbLen > trackLen) {\r\n            newOffset = trackLen - thumbLen;\r\n        }\r\n        else if (offset + thumbLen < thumbLen) {\r\n            newOffset = 0;\r\n        }\r\n        return newOffset;\r\n    };\r\n    Scrollbar.prototype.draw = function () {\r\n        var container = this.get('container');\r\n        var canvas = container && container.get('canvas');\r\n        if (canvas) {\r\n            canvas.draw();\r\n        }\r\n    };\r\n    Scrollbar.prototype.updateThumbOffset = function (offset) {\r\n        var _a = this.cfg, thumbOffset = _a.thumbOffset, isHorizontal = _a.isHorizontal, thumbLen = _a.thumbLen, size = _a.size;\r\n        var newOffset = this.validateRange(offset);\r\n        if (newOffset === thumbOffset) {\r\n            // 如果更新后的 offset 与原值相同，则不改变\r\n            return;\r\n        }\r\n        var thumbShape = this.getElementByLocalId('thumb');\r\n        if (isHorizontal) {\r\n            thumbShape.attr({\r\n                x1: newOffset + size / 2,\r\n                x2: newOffset + thumbLen - size / 2,\r\n            });\r\n        }\r\n        else {\r\n            thumbShape.attr({\r\n                y1: newOffset + size / 2,\r\n                y2: newOffset + thumbLen - size / 2,\r\n            });\r\n        }\r\n        this.emitOffsetChange(newOffset);\r\n    };\r\n    Scrollbar.prototype.emitOffsetChange = function (offset) {\r\n        var _a = this.cfg, originalValue = _a.thumbOffset, trackLen = _a.trackLen, thumbLen = _a.thumbLen;\r\n        this.cfg.thumbOffset = offset;\r\n        // 发送事件\r\n        this.emit('scrollchange', {\r\n            thumbOffset: offset,\r\n            ratio: clamp(offset / (trackLen - thumbLen), 0, 1),\r\n        });\r\n        this.delegateEmit('valuechange', {\r\n            originalValue: originalValue,\r\n            value: offset,\r\n        });\r\n    };\r\n    return Scrollbar;\r\n}(GroupComponent));\r\nexport { Scrollbar };\r\n//# sourceMappingURL=scrollbar.js.map"]},"metadata":{},"sourceType":"module"}