{"ast":null,"code":"var _jsxFileName = \"D:\\\\SQL\\\\sqlindex2\\\\sql\\\\frontend\\\\src\\\\pages\\\\nhaban\\\\components\\\\chart.js\",\n    _s = $RefreshSig$();\n\nimport { Column } from \"@ant-design/charts\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = () => {\n  _s();\n\n  const [data, setData] = useState([{\n    name: \"Đơn hàng\",\n    date: \"Jan.\",\n    money: 0\n  }, {\n    name: \"Đơn hàng\",\n    date: \"Feb.\",\n    money: 0\n  }, {\n    name: \"Đơn hàng\",\n    date: \"Mar.\",\n    money: 0\n  }, {\n    name: \"Đơn hàng\",\n    date: \"Apr.\",\n    money: 0\n  }, {\n    name: \"Đơn hàng\",\n    date: \"May\",\n    money: 0\n  }, {\n    name: \"Đơn hàng\",\n    date: \"Jun.\",\n    money: 0\n  }, {\n    name: \"Đơn hàng\",\n    date: \"Jul.\",\n    money: 0\n  }, {\n    name: \"Đơn hàng\",\n    date: \"Aug.\",\n    money: 0\n  }, {\n    name: \"Đơn hàng\",\n    date: \"Sep.\",\n    money: 0\n  }, {\n    name: \"Đơn hàng\",\n    date: \"Oct.\",\n    money: 0\n  }, {\n    name: \"Đơn hàng\",\n    date: \"Nov.\",\n    money: 0\n  }, {\n    name: \"Đơn hàng\",\n    date: \"Dec.\",\n    money: 0\n  }]);\n  const [config, setConfig] = useState({\n    data: data,\n    isGroup: true,\n    xField: \"date\",\n    yField: \"money\",\n    seriesField: \"name\",\n    label: {\n      position: \"middle\",\n      layout: [{\n        type: \"interval-adjust-position\"\n      }, {\n        type: \"interval-hide-overlap\"\n      }, {\n        type: \"adjust-color\"\n      }]\n    }\n  });\n  useEffect(() => {\n    const dataW = JSON.parse(window.localStorage.getItem(\"auth\"));\n    axios.get(\"http://localhost:5000/api/nhaban/doanhthu/\" + dataW.MaNhaBan).then(res => {\n      let temp = [{\n        name: \"Đơn hàng\",\n        date: \"Jan.\",\n        money: res.data[0].ThangMot\n      }, {\n        name: \"Đơn hàng\",\n        date: \"Feb.\",\n        money: res.data[0].ThangHai\n      }, {\n        name: \"Đơn hàng\",\n        date: \"Mar.\",\n        money: res.data[0].ThangBa\n      }, {\n        name: \"Đơn hàng\",\n        date: \"Apr.\",\n        money: res.data[0].ThangTu\n      }, {\n        name: \"Đơn hàng\",\n        date: \"May\",\n        money: res.data[0].ThangNam\n      }, {\n        name: \"Đơn hàng\",\n        date: \"Jun.\",\n        money: res.data[0].ThangSau\n      }, {\n        name: \"Đơn hàng\",\n        date: \"Jul.\",\n        money: res.data[0].ThangBay\n      }, {\n        name: \"Đơn hàng\",\n        date: \"Aug.\",\n        money: res.data[0].ThangTam\n      }, {\n        name: \"Đơn hàng\",\n        date: \"Sep.\",\n        money: res.data[0].ThangChin\n      }, {\n        name: \"Đơn hàng\",\n        date: \"Oct.\",\n        money: res.data[0].ThangMuoi\n      }, {\n        name: \"Đơn hàng\",\n        date: \"Nov.\",\n        money: res.data[0].ThangMuoiMot\n      }, {\n        name: \"Đơn hàng\",\n        date: \"Dec.\",\n        money: res.data[0].ThangMuoiHai\n      }];\n      setData(temp);\n      let config = {\n        data: data,\n        isGroup: true,\n        xField: \"date\",\n        yField: \"money\",\n        seriesField: \"name\",\n        label: {\n          position: \"middle\",\n          layout: [{\n            type: \"interval-adjust-position\"\n          }, {\n            type: \"interval-hide-overlap\"\n          }, {\n            type: \"adjust-color\"\n          }]\n        }\n      };\n      setConfig(config);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Column, { ...config\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chart, \"mjO3MPe2O+tYNPLiV+/dZFOh2JM=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["D:/SQL/sqlindex2/sql/frontend/src/pages/nhaban/components/chart.js"],"names":["Column","React","useState","useEffect","axios","Chart","data","setData","name","date","money","config","setConfig","isGroup","xField","yField","seriesField","label","position","layout","type","dataW","JSON","parse","window","localStorage","getItem","get","MaNhaBan","then","res","temp","ThangMot","ThangHai","ThangBa","ThangTu","ThangNam","ThangSau","ThangBay","ThangTam","ThangChin","ThangMuoi","ThangMuoiMot","ThangMuoiHai"],"mappings":"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","sourcesContent":["import { Column } from \"@ant-design/charts\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Chart = () => {\r\n  const [data, setData] = useState([\r\n    {\r\n      name: \"Đơn hàng\",\r\n      date: \"Jan.\",\r\n      money: 0,\r\n    },\r\n    {\r\n      name: \"Đơn hàng\",\r\n      date: \"Feb.\",\r\n      money: 0,\r\n    },\r\n    {\r\n      name: \"Đơn hàng\",\r\n      date: \"Mar.\",\r\n      money: 0,\r\n    },\r\n    {\r\n      name: \"Đơn hàng\",\r\n      date: \"Apr.\",\r\n      money: 0,\r\n    },\r\n    {\r\n      name: \"Đơn hàng\",\r\n      date: \"May\",\r\n      money: 0,\r\n    },\r\n    {\r\n      name: \"Đơn hàng\",\r\n      date: \"Jun.\",\r\n      money: 0,\r\n    },\r\n    {\r\n      name: \"Đơn hàng\",\r\n      date: \"Jul.\",\r\n      money: 0,\r\n    },\r\n    {\r\n      name: \"Đơn hàng\",\r\n      date: \"Aug.\",\r\n      money: 0,\r\n    },\r\n    {\r\n      name: \"Đơn hàng\",\r\n      date: \"Sep.\",\r\n      money: 0,\r\n    },\r\n    {\r\n      name: \"Đơn hàng\",\r\n      date: \"Oct.\",\r\n      money: 0,\r\n    },\r\n    {\r\n      name: \"Đơn hàng\",\r\n      date: \"Nov.\",\r\n      money: 0,\r\n    },\r\n    {\r\n      name: \"Đơn hàng\",\r\n      date: \"Dec.\",\r\n      money: 0,\r\n    },\r\n  ]);\r\n  const [config, setConfig] = useState({\r\n    data: data,\r\n    isGroup: true,\r\n    xField: \"date\",\r\n    yField: \"money\",\r\n    seriesField: \"name\",\r\n    label: {\r\n      position: \"middle\",\r\n      layout: [\r\n        { type: \"interval-adjust-position\" },\r\n        { type: \"interval-hide-overlap\" },\r\n        { type: \"adjust-color\" },\r\n      ],\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    const dataW = JSON.parse(window.localStorage.getItem(\"auth\"));\r\n    axios\r\n      .get(\"http://localhost:5000/api/nhaban/doanhthu/\" + dataW.MaNhaBan)\r\n      .then((res) => {\r\n        let temp = [\r\n          {\r\n            name: \"Đơn hàng\",\r\n            date: \"Jan.\",\r\n            money: res.data[0].ThangMot,\r\n          },\r\n          {\r\n            name: \"Đơn hàng\",\r\n            date: \"Feb.\",\r\n            money: res.data[0].ThangHai,\r\n          },\r\n          {\r\n            name: \"Đơn hàng\",\r\n            date: \"Mar.\",\r\n            money: res.data[0].ThangBa,\r\n          },\r\n          {\r\n            name: \"Đơn hàng\",\r\n            date: \"Apr.\",\r\n            money: res.data[0].ThangTu,\r\n          },\r\n          {\r\n            name: \"Đơn hàng\",\r\n            date: \"May\",\r\n            money: res.data[0].ThangNam,\r\n          },\r\n          {\r\n            name: \"Đơn hàng\",\r\n            date: \"Jun.\",\r\n            money: res.data[0].ThangSau,\r\n          },\r\n          {\r\n            name: \"Đơn hàng\",\r\n            date: \"Jul.\",\r\n            money: res.data[0].ThangBay,\r\n          },\r\n          {\r\n            name: \"Đơn hàng\",\r\n            date: \"Aug.\",\r\n            money: res.data[0].ThangTam,\r\n          },\r\n          {\r\n            name: \"Đơn hàng\",\r\n            date: \"Sep.\",\r\n            money: res.data[0].ThangChin,\r\n          },\r\n          {\r\n            name: \"Đơn hàng\",\r\n            date: \"Oct.\",\r\n            money: res.data[0].ThangMuoi,\r\n          },\r\n          {\r\n            name: \"Đơn hàng\",\r\n            date: \"Nov.\",\r\n            money: res.data[0].ThangMuoiMot,\r\n          },\r\n          {\r\n            name: \"Đơn hàng\",\r\n            date: \"Dec.\",\r\n            money: res.data[0].ThangMuoiHai,\r\n          },\r\n        ];\r\n        setData(temp);\r\n\r\n        let config = {\r\n          data: data,\r\n          isGroup: true,\r\n          xField: \"date\",\r\n          yField: \"money\",\r\n          seriesField: \"name\",\r\n          label: {\r\n            position: \"middle\",\r\n            layout: [\r\n              { type: \"interval-adjust-position\" },\r\n              { type: \"interval-hide-overlap\" },\r\n              { type: \"adjust-color\" },\r\n            ],\r\n          },\r\n        };\r\n\r\n        setConfig(config);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Column {...config} />\r\n    </div>\r\n  );\r\n};\r\nexport default Chart;\r\n"]},"metadata":{},"sourceType":"module"}