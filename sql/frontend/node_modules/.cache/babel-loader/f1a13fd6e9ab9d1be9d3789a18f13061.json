{"ast":null,"code":"import { registerLayout, getLayoutByName } from \"../registy\";\nexport class Layout {\n  constructor(options) {\n    const layoutClass = getLayoutByName(options.type);\n    this.layoutInstance = new layoutClass(options);\n  }\n\n  layout(data) {\n    return this.layoutInstance.layout(data);\n  }\n\n  updateCfg(cfg) {\n    this.layoutInstance.updateCfg(cfg);\n  }\n\n  init(data) {\n    this.layoutInstance.init(data);\n  }\n\n  execute() {\n    this.layoutInstance.execute();\n  }\n\n  getDefaultCfg() {\n    return this.layoutInstance.getDefaultCfg();\n  }\n\n  destroy() {\n    return this.layoutInstance.destroy();\n  }\n\n} // FIXME\n// FOR G6\n// tslint:disable-next-line\n\nexport const Layouts = new Proxy({}, {\n  // tslint:disable-line\n  get: (target, propKey) => {\n    return getLayoutByName(propKey);\n  },\n  set: (target, propKey, value) => {\n    registerLayout(propKey, value);\n    return true;\n  }\n});","map":{"version":3,"sources":["../../src/layout/layout.ts"],"names":[],"mappings":"AAEA,SAAS,cAAT,EAAyB,eAAzB,QAAgD,YAAhD;AAEA,OAAM,MAAO,MAAP,CAAa;AAGjB,EAAA,WAAA,CAAY,OAAZ,EAA0C;AACxC,UAAM,WAAW,GAAG,eAAe,CAAC,OAAO,CAAC,IAAT,CAAnC;AACA,SAAK,cAAL,GAAsB,IAAI,WAAJ,CAAgB,OAAhB,CAAtB;AACD;;AAED,EAAA,MAAM,CAAC,IAAD,EAAY;AAChB,WAAO,KAAK,cAAL,CAAoB,MAApB,CAA2B,IAA3B,CAAP;AACD;;AAED,EAAA,SAAS,CAAC,GAAD,EAA2B;AAClC,SAAK,cAAL,CAAoB,SAApB,CAA8B,GAA9B;AACD;;AAED,EAAA,IAAI,CAAC,IAAD,EAAY;AACd,SAAK,cAAL,CAAoB,IAApB,CAAyB,IAAzB;AACD;;AAED,EAAA,OAAO,GAAA;AACL,SAAK,cAAL,CAAoB,OAApB;AACD;;AAED,EAAA,aAAa,GAAA;AACX,WAAO,KAAK,cAAL,CAAoB,aAApB,EAAP;AACD;;AAED,EAAA,OAAO,GAAA;AACL,WAAO,KAAK,cAAL,CAAoB,OAApB,EAAP;AACD;;AA9BgB,C,CAiCnB;AACA;AACA;;AACA,OAAO,MAAM,OAAO,GAA2B,IAAI,KAAJ,CAC7C,EAD6C,EAE7C;AACE;AACA,EAAA,GAAG,EAAE,CAAC,MAAD,EAAS,OAAT,KAAoB;AACvB,WAAO,eAAe,CAAC,OAAD,CAAtB;AACD,GAJH;AAKE,EAAA,GAAG,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,KAAlB,KAA2B;AAC9B,IAAA,cAAc,CAAC,OAAD,EAAoB,KAApB,CAAd;AACA,WAAO,IAAP;AACD;AARH,CAF6C,CAAxC","sourceRoot":"","sourcesContent":["import { registerLayout, getLayoutByName } from \"../registy\";\r\nexport class Layout {\r\n    constructor(options) {\r\n        const layoutClass = getLayoutByName(options.type);\r\n        this.layoutInstance = new layoutClass(options);\r\n    }\r\n    layout(data) {\r\n        return this.layoutInstance.layout(data);\r\n    }\r\n    updateCfg(cfg) {\r\n        this.layoutInstance.updateCfg(cfg);\r\n    }\r\n    init(data) {\r\n        this.layoutInstance.init(data);\r\n    }\r\n    execute() {\r\n        this.layoutInstance.execute();\r\n    }\r\n    getDefaultCfg() {\r\n        return this.layoutInstance.getDefaultCfg();\r\n    }\r\n    destroy() {\r\n        return this.layoutInstance.destroy();\r\n    }\r\n}\r\n// FIXME\r\n// FOR G6\r\n// tslint:disable-next-line\r\nexport const Layouts = new Proxy({}, {\r\n    // tslint:disable-line\r\n    get: (target, propKey) => {\r\n        return getLayoutByName(propKey);\r\n    },\r\n    set: (target, propKey, value) => {\r\n        registerLayout(propKey, value);\r\n        return true;\r\n    }\r\n});\r\n//# sourceMappingURL=layout.js.map"]},"metadata":{},"sourceType":"module"}