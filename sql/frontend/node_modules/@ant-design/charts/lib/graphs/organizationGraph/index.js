"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var g6_1 = __importDefault(require("@antv/g6"));
var createLoading_1 = __importDefault(require("../../util/createLoading"));
var base_1 = require("../../base");
var useGraph_1 = __importDefault(require("../../hooks/useGraph"));
var useProps_1 = __importDefault(require("../../hooks/useProps"));
var customItems_1 = require("../customItems");
var constants_1 = require("../constants");
var utils_1 = require("../utils");
customItems_1.registerOrganizationCardNode();
var defaultNodeStyle = {
    fill: '#91d5ff',
    stroke: '#40a9ff',
    radius: 2,
};
var defaultLayout = {
    type: 'compactBox',
    direction: 'TB',
    getId: function getId(d) {
        return d.id;
    },
    getHeight: function getHeight() {
        return 16;
    },
    getWidth: function getWidth() {
        return 16;
    },
    getVGap: function getVGap() {
        return 40;
    },
    getHGap: function getHGap() {
        return 70;
    },
};
var defaultProps = {
    nodeCfg: {
        type: 'organization-card',
        size: [100, 44],
        style: defaultNodeStyle,
        padding: 6,
        anchorPoints: [
            [0.5, 0],
            [0.5, 1],
        ],
        nodeStateStyles: constants_1.defaultStateStyles,
        label: {
            style: function (cfg, group, type) {
                var styles = {
                    icon: {
                        width: 32,
                        height: 32,
                    },
                    value: {
                        fill: '#fff',
                    },
                    text: {
                        fill: '#000',
                    },
                };
                return type ? styles[type] : {};
            },
        },
    },
    edgeCfg: {
        type: 'polyline',
        endArrow: {
            type: 'triangle',
            fill: '#91d5ff',
        },
        edgeStateStyles: constants_1.defaultStateStyles,
        style: {
            stroke: '#91d5ff',
        },
    },
    behaviors: ['zoom-canvas', 'drag-canvas'],
    layout: defaultLayout,
    animate: true,
    markerPosition: 'right',
    autoFit: true,
    style: {
        height: 'inherit',
    },
};
var graphs = {};
var OrganizationGraph = function (props) {
    var uProps = useProps_1.default(props, defaultProps).uProps;
    var data = uProps.data, className = uProps.className, style = uProps.style, width = uProps.width, height = uProps.height, animate = uProps.animate, behaviors = uProps.behaviors, nodeCfg = uProps.nodeCfg, layout = uProps.layout, minimapCfg = uProps.minimapCfg, edgeCfg = uProps.edgeCfg, markerCfg = uProps.markerCfg, autoFit = uProps.autoFit, onReady = uProps.onReady, loading = uProps.loading, loadingTemplate = uProps.loadingTemplate, errorTemplate = uProps.errorTemplate;
    var _a = nodeCfg !== null && nodeCfg !== void 0 ? nodeCfg : {}, nodeType = _a.type, nodeSize = _a.size, nodeAnchorPoints = _a.anchorPoints, nodeStateStyles = _a.nodeStateStyles;
    var _b = edgeCfg !== null && edgeCfg !== void 0 ? edgeCfg : {}, edgeType = _b.type, edgeStyle = _b.style, startArrowCfg = _b.startArrow, endArrowCfg = _b.endArrow, labelCfg = _b.label, edgeStateStyles = _b.edgeStateStyles;
    var container = react_1.default.useRef(null);
    var graph = react_1.default.useRef(null);
    var graphId = utils_1.getGraphId(graph);
    useGraph_1.default(graphs[graphId], uProps, container);
    react_1.useEffect(function () {
        var graphSize = utils_1.getGraphSize(width, height, container);
        var graph = graphs[graphId];
        if (!graph) {
            graph = new g6_1.default.TreeGraph({
                container: container.current,
                width: graphSize[0],
                height: graphSize[1],
                animate: animate,
                modes: {
                    default: behaviors,
                },
                defaultNode: {
                    type: nodeType,
                    size: nodeSize,
                    anchorPoints: nodeAnchorPoints,
                    nodeCfg: nodeCfg,
                },
                defaultEdge: {
                    type: edgeType,
                },
                nodeStateStyles: nodeStateStyles,
                edgeStateStyles: edgeStateStyles,
                layout: layout,
            });
            graphs[graphId] = graph;
        }
        // defaultNode 默认只能绑定 plainObject，针对 Function 类型需要通过该模式绑定
        graph.node(function (node) {
            node.markerCfg = markerCfg;
            return {};
        });
        graph.edge(function (edge) {
            var startArrow = utils_1.getArrowCfg(startArrowCfg, edge);
            var endArrow = utils_1.getArrowCfg(endArrowCfg, edge);
            var _a = labelCfg !== null && labelCfg !== void 0 ? labelCfg : {}, style = _a.style, content = _a.content;
            return {
                label: utils_1.getCommonConfig(content, edge, graph),
                labelCfg: {
                    style: utils_1.getCommonConfig(style, edge, graph),
                },
                style: __assign({ stroke: '#ccc', startArrow: startArrow, endArrow: endArrow }, (typeof edgeStyle === 'function' ? edgeStyle(edge, graph) : edgeStyle)),
            };
        });
        utils_1.processMinimap(minimapCfg, graph);
        utils_1.bindStateEvents(graph, uProps);
        utils_1.renderGraph(graph, data, autoFit);
        if (onReady) {
            onReady(graph);
        }
        return function () {
            if (graphs[graphId]) {
                graphs[graphId].destroy();
                delete graphs[graphId];
            }
        };
    }, []);
    return (react_1.default.createElement(base_1.ErrorBoundary, { errorTemplate: errorTemplate },
        loading && react_1.default.createElement(createLoading_1.default, { loadingTemplate: loadingTemplate }),
        react_1.default.createElement("div", { className: className, style: style, ref: container })));
};
exports.default = OrganizationGraph;
