import { MiniMapConfig, CardNodeCfg, IArrowConfig, FlowAnalysisGraphDatum, GraphConfig, IGraph, Graph, IGroup, EdgeConfig, NodeConfig } from './interface';
export declare const getGraphSize: (width: number | undefined, height: number | undefined, container: React.RefObject<HTMLDivElement>) => number[];
export declare const bindDefaultEvents: (graph: IGraph) => void;
export declare const getGraphId: (graph: {
    current?: string;
}) => string;
export declare const renderGraph: (graph: IGraph, data: any, autoFit: boolean | undefined, adjustLayout?: boolean) => void;
export declare const processMinimap: (cfg: MiniMapConfig | undefined, graph: Graph) => import("_@antv_g6-plugin@0.3.4@@antv/g6-plugin").Minimap | null | undefined;
/**
 * min ma
 */
export declare const getMarkerPosition: (direction: string | undefined, size: number[]) => {
    x: number;
    y: number;
};
export declare const bindSourceMapCollapseEvents: (graph: IGraph, fullData: FlowAnalysisGraphDatum | undefined) => void;
/**
 * padding | margin 按 CSS 规则转换
 */
export declare const getCssPadding: (padding: number | number[]) => number[];
export declare const getArrowCfg: (arrowCfg: IArrowConfig | undefined, edge: EdgeConfig) => import("./interface").ArrowConfig | {
    show?: boolean | undefined;
    type?: string | undefined;
    size?: number | undefined;
    d: number;
    path: any;
    stroke?: string | undefined;
    fill: string;
} | undefined;
export declare const bindStateEvents: (graph: IGraph, cfg?: Partial<GraphConfig> | undefined) => void;
export declare const getStyle: (source: unknown, cfg: CardNodeCfg, item?: IGroup | undefined, current?: string | number | undefined) => any;
export declare const getCommonConfig: (cfg: unknown, item: EdgeConfig | NodeConfig | undefined, graph?: IGraph | IGroup | undefined) => any;
